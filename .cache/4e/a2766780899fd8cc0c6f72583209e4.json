{"id":"node_modules/split-array-stream/build/src/index.js","dependencies":[{"name":"/Users/ivanpiedra/Desktop/test/node_modules/split-array-stream/build/src/index.js.map","includedInParent":true,"mtime":1550784600477},{"name":"/Users/ivanpiedra/Desktop/test/package.json","includedInParent":true,"mtime":1550784608667},{"name":"/Users/ivanpiedra/Desktop/test/node_modules/split-array-stream/package.json","includedInParent":true,"mtime":1550784604860},{"name":"is-stream-ended","loc":{"line":38,"column":20},"parent":"/Users/ivanpiedra/Desktop/test/node_modules/split-array-stream/build/src/index.js","resolved":"/Users/ivanpiedra/Desktop/test/node_modules/is-stream-ended/index.js"}],"generated":{"js":"\"use strict\";\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar ended = require(\"is-stream-ended\");\r\n/**\r\n * Push an array of items into a Transform stream.\r\n * @param array The array you want to push to the stream.\r\n * @param stream The Transform stream into which array items are pushed.\r\n */\r\nfunction split(array, stream) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        return __generator(this, function (_a) {\r\n            return [2 /*return*/, new Promise(function (resolve, reject) {\r\n                    var arr = [].slice.call(array);\r\n                    function loopyloop() {\r\n                        // Ensure the stream wasn't closed by the consumer.\r\n                        var isEnded = ended(stream);\r\n                        // Ensure al items from the array haven't been pushed.\r\n                        var cont = !isEnded && arr.length > 0;\r\n                        if (cont) {\r\n                            stream.push(arr.shift());\r\n                            // For large arrays, use setImmediate to ensure other microtasks\r\n                            // and I/O operations have a chance to execute.\r\n                            setImmediate(loopyloop);\r\n                        }\r\n                        else {\r\n                            resolve(isEnded);\r\n                        }\r\n                    }\r\n                    loopyloop();\r\n                })];\r\n        });\r\n    });\r\n}\r\nexports.split = split;\r\n","map":{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,uCAAyC;AAGzC;;;;GAIG;AACH,eAA4B,KAAgB,EAAE,MAAiB;;;YAC7D,sBAAO,IAAI,OAAO,CAAU,UAAC,OAAO,EAAE,MAAM;oBAC1C,IAAM,GAAG,GAAG,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;oBACjC;wBACE,mDAAmD;wBACnD,IAAM,OAAO,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC;wBAC9B,sDAAsD;wBACtD,IAAM,IAAI,GAAG,CAAC,OAAO,IAAI,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC;wBACxC,IAAI,IAAI,EAAE;4BACR,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC,CAAC;4BACzB,gEAAgE;4BAChE,+CAA+C;4BAC/C,YAAY,CAAC,SAAS,CAAC,CAAC;yBACzB;6BAAM;4BACL,OAAO,CAAC,OAAO,CAAC,CAAC;yBAClB;oBACH,CAAC;oBACD,SAAS,EAAE,CAAC;gBACd,CAAC,CAAC,EAAC;;;CACJ;AAnBD,sBAmBC","sourcesContent":[null]}},"hash":"9535b51a30ad2f1a230141da74300001","cacheData":{"env":{}}}