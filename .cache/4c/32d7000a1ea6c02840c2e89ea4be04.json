{"id":"node_modules/@google-cloud/projectify/build/src/index.js","dependencies":[{"name":"/Users/ivanpiedra/Desktop/test/package.json","includedInParent":true,"mtime":1550784608667},{"name":"/Users/ivanpiedra/Desktop/test/node_modules/@google-cloud/projectify/package.json","includedInParent":true,"mtime":1550784604574},{"name":"stream","loc":{"line":3,"column":25},"parent":"/Users/ivanpiedra/Desktop/test/node_modules/@google-cloud/projectify/build/src/index.js","resolved":"/Users/ivanpiedra/Desktop/test/node_modules/stream-browserify/index.js"},{"name":"buffer","parent":"/Users/ivanpiedra/Desktop/test/node_modules/@google-cloud/projectify/build/src/index.js","resolved":"/Users/ivanpiedra/Desktop/test/node_modules/buffer/index.js"}],"generated":{"js":"var Buffer = require(\"buffer\").Buffer;\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst stream_1 = require(\"stream\");\n/**\n * Copyright 2014 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Populate the `{{projectId}}` placeholder.\n *\n * @throws {Error} If a projectId is required, but one is not provided.\n *\n * @param {*} - Any input value that may contain a placeholder. Arrays and objects will be looped.\n * @param {string} projectId - A projectId. If not provided\n * @return {*} - The original argument with all placeholders populated.\n */\n// tslint:disable-next-line:no-any\nfunction replaceProjectIdToken(value, projectId) {\n    if (Array.isArray(value)) {\n        value = value.map(v => replaceProjectIdToken(v, projectId));\n    }\n    if (value !== null && typeof value === 'object' &&\n        !(value instanceof Buffer) && !(value instanceof stream_1.Stream) &&\n        typeof value.hasOwnProperty === 'function') {\n        for (const opt in value) {\n            if (value.hasOwnProperty(opt)) {\n                value[opt] = replaceProjectIdToken(value[opt], projectId);\n            }\n        }\n    }\n    if (typeof value === 'string' &&\n        value.indexOf('{{projectId}}') > -1) {\n        if (!projectId || projectId === '{{projectId}}') {\n            throw new MissingProjectIdError();\n        }\n        value = value.replace(/{{projectId}}/g, projectId);\n    }\n    return value;\n}\nexports.replaceProjectIdToken = replaceProjectIdToken;\n/**\n * Custom error type for missing project ID errors.\n */\nclass MissingProjectIdError extends Error {\n    constructor() {\n        super(...arguments);\n        this.message = `Sorry, we cannot connect to Cloud Services without a project\n    ID. You may specify one with an environment variable named\n    \"GOOGLE_CLOUD_PROJECT\".`.replace(/ +/g, ' ');\n    }\n}\nexports.MissingProjectIdError = MissingProjectIdError;\n","map":{"mappings":[{"source":"node_modules/@google-cloud/projectify/build/src/index.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/@google-cloud/projectify/build/src/index.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/@google-cloud/projectify/build/src/index.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/@google-cloud/projectify/build/src/index.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/@google-cloud/projectify/build/src/index.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/@google-cloud/projectify/build/src/index.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/@google-cloud/projectify/build/src/index.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/@google-cloud/projectify/build/src/index.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/@google-cloud/projectify/build/src/index.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/@google-cloud/projectify/build/src/index.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/@google-cloud/projectify/build/src/index.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/@google-cloud/projectify/build/src/index.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/@google-cloud/projectify/build/src/index.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/@google-cloud/projectify/build/src/index.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/@google-cloud/projectify/build/src/index.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/@google-cloud/projectify/build/src/index.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/@google-cloud/projectify/build/src/index.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/@google-cloud/projectify/build/src/index.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/@google-cloud/projectify/build/src/index.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/@google-cloud/projectify/build/src/index.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/@google-cloud/projectify/build/src/index.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/@google-cloud/projectify/build/src/index.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/@google-cloud/projectify/build/src/index.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/@google-cloud/projectify/build/src/index.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/@google-cloud/projectify/build/src/index.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/@google-cloud/projectify/build/src/index.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/@google-cloud/projectify/build/src/index.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/@google-cloud/projectify/build/src/index.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/@google-cloud/projectify/build/src/index.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/@google-cloud/projectify/build/src/index.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/@google-cloud/projectify/build/src/index.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/@google-cloud/projectify/build/src/index.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/@google-cloud/projectify/build/src/index.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/@google-cloud/projectify/build/src/index.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/@google-cloud/projectify/build/src/index.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/@google-cloud/projectify/build/src/index.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/@google-cloud/projectify/build/src/index.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/@google-cloud/projectify/build/src/index.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/@google-cloud/projectify/build/src/index.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/@google-cloud/projectify/build/src/index.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/@google-cloud/projectify/build/src/index.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/@google-cloud/projectify/build/src/index.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/@google-cloud/projectify/build/src/index.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/@google-cloud/projectify/build/src/index.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/@google-cloud/projectify/build/src/index.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/@google-cloud/projectify/build/src/index.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/@google-cloud/projectify/build/src/index.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/@google-cloud/projectify/build/src/index.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/@google-cloud/projectify/build/src/index.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/@google-cloud/projectify/build/src/index.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/@google-cloud/projectify/build/src/index.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/@google-cloud/projectify/build/src/index.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/@google-cloud/projectify/build/src/index.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/@google-cloud/projectify/build/src/index.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/@google-cloud/projectify/build/src/index.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/@google-cloud/projectify/build/src/index.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/@google-cloud/projectify/build/src/index.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/@google-cloud/projectify/build/src/index.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/@google-cloud/projectify/build/src/index.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/@google-cloud/projectify/build/src/index.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/@google-cloud/projectify/build/src/index.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/@google-cloud/projectify/build/src/index.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/@google-cloud/projectify/build/src/index.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/@google-cloud/projectify/build/src/index.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}}],"sources":{"node_modules/@google-cloud/projectify/build/src/index.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst stream_1 = require(\"stream\");\n/**\n * Copyright 2014 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Populate the `{{projectId}}` placeholder.\n *\n * @throws {Error} If a projectId is required, but one is not provided.\n *\n * @param {*} - Any input value that may contain a placeholder. Arrays and objects will be looped.\n * @param {string} projectId - A projectId. If not provided\n * @return {*} - The original argument with all placeholders populated.\n */\n// tslint:disable-next-line:no-any\nfunction replaceProjectIdToken(value, projectId) {\n    if (Array.isArray(value)) {\n        value = value.map(v => replaceProjectIdToken(v, projectId));\n    }\n    if (value !== null && typeof value === 'object' &&\n        !(value instanceof Buffer) && !(value instanceof stream_1.Stream) &&\n        typeof value.hasOwnProperty === 'function') {\n        for (const opt in value) {\n            if (value.hasOwnProperty(opt)) {\n                value[opt] = replaceProjectIdToken(value[opt], projectId);\n            }\n        }\n    }\n    if (typeof value === 'string' &&\n        value.indexOf('{{projectId}}') > -1) {\n        if (!projectId || projectId === '{{projectId}}') {\n            throw new MissingProjectIdError();\n        }\n        value = value.replace(/{{projectId}}/g, projectId);\n    }\n    return value;\n}\nexports.replaceProjectIdToken = replaceProjectIdToken;\n/**\n * Custom error type for missing project ID errors.\n */\nclass MissingProjectIdError extends Error {\n    constructor() {\n        super(...arguments);\n        this.message = `Sorry, we cannot connect to Cloud Services without a project\n    ID. You may specify one with an environment variable named\n    \"GOOGLE_CLOUD_PROJECT\".`.replace(/ +/g, ' ');\n    }\n}\nexports.MissingProjectIdError = MissingProjectIdError;\n"},"lineCount":65}},"hash":"8a28084ed5e6f6c5a02a1624138d8065","cacheData":{"env":{}}}