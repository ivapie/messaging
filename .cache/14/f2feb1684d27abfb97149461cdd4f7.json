{"id":"node_modules/@google-cloud/firestore/build/src/document-change.js","dependencies":[{"name":"/Users/ivanpiedra/Desktop/test/package.json","includedInParent":true,"mtime":1550784608667},{"name":"/Users/ivanpiedra/Desktop/test/node_modules/@google-cloud/firestore/package.json","includedInParent":true,"mtime":1550784604715}],"generated":{"js":"\"use strict\";\n/*!\n * Copyright 2018 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * A DocumentChange represents a change to the documents matching a query.\n * It contains the document affected and the type of change that occurred.\n *\n * @class\n */\n\nvar DocumentChange =\n/*#__PURE__*/\nfunction () {\n  /**\n   * @private\n   * @hideconstructor\n   *\n   * @param {string} type 'added' | 'removed' | 'modified'.\n   * @param {QueryDocumentSnapshot} document The document.\n   * @param {number} oldIndex The index in the documents array prior to this\n   * change.\n   * @param {number} newIndex The index in the documents array after this\n   * change.\n   */\n  function DocumentChange(type, document, oldIndex, newIndex) {\n    _classCallCheck(this, DocumentChange);\n\n    this._type = type;\n    this._document = document;\n    this._oldIndex = oldIndex;\n    this._newIndex = newIndex;\n  }\n  /**\n   * The type of change ('added', 'modified', or 'removed').\n   *\n   * @type {string}\n   * @name DocumentChange#type\n   * @readonly\n   *\n   * @example\n   * let query = firestore.collection('col').where('foo', '==', 'bar');\n   * let docsArray = [];\n   *\n   * let unsubscribe = query.onSnapshot(querySnapshot => {\n   *   for (let change of querySnapshot.docChanges) {\n   *     console.log(`Type of change is ${change.type}`);\n   *   }\n   * });\n   *\n   * // Remove this listener.\n   * unsubscribe();\n   */\n\n\n  _createClass(DocumentChange, [{\n    key: \"isEqual\",\n\n    /**\n     * Returns true if the data in this `DocumentChange` is equal to the provided\n     * value.\n     *\n     * @param {*} other The value to compare against.\n     * @return true if this `DocumentChange` is equal to the provided value.\n     */\n    value: function isEqual(other) {\n      if (this === other) {\n        return true;\n      }\n\n      return other instanceof DocumentChange && this._type === other._type && this._oldIndex === other._oldIndex && this._newIndex === other._newIndex && this._document.isEqual(other._document);\n    }\n  }, {\n    key: \"type\",\n    get: function () {\n      return this._type;\n    }\n    /**\n     * The document affected by this change.\n     *\n     * @type {QueryDocumentSnapshot}\n     * @name DocumentChange#doc\n     * @readonly\n     *\n     * @example\n     * let query = firestore.collection('col').where('foo', '==', 'bar');\n     *\n     * let unsubscribe = query.onSnapshot(querySnapshot => {\n     *   for (let change of querySnapshot.docChanges) {\n     *     console.log(change.doc.data());\n     *   }\n     * });\n     *\n     * // Remove this listener.\n     * unsubscribe();\n     */\n\n  }, {\n    key: \"doc\",\n    get: function () {\n      return this._document;\n    }\n    /**\n     * The index of the changed document in the result set immediately prior to\n     * this DocumentChange (i.e. supposing that all prior DocumentChange objects\n     * have been applied). Is -1 for 'added' events.\n     *\n     * @type {number}\n     * @name DocumentChange#oldIndex\n     * @readonly\n     *\n     * @example\n     * let query = firestore.collection('col').where('foo', '==', 'bar');\n     * let docsArray = [];\n     *\n     * let unsubscribe = query.onSnapshot(querySnapshot => {\n     *   for (let change of querySnapshot.docChanges) {\n     *     if (change.oldIndex !== -1) {\n     *       docsArray.splice(change.oldIndex, 1);\n     *     }\n     *     if (change.newIndex !== -1) {\n     *       docsArray.splice(change.newIndex, 0, change.doc);\n     *     }\n     *   }\n     * });\n     *\n     * // Remove this listener.\n     * unsubscribe();\n     */\n\n  }, {\n    key: \"oldIndex\",\n    get: function () {\n      return this._oldIndex;\n    }\n    /**\n     * The index of the changed document in the result set immediately after\n     * this DocumentChange (i.e. supposing that all prior DocumentChange\n     * objects and the current DocumentChange object have been applied).\n     * Is -1 for 'removed' events.\n     *\n     * @type {number}\n     * @name DocumentChange#newIndex\n     * @readonly\n     *\n     * @example\n     * let query = firestore.collection('col').where('foo', '==', 'bar');\n     * let docsArray = [];\n     *\n     * let unsubscribe = query.onSnapshot(querySnapshot => {\n     *   for (let change of querySnapshot.docChanges) {\n     *     if (change.oldIndex !== -1) {\n     *       docsArray.splice(change.oldIndex, 1);\n     *     }\n     *     if (change.newIndex !== -1) {\n     *       docsArray.splice(change.newIndex, 0, change.doc);\n     *     }\n     *   }\n     * });\n     *\n     * // Remove this listener.\n     * unsubscribe();\n     */\n\n  }, {\n    key: \"newIndex\",\n    get: function () {\n      return this._newIndex;\n    }\n  }]);\n\n  return DocumentChange;\n}();\n\nexports.DocumentChange = DocumentChange;","map":{"mappings":[{"generated":{"line":1,"column":0},"source":"node_modules/@google-cloud/firestore/build/src/document-change.js","original":{"line":1,"column":0}},{"generated":{"line":2,"column":0},"source":"node_modules/@google-cloud/firestore/build/src/document-change.js","original":{"line":2,"column":0}},{"name":"Object","generated":{"line":24,"column":0},"source":"node_modules/@google-cloud/firestore/build/src/document-change.js","original":{"line":17,"column":0}},{"generated":{"line":24,"column":6},"source":"node_modules/@google-cloud/firestore/build/src/document-change.js","original":{"line":17,"column":6}},{"name":"defineProperty","generated":{"line":24,"column":7},"source":"node_modules/@google-cloud/firestore/build/src/document-change.js","original":{"line":17,"column":7}},{"generated":{"line":24,"column":21},"source":"node_modules/@google-cloud/firestore/build/src/document-change.js","original":{"line":17,"column":0}},{"name":"exports","generated":{"line":24,"column":22},"source":"node_modules/@google-cloud/firestore/build/src/document-change.js","original":{"line":17,"column":22}},{"generated":{"line":24,"column":29},"source":"node_modules/@google-cloud/firestore/build/src/document-change.js","original":{"line":17,"column":0}},{"generated":{"line":24,"column":31},"source":"node_modules/@google-cloud/firestore/build/src/document-change.js","original":{"line":17,"column":31}},{"generated":{"line":24,"column":43},"source":"node_modules/@google-cloud/firestore/build/src/document-change.js","original":{"line":17,"column":0}},{"generated":{"line":24,"column":45},"source":"node_modules/@google-cloud/firestore/build/src/document-change.js","original":{"line":17,"column":45}},{"name":"value","generated":{"line":25,"column":0},"source":"node_modules/@google-cloud/firestore/build/src/document-change.js","original":{"line":17,"column":47}},{"name":"value","generated":{"line":25,"column":2},"source":"node_modules/@google-cloud/firestore/build/src/document-change.js","original":{"line":17,"column":47}},{"generated":{"line":25,"column":7},"source":"node_modules/@google-cloud/firestore/build/src/document-change.js","original":{"line":17,"column":52}},{"generated":{"line":25,"column":9},"source":"node_modules/@google-cloud/firestore/build/src/document-change.js","original":{"line":17,"column":54}},{"generated":{"line":26,"column":0},"source":"node_modules/@google-cloud/firestore/build/src/document-change.js","original":{"line":17,"column":45}},{"generated":{"line":26,"column":1},"source":"node_modules/@google-cloud/firestore/build/src/document-change.js","original":{"line":17,"column":0}},{"generated":{"line":27,"column":0},"source":"node_modules/@google-cloud/firestore/build/src/document-change.js","original":{"line":18,"column":0}},{"name":"DocumentChange","generated":{"line":34,"column":4},"source":"node_modules/@google-cloud/firestore/build/src/document-change.js","original":{"line":24,"column":6}},{"generated":{"line":37,"column":0},"source":"node_modules/@google-cloud/firestore/build/src/document-change.js","original":{"line":25,"column":4}},{"generated":{"line":48,"column":0},"source":"node_modules/@google-cloud/firestore/build/src/document-change.js","original":{"line":36,"column":4}},{"name":"type","generated":{"line":48,"column":26},"source":"node_modules/@google-cloud/firestore/build/src/document-change.js","original":{"line":36,"column":16}},{"generated":{"line":48,"column":30},"source":"node_modules/@google-cloud/firestore/build/src/document-change.js","original":{"line":36,"column":4}},{"name":"document","generated":{"line":48,"column":32},"source":"node_modules/@google-cloud/firestore/build/src/document-change.js","original":{"line":36,"column":22}},{"generated":{"line":48,"column":40},"source":"node_modules/@google-cloud/firestore/build/src/document-change.js","original":{"line":36,"column":4}},{"name":"oldIndex","generated":{"line":48,"column":42},"source":"node_modules/@google-cloud/firestore/build/src/document-change.js","original":{"line":36,"column":32}},{"generated":{"line":48,"column":50},"source":"node_modules/@google-cloud/firestore/build/src/document-change.js","original":{"line":36,"column":4}},{"name":"newIndex","generated":{"line":48,"column":52},"source":"node_modules/@google-cloud/firestore/build/src/document-change.js","original":{"line":36,"column":42}},{"generated":{"line":48,"column":60},"source":"node_modules/@google-cloud/firestore/build/src/document-change.js","original":{"line":36,"column":4}},{"generated":{"line":48,"column":62},"source":"node_modules/@google-cloud/firestore/build/src/document-change.js","original":{"line":36,"column":52}},{"generated":{"line":49,"column":0},"source":"node_modules/@google-cloud/firestore/build/src/document-change.js","original":{"line":36,"column":52}},{"generated":{"line":51,"column":0},"source":"node_modules/@google-cloud/firestore/build/src/document-change.js","original":{"line":37,"column":8}},{"name":"_type","generated":{"line":51,"column":9},"source":"node_modules/@google-cloud/firestore/build/src/document-change.js","original":{"line":37,"column":13}},{"generated":{"line":51,"column":14},"source":"node_modules/@google-cloud/firestore/build/src/document-change.js","original":{"line":37,"column":8}},{"name":"type","generated":{"line":51,"column":17},"source":"node_modules/@google-cloud/firestore/build/src/document-change.js","original":{"line":37,"column":21}},{"generated":{"line":51,"column":21},"source":"node_modules/@google-cloud/firestore/build/src/document-change.js","original":{"line":37,"column":8}},{"generated":{"line":52,"column":0},"source":"node_modules/@google-cloud/firestore/build/src/document-change.js","original":{"line":38,"column":8}},{"name":"_document","generated":{"line":52,"column":9},"source":"node_modules/@google-cloud/firestore/build/src/document-change.js","original":{"line":38,"column":13}},{"generated":{"line":52,"column":18},"source":"node_modules/@google-cloud/firestore/build/src/document-change.js","original":{"line":38,"column":8}},{"name":"document","generated":{"line":52,"column":21},"source":"node_modules/@google-cloud/firestore/build/src/document-change.js","original":{"line":38,"column":25}},{"generated":{"line":52,"column":29},"source":"node_modules/@google-cloud/firestore/build/src/document-change.js","original":{"line":38,"column":8}},{"generated":{"line":53,"column":0},"source":"node_modules/@google-cloud/firestore/build/src/document-change.js","original":{"line":39,"column":8}},{"name":"_oldIndex","generated":{"line":53,"column":9},"source":"node_modules/@google-cloud/firestore/build/src/document-change.js","original":{"line":39,"column":13}},{"generated":{"line":53,"column":18},"source":"node_modules/@google-cloud/firestore/build/src/document-change.js","original":{"line":39,"column":8}},{"name":"oldIndex","generated":{"line":53,"column":21},"source":"node_modules/@google-cloud/firestore/build/src/document-change.js","original":{"line":39,"column":25}},{"generated":{"line":53,"column":29},"source":"node_modules/@google-cloud/firestore/build/src/document-change.js","original":{"line":39,"column":8}},{"generated":{"line":54,"column":0},"source":"node_modules/@google-cloud/firestore/build/src/document-change.js","original":{"line":40,"column":8}},{"name":"_newIndex","generated":{"line":54,"column":9},"source":"node_modules/@google-cloud/firestore/build/src/document-change.js","original":{"line":40,"column":13}},{"generated":{"line":54,"column":18},"source":"node_modules/@google-cloud/firestore/build/src/document-change.js","original":{"line":40,"column":8}},{"name":"newIndex","generated":{"line":54,"column":21},"source":"node_modules/@google-cloud/firestore/build/src/document-change.js","original":{"line":40,"column":25}},{"generated":{"line":54,"column":29},"source":"node_modules/@google-cloud/firestore/build/src/document-change.js","original":{"line":40,"column":8}},{"generated":{"line":55,"column":0},"source":"node_modules/@google-cloud/firestore/build/src/document-change.js","original":{"line":41,"column":5}},{"generated":{"line":56,"column":0},"source":"node_modules/@google-cloud/firestore/build/src/document-change.js","original":{"line":42,"column":4}},{"generated":{"line":81,"column":0},"source":"node_modules/@google-cloud/firestore/build/src/document-change.js","original":{"line":148,"column":4}},{"name":"other","generated":{"line":88,"column":28},"source":"node_modules/@google-cloud/firestore/build/src/document-change.js","original":{"line":155,"column":12}},{"generated":{"line":88,"column":35},"source":"node_modules/@google-cloud/firestore/build/src/document-change.js","original":{"line":155,"column":19}},{"generated":{"line":89,"column":0},"source":"node_modules/@google-cloud/firestore/build/src/document-change.js","original":{"line":156,"column":8}},{"generated":{"line":89,"column":10},"source":"node_modules/@google-cloud/firestore/build/src/document-change.js","original":{"line":156,"column":12}},{"name":"other","generated":{"line":89,"column":19},"source":"node_modules/@google-cloud/firestore/build/src/document-change.js","original":{"line":156,"column":21}},{"generated":{"line":89,"column":24},"source":"node_modules/@google-cloud/firestore/build/src/document-change.js","original":{"line":156,"column":8}},{"generated":{"line":89,"column":26},"source":"node_modules/@google-cloud/firestore/build/src/document-change.js","original":{"line":156,"column":28}},{"generated":{"line":90,"column":0},"source":"node_modules/@google-cloud/firestore/build/src/document-change.js","original":{"line":157,"column":12}},{"generated":{"line":90,"column":15},"source":"node_modules/@google-cloud/firestore/build/src/document-change.js","original":{"line":157,"column":19}},{"generated":{"line":90,"column":19},"source":"node_modules/@google-cloud/firestore/build/src/document-change.js","original":{"line":157,"column":12}},{"generated":{"line":91,"column":0},"source":"node_modules/@google-cloud/firestore/build/src/document-change.js","original":{"line":158,"column":9}},{"generated":{"line":93,"column":0},"source":"node_modules/@google-cloud/firestore/build/src/document-change.js","original":{"line":159,"column":8}},{"name":"other","generated":{"line":93,"column":13},"source":"node_modules/@google-cloud/firestore/build/src/document-change.js","original":{"line":159,"column":16}},{"generated":{"line":93,"column":18},"source":"node_modules/@google-cloud/firestore/build/src/document-change.js","original":{"line":159,"column":21}},{"name":"DocumentChange","generated":{"line":93,"column":30},"source":"node_modules/@google-cloud/firestore/build/src/document-change.js","original":{"line":159,"column":33}},{"generated":{"line":93,"column":44},"source":"node_modules/@google-cloud/firestore/build/src/document-change.js","original":{"line":159,"column":16}},{"generated":{"line":93,"column":48},"source":"node_modules/@google-cloud/firestore/build/src/document-change.js","original":{"line":159,"column":51}},{"name":"_type","generated":{"line":93,"column":53},"source":"node_modules/@google-cloud/firestore/build/src/document-change.js","original":{"line":159,"column":56}},{"generated":{"line":93,"column":58},"source":"node_modules/@google-cloud/firestore/build/src/document-change.js","original":{"line":159,"column":51}},{"name":"other","generated":{"line":93,"column":63},"source":"node_modules/@google-cloud/firestore/build/src/document-change.js","original":{"line":159,"column":66}},{"generated":{"line":93,"column":68},"source":"node_modules/@google-cloud/firestore/build/src/document-change.js","original":{"line":159,"column":71}},{"name":"_type","generated":{"line":93,"column":69},"source":"node_modules/@google-cloud/firestore/build/src/document-change.js","original":{"line":159,"column":72}},{"generated":{"line":93,"column":74},"source":"node_modules/@google-cloud/firestore/build/src/document-change.js","original":{"line":159,"column":16}},{"generated":{"line":93,"column":78},"source":"node_modules/@google-cloud/firestore/build/src/document-change.js","original":{"line":160,"column":12}},{"name":"_oldIndex","generated":{"line":93,"column":83},"source":"node_modules/@google-cloud/firestore/build/src/document-change.js","original":{"line":160,"column":17}},{"generated":{"line":93,"column":92},"source":"node_modules/@google-cloud/firestore/build/src/document-change.js","original":{"line":160,"column":12}},{"name":"other","generated":{"line":93,"column":97},"source":"node_modules/@google-cloud/firestore/build/src/document-change.js","original":{"line":160,"column":31}},{"generated":{"line":93,"column":102},"source":"node_modules/@google-cloud/firestore/build/src/document-change.js","original":{"line":160,"column":36}},{"name":"_oldIndex","generated":{"line":93,"column":103},"source":"node_modules/@google-cloud/firestore/build/src/document-change.js","original":{"line":160,"column":37}},{"generated":{"line":93,"column":112},"source":"node_modules/@google-cloud/firestore/build/src/document-change.js","original":{"line":159,"column":16}},{"generated":{"line":93,"column":116},"source":"node_modules/@google-cloud/firestore/build/src/document-change.js","original":{"line":161,"column":12}},{"name":"_newIndex","generated":{"line":93,"column":121},"source":"node_modules/@google-cloud/firestore/build/src/document-change.js","original":{"line":161,"column":17}},{"generated":{"line":93,"column":130},"source":"node_modules/@google-cloud/firestore/build/src/document-change.js","original":{"line":161,"column":12}},{"name":"other","generated":{"line":93,"column":135},"source":"node_modules/@google-cloud/firestore/build/src/document-change.js","original":{"line":161,"column":31}},{"generated":{"line":93,"column":140},"source":"node_modules/@google-cloud/firestore/build/src/document-change.js","original":{"line":161,"column":36}},{"name":"_newIndex","generated":{"line":93,"column":141},"source":"node_modules/@google-cloud/firestore/build/src/document-change.js","original":{"line":161,"column":37}},{"generated":{"line":93,"column":150},"source":"node_modules/@google-cloud/firestore/build/src/document-change.js","original":{"line":159,"column":16}},{"generated":{"line":93,"column":154},"source":"node_modules/@google-cloud/firestore/build/src/document-change.js","original":{"line":162,"column":12}},{"name":"_document","generated":{"line":93,"column":159},"source":"node_modules/@google-cloud/firestore/build/src/document-change.js","original":{"line":162,"column":17}},{"generated":{"line":93,"column":168},"source":"node_modules/@google-cloud/firestore/build/src/document-change.js","original":{"line":162,"column":12}},{"name":"isEqual","generated":{"line":93,"column":169},"source":"node_modules/@google-cloud/firestore/build/src/document-change.js","original":{"line":162,"column":27}},{"generated":{"line":93,"column":176},"source":"node_modules/@google-cloud/firestore/build/src/document-change.js","original":{"line":162,"column":12}},{"name":"other","generated":{"line":93,"column":177},"source":"node_modules/@google-cloud/firestore/build/src/document-change.js","original":{"line":162,"column":35}},{"generated":{"line":93,"column":182},"source":"node_modules/@google-cloud/firestore/build/src/document-change.js","original":{"line":162,"column":40}},{"name":"_document","generated":{"line":93,"column":183},"source":"node_modules/@google-cloud/firestore/build/src/document-change.js","original":{"line":162,"column":41}},{"generated":{"line":93,"column":192},"source":"node_modules/@google-cloud/firestore/build/src/document-change.js","original":{"line":162,"column":12}},{"generated":{"line":93,"column":193},"source":"node_modules/@google-cloud/firestore/build/src/document-change.js","original":{"line":159,"column":8}},{"generated":{"line":94,"column":0},"source":"node_modules/@google-cloud/firestore/build/src/document-change.js","original":{"line":163,"column":5}},{"generated":{"line":97,"column":21},"source":"node_modules/@google-cloud/firestore/build/src/document-change.js","original":{"line":62,"column":15}},{"generated":{"line":98,"column":0},"source":"node_modules/@google-cloud/firestore/build/src/document-change.js","original":{"line":63,"column":8}},{"generated":{"line":98,"column":13},"source":"node_modules/@google-cloud/firestore/build/src/document-change.js","original":{"line":63,"column":15}},{"name":"_type","generated":{"line":98,"column":18},"source":"node_modules/@google-cloud/firestore/build/src/document-change.js","original":{"line":63,"column":20}},{"generated":{"line":98,"column":23},"source":"node_modules/@google-cloud/firestore/build/src/document-change.js","original":{"line":63,"column":8}},{"generated":{"line":99,"column":0},"source":"node_modules/@google-cloud/firestore/build/src/document-change.js","original":{"line":64,"column":5}},{"generated":{"line":100,"column":0},"source":"node_modules/@google-cloud/firestore/build/src/document-change.js","original":{"line":65,"column":4}},{"generated":{"line":122,"column":21},"source":"node_modules/@google-cloud/firestore/build/src/document-change.js","original":{"line":84,"column":14}},{"generated":{"line":123,"column":0},"source":"node_modules/@google-cloud/firestore/build/src/document-change.js","original":{"line":85,"column":8}},{"generated":{"line":123,"column":13},"source":"node_modules/@google-cloud/firestore/build/src/document-change.js","original":{"line":85,"column":15}},{"name":"_document","generated":{"line":123,"column":18},"source":"node_modules/@google-cloud/firestore/build/src/document-change.js","original":{"line":85,"column":20}},{"generated":{"line":123,"column":27},"source":"node_modules/@google-cloud/firestore/build/src/document-change.js","original":{"line":85,"column":8}},{"generated":{"line":124,"column":0},"source":"node_modules/@google-cloud/firestore/build/src/document-change.js","original":{"line":86,"column":5}},{"generated":{"line":125,"column":0},"source":"node_modules/@google-cloud/firestore/build/src/document-change.js","original":{"line":87,"column":4}},{"generated":{"line":155,"column":21},"source":"node_modules/@google-cloud/firestore/build/src/document-change.js","original":{"line":114,"column":19}},{"generated":{"line":156,"column":0},"source":"node_modules/@google-cloud/firestore/build/src/document-change.js","original":{"line":115,"column":8}},{"generated":{"line":156,"column":13},"source":"node_modules/@google-cloud/firestore/build/src/document-change.js","original":{"line":115,"column":15}},{"name":"_oldIndex","generated":{"line":156,"column":18},"source":"node_modules/@google-cloud/firestore/build/src/document-change.js","original":{"line":115,"column":20}},{"generated":{"line":156,"column":27},"source":"node_modules/@google-cloud/firestore/build/src/document-change.js","original":{"line":115,"column":8}},{"generated":{"line":157,"column":0},"source":"node_modules/@google-cloud/firestore/build/src/document-change.js","original":{"line":116,"column":5}},{"generated":{"line":158,"column":0},"source":"node_modules/@google-cloud/firestore/build/src/document-change.js","original":{"line":117,"column":4}},{"generated":{"line":189,"column":21},"source":"node_modules/@google-cloud/firestore/build/src/document-change.js","original":{"line":145,"column":19}},{"generated":{"line":190,"column":0},"source":"node_modules/@google-cloud/firestore/build/src/document-change.js","original":{"line":146,"column":8}},{"generated":{"line":190,"column":13},"source":"node_modules/@google-cloud/firestore/build/src/document-change.js","original":{"line":146,"column":15}},{"name":"_newIndex","generated":{"line":190,"column":18},"source":"node_modules/@google-cloud/firestore/build/src/document-change.js","original":{"line":146,"column":20}},{"generated":{"line":190,"column":27},"source":"node_modules/@google-cloud/firestore/build/src/document-change.js","original":{"line":146,"column":8}},{"generated":{"line":191,"column":0},"source":"node_modules/@google-cloud/firestore/build/src/document-change.js","original":{"line":147,"column":5}},{"name":"exports","generated":{"line":197,"column":0},"source":"node_modules/@google-cloud/firestore/build/src/document-change.js","original":{"line":165,"column":0}},{"generated":{"line":197,"column":7},"source":"node_modules/@google-cloud/firestore/build/src/document-change.js","original":{"line":165,"column":7}},{"name":"DocumentChange","generated":{"line":197,"column":8},"source":"node_modules/@google-cloud/firestore/build/src/document-change.js","original":{"line":165,"column":8}},{"generated":{"line":197,"column":22},"source":"node_modules/@google-cloud/firestore/build/src/document-change.js","original":{"line":165,"column":0}},{"name":"DocumentChange","generated":{"line":197,"column":25},"source":"node_modules/@google-cloud/firestore/build/src/document-change.js","original":{"line":165,"column":25}},{"generated":{"line":197,"column":39},"source":"node_modules/@google-cloud/firestore/build/src/document-change.js","original":{"line":165,"column":0}}],"sources":{"node_modules/@google-cloud/firestore/build/src/document-change.js":"\"use strict\";\n/*!\n * Copyright 2018 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * A DocumentChange represents a change to the documents matching a query.\n * It contains the document affected and the type of change that occurred.\n *\n * @class\n */\nclass DocumentChange {\n    /**\n     * @private\n     * @hideconstructor\n     *\n     * @param {string} type 'added' | 'removed' | 'modified'.\n     * @param {QueryDocumentSnapshot} document The document.\n     * @param {number} oldIndex The index in the documents array prior to this\n     * change.\n     * @param {number} newIndex The index in the documents array after this\n     * change.\n     */\n    constructor(type, document, oldIndex, newIndex) {\n        this._type = type;\n        this._document = document;\n        this._oldIndex = oldIndex;\n        this._newIndex = newIndex;\n    }\n    /**\n     * The type of change ('added', 'modified', or 'removed').\n     *\n     * @type {string}\n     * @name DocumentChange#type\n     * @readonly\n     *\n     * @example\n     * let query = firestore.collection('col').where('foo', '==', 'bar');\n     * let docsArray = [];\n     *\n     * let unsubscribe = query.onSnapshot(querySnapshot => {\n     *   for (let change of querySnapshot.docChanges) {\n     *     console.log(`Type of change is ${change.type}`);\n     *   }\n     * });\n     *\n     * // Remove this listener.\n     * unsubscribe();\n     */\n    get type() {\n        return this._type;\n    }\n    /**\n     * The document affected by this change.\n     *\n     * @type {QueryDocumentSnapshot}\n     * @name DocumentChange#doc\n     * @readonly\n     *\n     * @example\n     * let query = firestore.collection('col').where('foo', '==', 'bar');\n     *\n     * let unsubscribe = query.onSnapshot(querySnapshot => {\n     *   for (let change of querySnapshot.docChanges) {\n     *     console.log(change.doc.data());\n     *   }\n     * });\n     *\n     * // Remove this listener.\n     * unsubscribe();\n     */\n    get doc() {\n        return this._document;\n    }\n    /**\n     * The index of the changed document in the result set immediately prior to\n     * this DocumentChange (i.e. supposing that all prior DocumentChange objects\n     * have been applied). Is -1 for 'added' events.\n     *\n     * @type {number}\n     * @name DocumentChange#oldIndex\n     * @readonly\n     *\n     * @example\n     * let query = firestore.collection('col').where('foo', '==', 'bar');\n     * let docsArray = [];\n     *\n     * let unsubscribe = query.onSnapshot(querySnapshot => {\n     *   for (let change of querySnapshot.docChanges) {\n     *     if (change.oldIndex !== -1) {\n     *       docsArray.splice(change.oldIndex, 1);\n     *     }\n     *     if (change.newIndex !== -1) {\n     *       docsArray.splice(change.newIndex, 0, change.doc);\n     *     }\n     *   }\n     * });\n     *\n     * // Remove this listener.\n     * unsubscribe();\n     */\n    get oldIndex() {\n        return this._oldIndex;\n    }\n    /**\n     * The index of the changed document in the result set immediately after\n     * this DocumentChange (i.e. supposing that all prior DocumentChange\n     * objects and the current DocumentChange object have been applied).\n     * Is -1 for 'removed' events.\n     *\n     * @type {number}\n     * @name DocumentChange#newIndex\n     * @readonly\n     *\n     * @example\n     * let query = firestore.collection('col').where('foo', '==', 'bar');\n     * let docsArray = [];\n     *\n     * let unsubscribe = query.onSnapshot(querySnapshot => {\n     *   for (let change of querySnapshot.docChanges) {\n     *     if (change.oldIndex !== -1) {\n     *       docsArray.splice(change.oldIndex, 1);\n     *     }\n     *     if (change.newIndex !== -1) {\n     *       docsArray.splice(change.newIndex, 0, change.doc);\n     *     }\n     *   }\n     * });\n     *\n     * // Remove this listener.\n     * unsubscribe();\n     */\n    get newIndex() {\n        return this._newIndex;\n    }\n    /**\n     * Returns true if the data in this `DocumentChange` is equal to the provided\n     * value.\n     *\n     * @param {*} other The value to compare against.\n     * @return true if this `DocumentChange` is equal to the provided value.\n     */\n    isEqual(other) {\n        if (this === other) {\n            return true;\n        }\n        return (other instanceof DocumentChange && this._type === other._type &&\n            this._oldIndex === other._oldIndex &&\n            this._newIndex === other._newIndex &&\n            this._document.isEqual(other._document));\n    }\n}\nexports.DocumentChange = DocumentChange;\n"},"lineCount":null}},"hash":"3d19efd1d5b853d63203b3eef4c223d2","cacheData":{"env":{}}}