{"id":"node_modules/protobufjs/ext/descriptor/index.js","dependencies":[{"name":"/Users/ivanpiedra/Desktop/test/package.json","includedInParent":true,"mtime":1550784608667},{"name":"/Users/ivanpiedra/Desktop/test/node_modules/protobufjs/package.json","includedInParent":true,"mtime":1550784604865},{"name":"../..","loc":{"line":2,"column":24},"parent":"/Users/ivanpiedra/Desktop/test/node_modules/protobufjs/ext/descriptor/index.js","resolved":"/Users/ivanpiedra/Desktop/test/node_modules/protobufjs/index.js"},{"name":"../../google/protobuf/descriptor.json","loc":{"line":3,"column":82},"parent":"/Users/ivanpiedra/Desktop/test/node_modules/protobufjs/ext/descriptor/index.js","resolved":"/Users/ivanpiedra/Desktop/test/node_modules/protobufjs/google/protobuf/descriptor.json"}],"generated":{"js":"\"use strict\";\r\nvar $protobuf = require(\"../..\");\r\nmodule.exports = exports = $protobuf.descriptor = $protobuf.Root.fromJSON(require(\"../../google/protobuf/descriptor.json\")).lookup(\".google.protobuf\");\r\n\r\nvar Namespace = $protobuf.Namespace,\r\n    Root      = $protobuf.Root,\r\n    Enum      = $protobuf.Enum,\r\n    Type      = $protobuf.Type,\r\n    Field     = $protobuf.Field,\r\n    MapField  = $protobuf.MapField,\r\n    OneOf     = $protobuf.OneOf,\r\n    Service   = $protobuf.Service,\r\n    Method    = $protobuf.Method;\r\n\r\n// --- Root ---\r\n\r\n/**\r\n * Properties of a FileDescriptorSet message.\r\n * @interface IFileDescriptorSet\r\n * @property {IFileDescriptorProto[]} file Files\r\n */\r\n\r\n/**\r\n * Properties of a FileDescriptorProto message.\r\n * @interface IFileDescriptorProto\r\n * @property {string} [name] File name\r\n * @property {string} [package] Package\r\n * @property {*} [dependency] Not supported\r\n * @property {*} [publicDependency] Not supported\r\n * @property {*} [weakDependency] Not supported\r\n * @property {IDescriptorProto[]} [messageType] Nested message types\r\n * @property {IEnumDescriptorProto[]} [enumType] Nested enums\r\n * @property {IServiceDescriptorProto[]} [service] Nested services\r\n * @property {IFieldDescriptorProto[]} [extension] Nested extension fields\r\n * @property {IFileOptions} [options] Options\r\n * @property {*} [sourceCodeInfo] Not supported\r\n * @property {string} [syntax=\"proto2\"] Syntax\r\n */\r\n\r\n/**\r\n * Properties of a FileOptions message.\r\n * @interface IFileOptions\r\n * @property {string} [javaPackage]\r\n * @property {string} [javaOuterClassname]\r\n * @property {boolean} [javaMultipleFiles]\r\n * @property {boolean} [javaGenerateEqualsAndHash]\r\n * @property {boolean} [javaStringCheckUtf8]\r\n * @property {IFileOptionsOptimizeMode} [optimizeFor=1]\r\n * @property {string} [goPackage]\r\n * @property {boolean} [ccGenericServices]\r\n * @property {boolean} [javaGenericServices]\r\n * @property {boolean} [pyGenericServices]\r\n * @property {boolean} [deprecated]\r\n * @property {boolean} [ccEnableArenas]\r\n * @property {string} [objcClassPrefix]\r\n * @property {string} [csharpNamespace]\r\n */\r\n\r\n/**\r\n * Values of he FileOptions.OptimizeMode enum.\r\n * @typedef IFileOptionsOptimizeMode\r\n * @type {number}\r\n * @property {number} SPEED=1\r\n * @property {number} CODE_SIZE=2\r\n * @property {number} LITE_RUNTIME=3\r\n */\r\n\r\n/**\r\n * Creates a root from a descriptor set.\r\n * @param {IFileDescriptorSet|Reader|Uint8Array} descriptor Descriptor\r\n * @returns {Root} Root instance\r\n */\r\nRoot.fromDescriptor = function fromDescriptor(descriptor) {\r\n\r\n    // Decode the descriptor message if specified as a buffer:\r\n    if (typeof descriptor.length === \"number\")\r\n        descriptor = exports.FileDescriptorSet.decode(descriptor);\r\n\r\n    var root = new Root();\r\n\r\n    if (descriptor.file) {\r\n        var fileDescriptor,\r\n            filePackage;\r\n        for (var j = 0, i; j < descriptor.file.length; ++j) {\r\n            filePackage = root;\r\n            if ((fileDescriptor = descriptor.file[j])[\"package\"] && fileDescriptor[\"package\"].length)\r\n                filePackage = root.define(fileDescriptor[\"package\"]);\r\n            if (fileDescriptor.name && fileDescriptor.name.length)\r\n                root.files.push(filePackage.filename = fileDescriptor.name);\r\n            if (fileDescriptor.messageType)\r\n                for (i = 0; i < fileDescriptor.messageType.length; ++i)\r\n                    filePackage.add(Type.fromDescriptor(fileDescriptor.messageType[i], fileDescriptor.syntax));\r\n            if (fileDescriptor.enumType)\r\n                for (i = 0; i < fileDescriptor.enumType.length; ++i)\r\n                    filePackage.add(Enum.fromDescriptor(fileDescriptor.enumType[i]));\r\n            if (fileDescriptor.extension)\r\n                for (i = 0; i < fileDescriptor.extension.length; ++i)\r\n                    filePackage.add(Field.fromDescriptor(fileDescriptor.extension[i]));\r\n            if (fileDescriptor.service)\r\n                for (i = 0; i < fileDescriptor.service.length; ++i)\r\n                    filePackage.add(Service.fromDescriptor(fileDescriptor.service[i]));\r\n            var opts = fromDescriptorOptions(fileDescriptor.options, exports.FileOptions);\r\n            if (opts) {\r\n                var ks = Object.keys(opts);\r\n                for (i = 0; i < ks.length; ++i)\r\n                    filePackage.setOption(ks[i], opts[ks[i]]);\r\n            }\r\n        }\r\n    }\r\n\r\n    return root;\r\n};\r\n\r\n/**\r\n * Converts a root to a descriptor set.\r\n * @returns {Message<IFileDescriptorSet>} Descriptor\r\n * @param {string} [syntax=\"proto2\"] Syntax\r\n */\r\nRoot.prototype.toDescriptor = function toDescriptor(syntax) {\r\n    var set = exports.FileDescriptorSet.create();\r\n    Root_toDescriptorRecursive(this, set.file, syntax);\r\n    return set;\r\n};\r\n\r\n// Traverses a namespace and assembles the descriptor set\r\nfunction Root_toDescriptorRecursive(ns, files, syntax) {\r\n\r\n    // Create a new file\r\n    var file = exports.FileDescriptorProto.create({ name: ns.filename || (ns.fullName.substring(1).replace(/\\./g, \"_\") || \"root\") + \".proto\" });\r\n    if (syntax)\r\n        file.syntax = syntax;\r\n    if (!(ns instanceof Root))\r\n        file[\"package\"] = ns.fullName.substring(1);\r\n\r\n    // Add nested types\r\n    for (var i = 0, nested; i < ns.nestedArray.length; ++i)\r\n        if ((nested = ns._nestedArray[i]) instanceof Type)\r\n            file.messageType.push(nested.toDescriptor(syntax));\r\n        else if (nested instanceof Enum)\r\n            file.enumType.push(nested.toDescriptor());\r\n        else if (nested instanceof Field)\r\n            file.extension.push(nested.toDescriptor(syntax));\r\n        else if (nested instanceof Service)\r\n            file.service.push(nested.toDescriptor());\r\n        else if (nested instanceof /* plain */ Namespace)\r\n            Root_toDescriptorRecursive(nested, files, syntax); // requires new file\r\n\r\n    // Keep package-level options\r\n    file.options = toDescriptorOptions(ns.options, exports.FileOptions);\r\n\r\n    // And keep the file only if there is at least one nested object\r\n    if (file.messageType.length + file.enumType.length + file.extension.length + file.service.length)\r\n        files.push(file);\r\n}\r\n\r\n// --- Type ---\r\n\r\n/**\r\n * Properties of a DescriptorProto message.\r\n * @interface IDescriptorProto\r\n * @property {string} [name] Message type name\r\n * @property {IFieldDescriptorProto[]} [field] Fields\r\n * @property {IFieldDescriptorProto[]} [extension] Extension fields\r\n * @property {IDescriptorProto[]} [nestedType] Nested message types\r\n * @property {IEnumDescriptorProto[]} [enumType] Nested enums\r\n * @property {IDescriptorProtoExtensionRange[]} [extensionRange] Extension ranges\r\n * @property {IOneofDescriptorProto[]} [oneofDecl] Oneofs\r\n * @property {IMessageOptions} [options] Not supported\r\n * @property {IDescriptorProtoReservedRange[]} [reservedRange] Reserved ranges\r\n * @property {string[]} [reservedName] Reserved names\r\n */\r\n\r\n/**\r\n * Properties of a MessageOptions message.\r\n * @interface IMessageOptions\r\n * @property {boolean} [mapEntry=false] Whether this message is a map entry\r\n */\r\n\r\n/**\r\n * Properties of an ExtensionRange message.\r\n * @interface IDescriptorProtoExtensionRange\r\n * @property {number} [start] Start field id\r\n * @property {number} [end] End field id\r\n */\r\n\r\n/**\r\n * Properties of a ReservedRange message.\r\n * @interface IDescriptorProtoReservedRange\r\n * @property {number} [start] Start field id\r\n * @property {number} [end] End field id\r\n */\r\n\r\nvar unnamedMessageIndex = 0;\r\n\r\n/**\r\n * Creates a type from a descriptor.\r\n * @param {IDescriptorProto|Reader|Uint8Array} descriptor Descriptor\r\n * @param {string} [syntax=\"proto2\"] Syntax\r\n * @returns {Type} Type instance\r\n */\r\nType.fromDescriptor = function fromDescriptor(descriptor, syntax) {\r\n\r\n    // Decode the descriptor message if specified as a buffer:\r\n    if (typeof descriptor.length === \"number\")\r\n        descriptor = exports.DescriptorProto.decode(descriptor);\r\n\r\n    // Create the message type\r\n    var type = new Type(descriptor.name.length ? descriptor.name : \"Type\" + unnamedMessageIndex++, fromDescriptorOptions(descriptor.options, exports.MessageOptions)),\r\n        i;\r\n\r\n    /* Oneofs */ if (descriptor.oneofDecl)\r\n        for (i = 0; i < descriptor.oneofDecl.length; ++i)\r\n            type.add(OneOf.fromDescriptor(descriptor.oneofDecl[i]));\r\n    /* Fields */ if (descriptor.field)\r\n        for (i = 0; i < descriptor.field.length; ++i) {\r\n            var field = Field.fromDescriptor(descriptor.field[i], syntax);\r\n            type.add(field);\r\n            if (descriptor.field[i].hasOwnProperty(\"oneofIndex\")) // eslint-disable-line no-prototype-builtins\r\n                type.oneofsArray[descriptor.field[i].oneofIndex].add(field);\r\n        }\r\n    /* Extension fields */ if (descriptor.extension)\r\n        for (i = 0; i < descriptor.extension.length; ++i)\r\n            type.add(Field.fromDescriptor(descriptor.extension[i], syntax));\r\n    /* Nested types */ if (descriptor.nestedType)\r\n        for (i = 0; i < descriptor.nestedType.length; ++i) {\r\n            type.add(Type.fromDescriptor(descriptor.nestedType[i], syntax));\r\n            if (descriptor.nestedType[i].options && descriptor.nestedType[i].options.mapEntry)\r\n                type.setOption(\"map_entry\", true);\r\n        }\r\n    /* Nested enums */ if (descriptor.enumType)\r\n        for (i = 0; i < descriptor.enumType.length; ++i)\r\n            type.add(Enum.fromDescriptor(descriptor.enumType[i]));\r\n    /* Extension ranges */ if (descriptor.extensionRange && descriptor.extensionRange.length) {\r\n        type.extensions = [];\r\n        for (i = 0; i < descriptor.extensionRange.length; ++i)\r\n            type.extensions.push([ descriptor.extensionRange[i].start, descriptor.extensionRange[i].end ]);\r\n    }\r\n    /* Reserved... */ if (descriptor.reservedRange && descriptor.reservedRange.length || descriptor.reservedName && descriptor.reservedName.length) {\r\n        type.reserved = [];\r\n        /* Ranges */ if (descriptor.reservedRange)\r\n            for (i = 0; i < descriptor.reservedRange.length; ++i)\r\n                type.reserved.push([ descriptor.reservedRange[i].start, descriptor.reservedRange[i].end ]);\r\n        /* Names */ if (descriptor.reservedName)\r\n            for (i = 0; i < descriptor.reservedName.length; ++i)\r\n                type.reserved.push(descriptor.reservedName[i]);\r\n    }\r\n\r\n    return type;\r\n};\r\n\r\n/**\r\n * Converts a type to a descriptor.\r\n * @returns {Message<IDescriptorProto>} Descriptor\r\n * @param {string} [syntax=\"proto2\"] Syntax\r\n */\r\nType.prototype.toDescriptor = function toDescriptor(syntax) {\r\n    var descriptor = exports.DescriptorProto.create({ name: this.name }),\r\n        i;\r\n\r\n    /* Fields */ for (i = 0; i < this.fieldsArray.length; ++i) {\r\n        var fieldDescriptor;\r\n        descriptor.field.push(fieldDescriptor = this._fieldsArray[i].toDescriptor(syntax));\r\n        if (this._fieldsArray[i] instanceof MapField) { // map fields are repeated FieldNameEntry\r\n            var keyType = toDescriptorType(this._fieldsArray[i].keyType, this._fieldsArray[i].resolvedKeyType),\r\n                valueType = toDescriptorType(this._fieldsArray[i].type, this._fieldsArray[i].resolvedType),\r\n                valueTypeName = valueType === /* type */ 11 || valueType === /* enum */ 14\r\n                    ? this._fieldsArray[i].resolvedType && shortname(this.parent, this._fieldsArray[i].resolvedType) || this._fieldsArray[i].type\r\n                    : undefined;\r\n            descriptor.nestedType.push(exports.DescriptorProto.create({\r\n                name: fieldDescriptor.typeName,\r\n                field: [\r\n                    exports.FieldDescriptorProto.create({ name: \"key\", number: 1, label: 1, type: keyType }), // can't reference a type or enum\r\n                    exports.FieldDescriptorProto.create({ name: \"value\", number: 2, label: 1, type: valueType, typeName: valueTypeName })\r\n                ],\r\n                options: exports.MessageOptions.create({ mapEntry: true })\r\n            }));\r\n        }\r\n    }\r\n    /* Oneofs */ for (i = 0; i < this.oneofsArray.length; ++i)\r\n        descriptor.oneofDecl.push(this._oneofsArray[i].toDescriptor());\r\n    /* Nested... */ for (i = 0; i < this.nestedArray.length; ++i) {\r\n        /* Extension fields */ if (this._nestedArray[i] instanceof Field)\r\n            descriptor.field.push(this._nestedArray[i].toDescriptor(syntax));\r\n        /* Types */ else if (this._nestedArray[i] instanceof Type)\r\n            descriptor.nestedType.push(this._nestedArray[i].toDescriptor(syntax));\r\n        /* Enums */ else if (this._nestedArray[i] instanceof Enum)\r\n            descriptor.enumType.push(this._nestedArray[i].toDescriptor());\r\n        // plain nested namespaces become packages instead in Root#toDescriptor\r\n    }\r\n    /* Extension ranges */ if (this.extensions)\r\n        for (i = 0; i < this.extensions.length; ++i)\r\n            descriptor.extensionRange.push(exports.DescriptorProto.ExtensionRange.create({ start: this.extensions[i][0], end: this.extensions[i][1] }));\r\n    /* Reserved... */ if (this.reserved)\r\n        for (i = 0; i < this.reserved.length; ++i)\r\n            /* Names */ if (typeof this.reserved[i] === \"string\")\r\n                descriptor.reservedName.push(this.reserved[i]);\r\n            /* Ranges */ else\r\n                descriptor.reservedRange.push(exports.DescriptorProto.ReservedRange.create({ start: this.reserved[i][0], end: this.reserved[i][1] }));\r\n\r\n    descriptor.options = toDescriptorOptions(this.options, exports.MessageOptions);\r\n\r\n    return descriptor;\r\n};\r\n\r\n// --- Field ---\r\n\r\n/**\r\n * Properties of a FieldDescriptorProto message.\r\n * @interface IFieldDescriptorProto\r\n * @property {string} [name] Field name\r\n * @property {number} [number] Field id\r\n * @property {IFieldDescriptorProtoLabel} [label] Field rule\r\n * @property {IFieldDescriptorProtoType} [type] Field basic type\r\n * @property {string} [typeName] Field type name\r\n * @property {string} [extendee] Extended type name\r\n * @property {string} [defaultValue] Literal default value\r\n * @property {number} [oneofIndex] Oneof index if part of a oneof\r\n * @property {*} [jsonName] Not supported\r\n * @property {IFieldOptions} [options] Field options\r\n */\r\n\r\n/**\r\n * Values of the FieldDescriptorProto.Label enum.\r\n * @typedef IFieldDescriptorProtoLabel\r\n * @type {number}\r\n * @property {number} LABEL_OPTIONAL=1\r\n * @property {number} LABEL_REQUIRED=2\r\n * @property {number} LABEL_REPEATED=3\r\n */\r\n\r\n/**\r\n * Values of the FieldDescriptorProto.Type enum.\r\n * @typedef IFieldDescriptorProtoType\r\n * @type {number}\r\n * @property {number} TYPE_DOUBLE=1\r\n * @property {number} TYPE_FLOAT=2\r\n * @property {number} TYPE_INT64=3\r\n * @property {number} TYPE_UINT64=4\r\n * @property {number} TYPE_INT32=5\r\n * @property {number} TYPE_FIXED64=6\r\n * @property {number} TYPE_FIXED32=7\r\n * @property {number} TYPE_BOOL=8\r\n * @property {number} TYPE_STRING=9\r\n * @property {number} TYPE_GROUP=10\r\n * @property {number} TYPE_MESSAGE=11\r\n * @property {number} TYPE_BYTES=12\r\n * @property {number} TYPE_UINT32=13\r\n * @property {number} TYPE_ENUM=14\r\n * @property {number} TYPE_SFIXED32=15\r\n * @property {number} TYPE_SFIXED64=16\r\n * @property {number} TYPE_SINT32=17\r\n * @property {number} TYPE_SINT64=18\r\n */\r\n\r\n/**\r\n * Properties of a FieldOptions message.\r\n * @interface IFieldOptions\r\n * @property {boolean} [packed] Whether packed or not (defaults to `false` for proto2 and `true` for proto3)\r\n * @property {IFieldOptionsJSType} [jstype] JavaScript value type (not used by protobuf.js)\r\n */\r\n\r\n/**\r\n * Values of the FieldOptions.JSType enum.\r\n * @typedef IFieldOptionsJSType\r\n * @type {number}\r\n * @property {number} JS_NORMAL=0\r\n * @property {number} JS_STRING=1\r\n * @property {number} JS_NUMBER=2\r\n */\r\n\r\n// copied here from parse.js\r\nvar numberRe = /^(?![eE])[0-9]*(?:\\.[0-9]*)?(?:[eE][+-]?[0-9]+)?$/;\r\n\r\n/**\r\n * Creates a field from a descriptor.\r\n * @param {IFieldDescriptorProto|Reader|Uint8Array} descriptor Descriptor\r\n * @param {string} [syntax=\"proto2\"] Syntax\r\n * @returns {Field} Field instance\r\n */\r\nField.fromDescriptor = function fromDescriptor(descriptor, syntax) {\r\n\r\n    // Decode the descriptor message if specified as a buffer:\r\n    if (typeof descriptor.length === \"number\")\r\n        descriptor = exports.DescriptorProto.decode(descriptor);\r\n\r\n    if (typeof descriptor.number !== \"number\")\r\n        throw Error(\"missing field id\");\r\n\r\n    // Rewire field type\r\n    var fieldType;\r\n    if (descriptor.typeName && descriptor.typeName.length)\r\n        fieldType = descriptor.typeName;\r\n    else\r\n        fieldType = fromDescriptorType(descriptor.type);\r\n\r\n    // Rewire field rule\r\n    var fieldRule;\r\n    switch (descriptor.label) {\r\n        // 0 is reserved for errors\r\n        case 1: fieldRule = undefined; break;\r\n        case 2: fieldRule = \"required\"; break;\r\n        case 3: fieldRule = \"repeated\"; break;\r\n        default: throw Error(\"illegal label: \" + descriptor.label);\r\n    }\r\n\r\n\tvar extendee = descriptor.extendee;\r\n\tif (descriptor.extendee !== undefined) {\r\n\t\textendee = extendee.length ? extendee : undefined;\r\n\t}\r\n    var field = new Field(\r\n        descriptor.name.length ? descriptor.name : \"field\" + descriptor.number,\r\n        descriptor.number,\r\n        fieldType,\r\n        fieldRule,\r\n        extendee\r\n    );\r\n\r\n    field.options = fromDescriptorOptions(descriptor.options, exports.FieldOptions);\r\n\r\n    if (descriptor.defaultValue && descriptor.defaultValue.length) {\r\n        var defaultValue = descriptor.defaultValue;\r\n        switch (defaultValue) {\r\n            case \"true\": case \"TRUE\":\r\n                defaultValue = true;\r\n                break;\r\n            case \"false\": case \"FALSE\":\r\n                defaultValue = false;\r\n                break;\r\n            default:\r\n                var match = numberRe.exec(defaultValue);\r\n                if (match)\r\n                    defaultValue = parseInt(defaultValue); // eslint-disable-line radix\r\n                break;\r\n        }\r\n        field.setOption(\"default\", defaultValue);\r\n    }\r\n\r\n    if (packableDescriptorType(descriptor.type)) {\r\n        if (syntax === \"proto3\") { // defaults to packed=true (internal preset is packed=true)\r\n            if (descriptor.options && !descriptor.options.packed)\r\n                field.setOption(\"packed\", false);\r\n        } else if (!(descriptor.options && descriptor.options.packed)) // defaults to packed=false\r\n            field.setOption(\"packed\", false);\r\n    }\r\n\r\n    return field;\r\n};\r\n\r\n/**\r\n * Converts a field to a descriptor.\r\n * @returns {Message<IFieldDescriptorProto>} Descriptor\r\n * @param {string} [syntax=\"proto2\"] Syntax\r\n */\r\nField.prototype.toDescriptor = function toDescriptor(syntax) {\r\n    var descriptor = exports.FieldDescriptorProto.create({ name: this.name, number: this.id });\r\n\r\n    if (this.map) {\r\n\r\n        descriptor.type = 11; // message\r\n        descriptor.typeName = $protobuf.util.ucFirst(this.name); // fieldName -> FieldNameEntry (built in Type#toDescriptor)\r\n        descriptor.label = 3; // repeated\r\n\r\n    } else {\r\n\r\n        // Rewire field type\r\n        switch (descriptor.type = toDescriptorType(this.type, this.resolve().resolvedType)) {\r\n            case 10: // group\r\n            case 11: // type\r\n            case 14: // enum\r\n                descriptor.typeName = this.resolvedType ? shortname(this.parent, this.resolvedType) : this.type;\r\n                break;\r\n        }\r\n\r\n        // Rewire field rule\r\n        switch (this.rule) {\r\n            case \"repeated\": descriptor.label = 3; break;\r\n            case \"required\": descriptor.label = 2; break;\r\n            default: descriptor.label = 1; break;\r\n        }\r\n\r\n    }\r\n\r\n    // Handle extension field\r\n    descriptor.extendee = this.extensionField ? this.extensionField.parent.fullName : this.extend;\r\n\r\n    // Handle part of oneof\r\n    if (this.partOf)\r\n        if ((descriptor.oneofIndex = this.parent.oneofsArray.indexOf(this.partOf)) < 0)\r\n            throw Error(\"missing oneof\");\r\n\r\n    if (this.options) {\r\n        descriptor.options = toDescriptorOptions(this.options, exports.FieldOptions);\r\n        if (this.options[\"default\"] != null)\r\n            descriptor.defaultValue = String(this.options[\"default\"]);\r\n    }\r\n\r\n    if (syntax === \"proto3\") { // defaults to packed=true\r\n        if (!this.packed)\r\n            (descriptor.options || (descriptor.options = exports.FieldOptions.create())).packed = false;\r\n    } else if (this.packed) // defaults to packed=false\r\n        (descriptor.options || (descriptor.options = exports.FieldOptions.create())).packed = true;\r\n\r\n    return descriptor;\r\n};\r\n\r\n// --- Enum ---\r\n\r\n/**\r\n * Properties of an EnumDescriptorProto message.\r\n * @interface IEnumDescriptorProto\r\n * @property {string} [name] Enum name\r\n * @property {IEnumValueDescriptorProto[]} [value] Enum values\r\n * @property {IEnumOptions} [options] Enum options\r\n */\r\n\r\n/**\r\n * Properties of an EnumValueDescriptorProto message.\r\n * @interface IEnumValueDescriptorProto\r\n * @property {string} [name] Name\r\n * @property {number} [number] Value\r\n * @property {*} [options] Not supported\r\n */\r\n\r\n/**\r\n * Properties of an EnumOptions message.\r\n * @interface IEnumOptions\r\n * @property {boolean} [allowAlias] Whether aliases are allowed\r\n * @property {boolean} [deprecated]\r\n */\r\n\r\nvar unnamedEnumIndex = 0;\r\n\r\n/**\r\n * Creates an enum from a descriptor.\r\n * @param {IEnumDescriptorProto|Reader|Uint8Array} descriptor Descriptor\r\n * @returns {Enum} Enum instance\r\n */\r\nEnum.fromDescriptor = function fromDescriptor(descriptor) {\r\n\r\n    // Decode the descriptor message if specified as a buffer:\r\n    if (typeof descriptor.length === \"number\")\r\n        descriptor = exports.EnumDescriptorProto.decode(descriptor);\r\n\r\n    // Construct values object\r\n    var values = {};\r\n    if (descriptor.value)\r\n        for (var i = 0; i < descriptor.value.length; ++i) {\r\n            var name  = descriptor.value[i].name,\r\n                value = descriptor.value[i].number || 0;\r\n            values[name && name.length ? name : \"NAME\" + value] = value;\r\n        }\r\n\r\n    return new Enum(\r\n        descriptor.name && descriptor.name.length ? descriptor.name : \"Enum\" + unnamedEnumIndex++,\r\n        values,\r\n        fromDescriptorOptions(descriptor.options, exports.EnumOptions)\r\n    );\r\n};\r\n\r\n/**\r\n * Converts an enum to a descriptor.\r\n * @returns {Message<IEnumDescriptorProto>} Descriptor\r\n */\r\nEnum.prototype.toDescriptor = function toDescriptor() {\r\n\r\n    // Values\r\n    var values = [];\r\n    for (var i = 0, ks = Object.keys(this.values); i < ks.length; ++i)\r\n        values.push(exports.EnumValueDescriptorProto.create({ name: ks[i], number: this.values[ks[i]] }));\r\n\r\n    return exports.EnumDescriptorProto.create({\r\n        name: this.name,\r\n        value: values,\r\n        options: toDescriptorOptions(this.options, exports.EnumOptions)\r\n    });\r\n};\r\n\r\n// --- OneOf ---\r\n\r\n/**\r\n * Properties of a OneofDescriptorProto message.\r\n * @interface IOneofDescriptorProto\r\n * @property {string} [name] Oneof name\r\n * @property {*} [options] Not supported\r\n */\r\n\r\nvar unnamedOneofIndex = 0;\r\n\r\n/**\r\n * Creates a oneof from a descriptor.\r\n * @param {IOneofDescriptorProto|Reader|Uint8Array} descriptor Descriptor\r\n * @returns {OneOf} OneOf instance\r\n */\r\nOneOf.fromDescriptor = function fromDescriptor(descriptor) {\r\n\r\n    // Decode the descriptor message if specified as a buffer:\r\n    if (typeof descriptor.length === \"number\")\r\n        descriptor = exports.OneofDescriptorProto.decode(descriptor);\r\n\r\n    return new OneOf(\r\n        // unnamedOneOfIndex is global, not per type, because we have no ref to a type here\r\n        descriptor.name && descriptor.name.length ? descriptor.name : \"oneof\" + unnamedOneofIndex++\r\n        // fromDescriptorOptions(descriptor.options, exports.OneofOptions) - only uninterpreted_option\r\n    );\r\n};\r\n\r\n/**\r\n * Converts a oneof to a descriptor.\r\n * @returns {Message<IOneofDescriptorProto>} Descriptor\r\n */\r\nOneOf.prototype.toDescriptor = function toDescriptor() {\r\n    return exports.OneofDescriptorProto.create({\r\n        name: this.name\r\n        // options: toDescriptorOptions(this.options, exports.OneofOptions) - only uninterpreted_option\r\n    });\r\n};\r\n\r\n// --- Service ---\r\n\r\n/**\r\n * Properties of a ServiceDescriptorProto message.\r\n * @interface IServiceDescriptorProto\r\n * @property {string} [name] Service name\r\n * @property {IMethodDescriptorProto[]} [method] Methods\r\n * @property {IServiceOptions} [options] Options\r\n */\r\n\r\n/**\r\n * Properties of a ServiceOptions message.\r\n * @interface IServiceOptions\r\n * @property {boolean} [deprecated]\r\n */\r\n\r\nvar unnamedServiceIndex = 0;\r\n\r\n/**\r\n * Creates a service from a descriptor.\r\n * @param {IServiceDescriptorProto|Reader|Uint8Array} descriptor Descriptor\r\n * @returns {Service} Service instance\r\n */\r\nService.fromDescriptor = function fromDescriptor(descriptor) {\r\n\r\n    // Decode the descriptor message if specified as a buffer:\r\n    if (typeof descriptor.length === \"number\")\r\n        descriptor = exports.ServiceDescriptorProto.decode(descriptor);\r\n\r\n    var service = new Service(descriptor.name && descriptor.name.length ? descriptor.name : \"Service\" + unnamedServiceIndex++, fromDescriptorOptions(descriptor.options, exports.ServiceOptions));\r\n    if (descriptor.method)\r\n        for (var i = 0; i < descriptor.method.length; ++i)\r\n            service.add(Method.fromDescriptor(descriptor.method[i]));\r\n\r\n    return service;\r\n};\r\n\r\n/**\r\n * Converts a service to a descriptor.\r\n * @returns {Message<IServiceDescriptorProto>} Descriptor\r\n */\r\nService.prototype.toDescriptor = function toDescriptor() {\r\n\r\n    // Methods\r\n    var methods = [];\r\n    for (var i = 0; i < this.methodsArray; ++i)\r\n        methods.push(this._methodsArray[i].toDescriptor());\r\n\r\n    return exports.ServiceDescriptorProto.create({\r\n        name: this.name,\r\n        methods: methods,\r\n        options: toDescriptorOptions(this.options, exports.ServiceOptions)\r\n    });\r\n};\r\n\r\n// --- Method ---\r\n\r\n/**\r\n * Properties of a MethodDescriptorProto message.\r\n * @interface IMethodDescriptorProto\r\n * @property {string} [name] Method name\r\n * @property {string} [inputType] Request type name\r\n * @property {string} [outputType] Response type name\r\n * @property {IMethodOptions} [options] Not supported\r\n * @property {boolean} [clientStreaming=false] Whether requests are streamed\r\n * @property {boolean} [serverStreaming=false] Whether responses are streamed\r\n */\r\n\r\n/**\r\n * Properties of a MethodOptions message.\r\n * @interface IMethodOptions\r\n * @property {boolean} [deprecated]\r\n */\r\n\r\nvar unnamedMethodIndex = 0;\r\n\r\n/**\r\n * Creates a method from a descriptor.\r\n * @param {IMethodDescriptorProto|Reader|Uint8Array} descriptor Descriptor\r\n * @returns {Method} Reflected method instance\r\n */\r\nMethod.fromDescriptor = function fromDescriptor(descriptor) {\r\n\r\n    // Decode the descriptor message if specified as a buffer:\r\n    if (typeof descriptor.length === \"number\")\r\n        descriptor = exports.MethodDescriptorProto.decode(descriptor);\r\n\r\n    return new Method(\r\n        // unnamedMethodIndex is global, not per service, because we have no ref to a service here\r\n        descriptor.name && descriptor.name.length ? descriptor.name : \"Method\" + unnamedMethodIndex++,\r\n        \"rpc\",\r\n        descriptor.inputType,\r\n        descriptor.outputType,\r\n        Boolean(descriptor.clientStreaming),\r\n        Boolean(descriptor.serverStreaming),\r\n        fromDescriptorOptions(descriptor.options, exports.MethodOptions)\r\n    );\r\n};\r\n\r\n/**\r\n * Converts a method to a descriptor.\r\n * @returns {Message<IMethodDescriptorProto>} Descriptor\r\n */\r\nMethod.prototype.toDescriptor = function toDescriptor() {\r\n    return exports.MethodDescriptorProto.create({\r\n        name: this.name,\r\n        inputType: this.resolvedRequestType ? this.resolvedRequestType.fullName : this.requestType,\r\n        outputType: this.resolvedResponseType ? this.resolvedResponseType.fullName : this.responseType,\r\n        clientStreaming: this.requestStream,\r\n        serverStreaming: this.responseStream,\r\n        options: toDescriptorOptions(this.options, exports.MethodOptions)\r\n    });\r\n};\r\n\r\n// --- utility ---\r\n\r\n// Converts a descriptor type to a protobuf.js basic type\r\nfunction fromDescriptorType(type) {\r\n    switch (type) {\r\n        // 0 is reserved for errors\r\n        case 1: return \"double\";\r\n        case 2: return \"float\";\r\n        case 3: return \"int64\";\r\n        case 4: return \"uint64\";\r\n        case 5: return \"int32\";\r\n        case 6: return \"fixed64\";\r\n        case 7: return \"fixed32\";\r\n        case 8: return \"bool\";\r\n        case 9: return \"string\";\r\n        case 12: return \"bytes\";\r\n        case 13: return \"uint32\";\r\n        case 15: return \"sfixed32\";\r\n        case 16: return \"sfixed64\";\r\n        case 17: return \"sint32\";\r\n        case 18: return \"sint64\";\r\n    }\r\n    throw Error(\"illegal type: \" + type);\r\n}\r\n\r\n// Tests if a descriptor type is packable\r\nfunction packableDescriptorType(type) {\r\n    switch (type) {\r\n        case 1: // double\r\n        case 2: // float\r\n        case 3: // int64\r\n        case 4: // uint64\r\n        case 5: // int32\r\n        case 6: // fixed64\r\n        case 7: // fixed32\r\n        case 8: // bool\r\n        case 13: // uint32\r\n        case 14: // enum (!)\r\n        case 15: // sfixed32\r\n        case 16: // sfixed64\r\n        case 17: // sint32\r\n        case 18: // sint64\r\n            return true;\r\n    }\r\n    return false;\r\n}\r\n\r\n// Converts a protobuf.js basic type to a descriptor type\r\nfunction toDescriptorType(type, resolvedType) {\r\n    switch (type) {\r\n        // 0 is reserved for errors\r\n        case \"double\": return 1;\r\n        case \"float\": return 2;\r\n        case \"int64\": return 3;\r\n        case \"uint64\": return 4;\r\n        case \"int32\": return 5;\r\n        case \"fixed64\": return 6;\r\n        case \"fixed32\": return 7;\r\n        case \"bool\": return 8;\r\n        case \"string\": return 9;\r\n        case \"bytes\": return 12;\r\n        case \"uint32\": return 13;\r\n        case \"sfixed32\": return 15;\r\n        case \"sfixed64\": return 16;\r\n        case \"sint32\": return 17;\r\n        case \"sint64\": return 18;\r\n    }\r\n    if (resolvedType instanceof Enum)\r\n        return 14;\r\n    if (resolvedType instanceof Type)\r\n        return resolvedType.group ? 10 : 11;\r\n    throw Error(\"illegal type: \" + type);\r\n}\r\n\r\n// Converts descriptor options to an options object\r\nfunction fromDescriptorOptions(options, type) {\r\n    if (!options)\r\n        return undefined;\r\n    var out = [];\r\n    for (var i = 0, field, key, val; i < type.fieldsArray.length; ++i)\r\n        if ((key = (field = type._fieldsArray[i]).name) !== \"uninterpretedOption\")\r\n            if (options.hasOwnProperty(key)) { // eslint-disable-line no-prototype-builtins\r\n                val = options[key];\r\n                if (field.resolvedType instanceof Enum && typeof val === \"number\" && field.resolvedType.valuesById[val] !== undefined)\r\n                    val = field.resolvedType.valuesById[val];\r\n                out.push(underScore(key), val);\r\n            }\r\n    return out.length ? $protobuf.util.toObject(out) : undefined;\r\n}\r\n\r\n// Converts an options object to descriptor options\r\nfunction toDescriptorOptions(options, type) {\r\n    if (!options)\r\n        return undefined;\r\n    var out = [];\r\n    for (var i = 0, ks = Object.keys(options), key, val; i < ks.length; ++i) {\r\n        val = options[key = ks[i]];\r\n        if (key === \"default\")\r\n            continue;\r\n        var field = type.fields[key];\r\n        if (!field && !(field = type.fields[key = $protobuf.util.camelCase(key)]))\r\n            continue;\r\n        out.push(key, val);\r\n    }\r\n    return out.length ? type.fromObject($protobuf.util.toObject(out)) : undefined;\r\n}\r\n\r\n// Calculates the shortest relative path from `from` to `to`.\r\nfunction shortname(from, to) {\r\n    var fromPath = from.fullName.split(\".\"),\r\n        toPath = to.fullName.split(\".\"),\r\n        i = 0,\r\n        j = 0,\r\n        k = toPath.length - 1;\r\n    if (!(from instanceof Root) && to instanceof Namespace)\r\n        while (i < fromPath.length && j < k && fromPath[i] === toPath[j]) {\r\n            var other = to.lookup(fromPath[i++], true);\r\n            if (other !== null && other !== to)\r\n                break;\r\n            ++j;\r\n        }\r\n    else\r\n        for (; i < fromPath.length && j < k && fromPath[i] === toPath[j]; ++i, ++j);\r\n    return toPath.slice(j).join(\".\");\r\n}\r\n\r\n// copied here from cli/targets/proto.js\r\nfunction underScore(str) {\r\n    return str.substring(0,1)\r\n         + str.substring(1)\r\n               .replace(/([A-Z])(?=[a-z]|$)/g, function($0, $1) { return \"_\" + $1.toLowerCase(); });\r\n}\r\n\r\n// --- exports ---\r\n\r\n/**\r\n * Reflected file descriptor set.\r\n * @name FileDescriptorSet\r\n * @type {Type}\r\n * @const\r\n * @tstype $protobuf.Type\r\n */\r\n\r\n/**\r\n * Reflected file descriptor proto.\r\n * @name FileDescriptorProto\r\n * @type {Type}\r\n * @const\r\n * @tstype $protobuf.Type\r\n */\r\n\r\n/**\r\n * Reflected descriptor proto.\r\n * @name DescriptorProto\r\n * @type {Type}\r\n * @property {Type} ExtensionRange\r\n * @property {Type} ReservedRange\r\n * @const\r\n * @tstype $protobuf.Type & {\r\n *     ExtensionRange: $protobuf.Type,\r\n *     ReservedRange: $protobuf.Type\r\n * }\r\n */\r\n\r\n/**\r\n * Reflected field descriptor proto.\r\n * @name FieldDescriptorProto\r\n * @type {Type}\r\n * @property {Enum} Label\r\n * @property {Enum} Type\r\n * @const\r\n * @tstype $protobuf.Type & {\r\n *     Label: $protobuf.Enum,\r\n *     Type: $protobuf.Enum\r\n * }\r\n */\r\n\r\n/**\r\n * Reflected oneof descriptor proto.\r\n * @name OneofDescriptorProto\r\n * @type {Type}\r\n * @const\r\n * @tstype $protobuf.Type\r\n */\r\n\r\n/**\r\n * Reflected enum descriptor proto.\r\n * @name EnumDescriptorProto\r\n * @type {Type}\r\n * @const\r\n * @tstype $protobuf.Type\r\n */\r\n\r\n/**\r\n * Reflected service descriptor proto.\r\n * @name ServiceDescriptorProto\r\n * @type {Type}\r\n * @const\r\n * @tstype $protobuf.Type\r\n */\r\n\r\n/**\r\n * Reflected enum value descriptor proto.\r\n * @name EnumValueDescriptorProto\r\n * @type {Type}\r\n * @const\r\n * @tstype $protobuf.Type\r\n */\r\n\r\n/**\r\n * Reflected method descriptor proto.\r\n * @name MethodDescriptorProto\r\n * @type {Type}\r\n * @const\r\n * @tstype $protobuf.Type\r\n */\r\n\r\n/**\r\n * Reflected file options.\r\n * @name FileOptions\r\n * @type {Type}\r\n * @property {Enum} OptimizeMode\r\n * @const\r\n * @tstype $protobuf.Type & {\r\n *     OptimizeMode: $protobuf.Enum\r\n * }\r\n */\r\n\r\n/**\r\n * Reflected message options.\r\n * @name MessageOptions\r\n * @type {Type}\r\n * @const\r\n * @tstype $protobuf.Type\r\n */\r\n\r\n/**\r\n * Reflected field options.\r\n * @name FieldOptions\r\n * @type {Type}\r\n * @property {Enum} CType\r\n * @property {Enum} JSType\r\n * @const\r\n * @tstype $protobuf.Type & {\r\n *     CType: $protobuf.Enum,\r\n *     JSType: $protobuf.Enum\r\n * }\r\n */\r\n\r\n/**\r\n * Reflected oneof options.\r\n * @name OneofOptions\r\n * @type {Type}\r\n * @const\r\n * @tstype $protobuf.Type\r\n */\r\n\r\n/**\r\n * Reflected enum options.\r\n * @name EnumOptions\r\n * @type {Type}\r\n * @const\r\n * @tstype $protobuf.Type\r\n */\r\n\r\n/**\r\n * Reflected enum value options.\r\n * @name EnumValueOptions\r\n * @type {Type}\r\n * @const\r\n * @tstype $protobuf.Type\r\n */\r\n\r\n/**\r\n * Reflected service options.\r\n * @name ServiceOptions\r\n * @type {Type}\r\n * @const\r\n * @tstype $protobuf.Type\r\n */\r\n\r\n/**\r\n * Reflected method options.\r\n * @name MethodOptions\r\n * @type {Type}\r\n * @const\r\n * @tstype $protobuf.Type\r\n */\r\n\r\n/**\r\n * Reflected uninterpretet option.\r\n * @name UninterpretedOption\r\n * @type {Type}\r\n * @property {Type} NamePart\r\n * @const\r\n * @tstype $protobuf.Type & {\r\n *     NamePart: $protobuf.Type\r\n * }\r\n */\r\n\r\n/**\r\n * Reflected source code info.\r\n * @name SourceCodeInfo\r\n * @type {Type}\r\n * @property {Type} Location\r\n * @const\r\n * @tstype $protobuf.Type & {\r\n *     Location: $protobuf.Type\r\n * }\r\n */\r\n\r\n/**\r\n * Reflected generated code info.\r\n * @name GeneratedCodeInfo\r\n * @type {Type}\r\n * @property {Type} Annotation\r\n * @const\r\n * @tstype $protobuf.Type & {\r\n *     Annotation: $protobuf.Type\r\n * }\r\n */\r\n","map":{"mappings":[{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":320,"column":0},"generated":{"line":320,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":321,"column":0},"generated":{"line":321,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":322,"column":0},"generated":{"line":322,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":323,"column":0},"generated":{"line":323,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":324,"column":0},"generated":{"line":324,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":325,"column":0},"generated":{"line":325,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":326,"column":0},"generated":{"line":326,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":327,"column":0},"generated":{"line":327,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":328,"column":0},"generated":{"line":328,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":329,"column":0},"generated":{"line":329,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":330,"column":0},"generated":{"line":330,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":331,"column":0},"generated":{"line":331,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":332,"column":0},"generated":{"line":332,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":333,"column":0},"generated":{"line":333,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":334,"column":0},"generated":{"line":334,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":335,"column":0},"generated":{"line":335,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":336,"column":0},"generated":{"line":336,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":337,"column":0},"generated":{"line":337,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":338,"column":0},"generated":{"line":338,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":339,"column":0},"generated":{"line":339,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":340,"column":0},"generated":{"line":340,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":341,"column":0},"generated":{"line":341,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":342,"column":0},"generated":{"line":342,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":343,"column":0},"generated":{"line":343,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":344,"column":0},"generated":{"line":344,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":345,"column":0},"generated":{"line":345,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":346,"column":0},"generated":{"line":346,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":347,"column":0},"generated":{"line":347,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":348,"column":0},"generated":{"line":348,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":349,"column":0},"generated":{"line":349,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":350,"column":0},"generated":{"line":350,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":351,"column":0},"generated":{"line":351,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":352,"column":0},"generated":{"line":352,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":353,"column":0},"generated":{"line":353,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":354,"column":0},"generated":{"line":354,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":355,"column":0},"generated":{"line":355,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":356,"column":0},"generated":{"line":356,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":357,"column":0},"generated":{"line":357,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":358,"column":0},"generated":{"line":358,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":359,"column":0},"generated":{"line":359,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":360,"column":0},"generated":{"line":360,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":361,"column":0},"generated":{"line":361,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":362,"column":0},"generated":{"line":362,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":363,"column":0},"generated":{"line":363,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":364,"column":0},"generated":{"line":364,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":365,"column":0},"generated":{"line":365,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":366,"column":0},"generated":{"line":366,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":367,"column":0},"generated":{"line":367,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":368,"column":0},"generated":{"line":368,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":369,"column":0},"generated":{"line":369,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":370,"column":0},"generated":{"line":370,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":371,"column":0},"generated":{"line":371,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":372,"column":0},"generated":{"line":372,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":373,"column":0},"generated":{"line":373,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":374,"column":0},"generated":{"line":374,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":375,"column":0},"generated":{"line":375,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":376,"column":0},"generated":{"line":376,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":377,"column":0},"generated":{"line":377,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":378,"column":0},"generated":{"line":378,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":379,"column":0},"generated":{"line":379,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":380,"column":0},"generated":{"line":380,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":381,"column":0},"generated":{"line":381,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":382,"column":0},"generated":{"line":382,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":383,"column":0},"generated":{"line":383,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":384,"column":0},"generated":{"line":384,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":385,"column":0},"generated":{"line":385,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":386,"column":0},"generated":{"line":386,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":387,"column":0},"generated":{"line":387,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":388,"column":0},"generated":{"line":388,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":389,"column":0},"generated":{"line":389,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":390,"column":0},"generated":{"line":390,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":391,"column":0},"generated":{"line":391,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":392,"column":0},"generated":{"line":392,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":393,"column":0},"generated":{"line":393,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":394,"column":0},"generated":{"line":394,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":395,"column":0},"generated":{"line":395,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":396,"column":0},"generated":{"line":396,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":397,"column":0},"generated":{"line":397,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":398,"column":0},"generated":{"line":398,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":399,"column":0},"generated":{"line":399,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":400,"column":0},"generated":{"line":400,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":401,"column":0},"generated":{"line":401,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":402,"column":0},"generated":{"line":402,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":403,"column":0},"generated":{"line":403,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":404,"column":0},"generated":{"line":404,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":405,"column":0},"generated":{"line":405,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":406,"column":0},"generated":{"line":406,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":407,"column":0},"generated":{"line":407,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":408,"column":0},"generated":{"line":408,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":409,"column":0},"generated":{"line":409,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":410,"column":0},"generated":{"line":410,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":411,"column":0},"generated":{"line":411,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":412,"column":0},"generated":{"line":412,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":413,"column":0},"generated":{"line":413,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":414,"column":0},"generated":{"line":414,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":415,"column":0},"generated":{"line":415,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":416,"column":0},"generated":{"line":416,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":417,"column":0},"generated":{"line":417,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":418,"column":0},"generated":{"line":418,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":419,"column":0},"generated":{"line":419,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":420,"column":0},"generated":{"line":420,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":421,"column":0},"generated":{"line":421,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":422,"column":0},"generated":{"line":422,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":423,"column":0},"generated":{"line":423,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":424,"column":0},"generated":{"line":424,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":425,"column":0},"generated":{"line":425,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":426,"column":0},"generated":{"line":426,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":427,"column":0},"generated":{"line":427,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":428,"column":0},"generated":{"line":428,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":429,"column":0},"generated":{"line":429,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":430,"column":0},"generated":{"line":430,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":431,"column":0},"generated":{"line":431,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":432,"column":0},"generated":{"line":432,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":433,"column":0},"generated":{"line":433,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":434,"column":0},"generated":{"line":434,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":435,"column":0},"generated":{"line":435,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":436,"column":0},"generated":{"line":436,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":437,"column":0},"generated":{"line":437,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":438,"column":0},"generated":{"line":438,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":439,"column":0},"generated":{"line":439,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":440,"column":0},"generated":{"line":440,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":441,"column":0},"generated":{"line":441,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":442,"column":0},"generated":{"line":442,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":443,"column":0},"generated":{"line":443,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":444,"column":0},"generated":{"line":444,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":445,"column":0},"generated":{"line":445,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":446,"column":0},"generated":{"line":446,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":447,"column":0},"generated":{"line":447,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":448,"column":0},"generated":{"line":448,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":449,"column":0},"generated":{"line":449,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":450,"column":0},"generated":{"line":450,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":451,"column":0},"generated":{"line":451,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":452,"column":0},"generated":{"line":452,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":453,"column":0},"generated":{"line":453,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":454,"column":0},"generated":{"line":454,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":455,"column":0},"generated":{"line":455,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":456,"column":0},"generated":{"line":456,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":457,"column":0},"generated":{"line":457,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":458,"column":0},"generated":{"line":458,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":459,"column":0},"generated":{"line":459,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":460,"column":0},"generated":{"line":460,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":461,"column":0},"generated":{"line":461,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":462,"column":0},"generated":{"line":462,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":463,"column":0},"generated":{"line":463,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":464,"column":0},"generated":{"line":464,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":465,"column":0},"generated":{"line":465,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":466,"column":0},"generated":{"line":466,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":467,"column":0},"generated":{"line":467,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":468,"column":0},"generated":{"line":468,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":469,"column":0},"generated":{"line":469,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":470,"column":0},"generated":{"line":470,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":471,"column":0},"generated":{"line":471,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":472,"column":0},"generated":{"line":472,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":473,"column":0},"generated":{"line":473,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":474,"column":0},"generated":{"line":474,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":475,"column":0},"generated":{"line":475,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":476,"column":0},"generated":{"line":476,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":477,"column":0},"generated":{"line":477,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":478,"column":0},"generated":{"line":478,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":479,"column":0},"generated":{"line":479,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":480,"column":0},"generated":{"line":480,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":481,"column":0},"generated":{"line":481,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":482,"column":0},"generated":{"line":482,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":483,"column":0},"generated":{"line":483,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":484,"column":0},"generated":{"line":484,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":485,"column":0},"generated":{"line":485,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":486,"column":0},"generated":{"line":486,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":487,"column":0},"generated":{"line":487,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":488,"column":0},"generated":{"line":488,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":489,"column":0},"generated":{"line":489,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":490,"column":0},"generated":{"line":490,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":491,"column":0},"generated":{"line":491,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":492,"column":0},"generated":{"line":492,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":493,"column":0},"generated":{"line":493,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":494,"column":0},"generated":{"line":494,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":495,"column":0},"generated":{"line":495,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":496,"column":0},"generated":{"line":496,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":497,"column":0},"generated":{"line":497,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":498,"column":0},"generated":{"line":498,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":499,"column":0},"generated":{"line":499,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":500,"column":0},"generated":{"line":500,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":501,"column":0},"generated":{"line":501,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":502,"column":0},"generated":{"line":502,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":503,"column":0},"generated":{"line":503,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":504,"column":0},"generated":{"line":504,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":505,"column":0},"generated":{"line":505,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":506,"column":0},"generated":{"line":506,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":507,"column":0},"generated":{"line":507,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":508,"column":0},"generated":{"line":508,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":509,"column":0},"generated":{"line":509,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":510,"column":0},"generated":{"line":510,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":511,"column":0},"generated":{"line":511,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":512,"column":0},"generated":{"line":512,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":513,"column":0},"generated":{"line":513,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":514,"column":0},"generated":{"line":514,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":515,"column":0},"generated":{"line":515,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":516,"column":0},"generated":{"line":516,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":517,"column":0},"generated":{"line":517,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":518,"column":0},"generated":{"line":518,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":519,"column":0},"generated":{"line":519,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":520,"column":0},"generated":{"line":520,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":521,"column":0},"generated":{"line":521,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":522,"column":0},"generated":{"line":522,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":523,"column":0},"generated":{"line":523,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":524,"column":0},"generated":{"line":524,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":525,"column":0},"generated":{"line":525,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":526,"column":0},"generated":{"line":526,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":527,"column":0},"generated":{"line":527,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":528,"column":0},"generated":{"line":528,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":529,"column":0},"generated":{"line":529,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":530,"column":0},"generated":{"line":530,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":531,"column":0},"generated":{"line":531,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":532,"column":0},"generated":{"line":532,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":533,"column":0},"generated":{"line":533,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":534,"column":0},"generated":{"line":534,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":535,"column":0},"generated":{"line":535,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":536,"column":0},"generated":{"line":536,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":537,"column":0},"generated":{"line":537,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":538,"column":0},"generated":{"line":538,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":539,"column":0},"generated":{"line":539,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":540,"column":0},"generated":{"line":540,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":541,"column":0},"generated":{"line":541,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":542,"column":0},"generated":{"line":542,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":543,"column":0},"generated":{"line":543,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":544,"column":0},"generated":{"line":544,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":545,"column":0},"generated":{"line":545,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":546,"column":0},"generated":{"line":546,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":547,"column":0},"generated":{"line":547,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":548,"column":0},"generated":{"line":548,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":549,"column":0},"generated":{"line":549,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":550,"column":0},"generated":{"line":550,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":551,"column":0},"generated":{"line":551,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":552,"column":0},"generated":{"line":552,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":553,"column":0},"generated":{"line":553,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":554,"column":0},"generated":{"line":554,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":555,"column":0},"generated":{"line":555,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":556,"column":0},"generated":{"line":556,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":557,"column":0},"generated":{"line":557,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":558,"column":0},"generated":{"line":558,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":559,"column":0},"generated":{"line":559,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":560,"column":0},"generated":{"line":560,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":561,"column":0},"generated":{"line":561,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":562,"column":0},"generated":{"line":562,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":563,"column":0},"generated":{"line":563,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":564,"column":0},"generated":{"line":564,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":565,"column":0},"generated":{"line":565,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":566,"column":0},"generated":{"line":566,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":567,"column":0},"generated":{"line":567,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":568,"column":0},"generated":{"line":568,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":569,"column":0},"generated":{"line":569,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":570,"column":0},"generated":{"line":570,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":571,"column":0},"generated":{"line":571,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":572,"column":0},"generated":{"line":572,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":573,"column":0},"generated":{"line":573,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":574,"column":0},"generated":{"line":574,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":575,"column":0},"generated":{"line":575,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":576,"column":0},"generated":{"line":576,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":577,"column":0},"generated":{"line":577,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":578,"column":0},"generated":{"line":578,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":579,"column":0},"generated":{"line":579,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":580,"column":0},"generated":{"line":580,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":581,"column":0},"generated":{"line":581,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":582,"column":0},"generated":{"line":582,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":583,"column":0},"generated":{"line":583,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":584,"column":0},"generated":{"line":584,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":585,"column":0},"generated":{"line":585,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":586,"column":0},"generated":{"line":586,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":587,"column":0},"generated":{"line":587,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":588,"column":0},"generated":{"line":588,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":589,"column":0},"generated":{"line":589,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":590,"column":0},"generated":{"line":590,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":591,"column":0},"generated":{"line":591,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":592,"column":0},"generated":{"line":592,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":593,"column":0},"generated":{"line":593,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":594,"column":0},"generated":{"line":594,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":595,"column":0},"generated":{"line":595,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":596,"column":0},"generated":{"line":596,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":597,"column":0},"generated":{"line":597,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":598,"column":0},"generated":{"line":598,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":599,"column":0},"generated":{"line":599,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":600,"column":0},"generated":{"line":600,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":601,"column":0},"generated":{"line":601,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":602,"column":0},"generated":{"line":602,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":603,"column":0},"generated":{"line":603,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":604,"column":0},"generated":{"line":604,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":605,"column":0},"generated":{"line":605,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":606,"column":0},"generated":{"line":606,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":607,"column":0},"generated":{"line":607,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":608,"column":0},"generated":{"line":608,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":609,"column":0},"generated":{"line":609,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":610,"column":0},"generated":{"line":610,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":611,"column":0},"generated":{"line":611,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":612,"column":0},"generated":{"line":612,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":613,"column":0},"generated":{"line":613,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":614,"column":0},"generated":{"line":614,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":615,"column":0},"generated":{"line":615,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":616,"column":0},"generated":{"line":616,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":617,"column":0},"generated":{"line":617,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":618,"column":0},"generated":{"line":618,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":619,"column":0},"generated":{"line":619,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":620,"column":0},"generated":{"line":620,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":621,"column":0},"generated":{"line":621,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":622,"column":0},"generated":{"line":622,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":623,"column":0},"generated":{"line":623,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":624,"column":0},"generated":{"line":624,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":625,"column":0},"generated":{"line":625,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":626,"column":0},"generated":{"line":626,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":627,"column":0},"generated":{"line":627,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":628,"column":0},"generated":{"line":628,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":629,"column":0},"generated":{"line":629,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":630,"column":0},"generated":{"line":630,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":631,"column":0},"generated":{"line":631,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":632,"column":0},"generated":{"line":632,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":633,"column":0},"generated":{"line":633,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":634,"column":0},"generated":{"line":634,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":635,"column":0},"generated":{"line":635,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":636,"column":0},"generated":{"line":636,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":637,"column":0},"generated":{"line":637,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":638,"column":0},"generated":{"line":638,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":639,"column":0},"generated":{"line":639,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":640,"column":0},"generated":{"line":640,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":641,"column":0},"generated":{"line":641,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":642,"column":0},"generated":{"line":642,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":643,"column":0},"generated":{"line":643,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":644,"column":0},"generated":{"line":644,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":645,"column":0},"generated":{"line":645,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":646,"column":0},"generated":{"line":646,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":647,"column":0},"generated":{"line":647,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":648,"column":0},"generated":{"line":648,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":649,"column":0},"generated":{"line":649,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":650,"column":0},"generated":{"line":650,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":651,"column":0},"generated":{"line":651,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":652,"column":0},"generated":{"line":652,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":653,"column":0},"generated":{"line":653,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":654,"column":0},"generated":{"line":654,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":655,"column":0},"generated":{"line":655,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":656,"column":0},"generated":{"line":656,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":657,"column":0},"generated":{"line":657,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":658,"column":0},"generated":{"line":658,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":659,"column":0},"generated":{"line":659,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":660,"column":0},"generated":{"line":660,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":661,"column":0},"generated":{"line":661,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":662,"column":0},"generated":{"line":662,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":663,"column":0},"generated":{"line":663,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":664,"column":0},"generated":{"line":664,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":665,"column":0},"generated":{"line":665,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":666,"column":0},"generated":{"line":666,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":667,"column":0},"generated":{"line":667,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":668,"column":0},"generated":{"line":668,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":669,"column":0},"generated":{"line":669,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":670,"column":0},"generated":{"line":670,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":671,"column":0},"generated":{"line":671,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":672,"column":0},"generated":{"line":672,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":673,"column":0},"generated":{"line":673,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":674,"column":0},"generated":{"line":674,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":675,"column":0},"generated":{"line":675,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":676,"column":0},"generated":{"line":676,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":677,"column":0},"generated":{"line":677,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":678,"column":0},"generated":{"line":678,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":679,"column":0},"generated":{"line":679,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":680,"column":0},"generated":{"line":680,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":681,"column":0},"generated":{"line":681,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":682,"column":0},"generated":{"line":682,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":683,"column":0},"generated":{"line":683,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":684,"column":0},"generated":{"line":684,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":685,"column":0},"generated":{"line":685,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":686,"column":0},"generated":{"line":686,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":687,"column":0},"generated":{"line":687,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":688,"column":0},"generated":{"line":688,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":689,"column":0},"generated":{"line":689,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":690,"column":0},"generated":{"line":690,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":691,"column":0},"generated":{"line":691,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":692,"column":0},"generated":{"line":692,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":693,"column":0},"generated":{"line":693,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":694,"column":0},"generated":{"line":694,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":695,"column":0},"generated":{"line":695,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":696,"column":0},"generated":{"line":696,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":697,"column":0},"generated":{"line":697,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":698,"column":0},"generated":{"line":698,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":699,"column":0},"generated":{"line":699,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":700,"column":0},"generated":{"line":700,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":701,"column":0},"generated":{"line":701,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":702,"column":0},"generated":{"line":702,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":703,"column":0},"generated":{"line":703,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":704,"column":0},"generated":{"line":704,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":705,"column":0},"generated":{"line":705,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":706,"column":0},"generated":{"line":706,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":707,"column":0},"generated":{"line":707,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":708,"column":0},"generated":{"line":708,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":709,"column":0},"generated":{"line":709,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":710,"column":0},"generated":{"line":710,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":711,"column":0},"generated":{"line":711,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":712,"column":0},"generated":{"line":712,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":713,"column":0},"generated":{"line":713,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":714,"column":0},"generated":{"line":714,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":715,"column":0},"generated":{"line":715,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":716,"column":0},"generated":{"line":716,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":717,"column":0},"generated":{"line":717,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":718,"column":0},"generated":{"line":718,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":719,"column":0},"generated":{"line":719,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":720,"column":0},"generated":{"line":720,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":721,"column":0},"generated":{"line":721,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":722,"column":0},"generated":{"line":722,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":723,"column":0},"generated":{"line":723,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":724,"column":0},"generated":{"line":724,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":725,"column":0},"generated":{"line":725,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":726,"column":0},"generated":{"line":726,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":727,"column":0},"generated":{"line":727,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":728,"column":0},"generated":{"line":728,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":729,"column":0},"generated":{"line":729,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":730,"column":0},"generated":{"line":730,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":731,"column":0},"generated":{"line":731,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":732,"column":0},"generated":{"line":732,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":733,"column":0},"generated":{"line":733,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":734,"column":0},"generated":{"line":734,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":735,"column":0},"generated":{"line":735,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":736,"column":0},"generated":{"line":736,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":737,"column":0},"generated":{"line":737,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":738,"column":0},"generated":{"line":738,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":739,"column":0},"generated":{"line":739,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":740,"column":0},"generated":{"line":740,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":741,"column":0},"generated":{"line":741,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":742,"column":0},"generated":{"line":742,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":743,"column":0},"generated":{"line":743,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":744,"column":0},"generated":{"line":744,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":745,"column":0},"generated":{"line":745,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":746,"column":0},"generated":{"line":746,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":747,"column":0},"generated":{"line":747,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":748,"column":0},"generated":{"line":748,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":749,"column":0},"generated":{"line":749,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":750,"column":0},"generated":{"line":750,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":751,"column":0},"generated":{"line":751,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":752,"column":0},"generated":{"line":752,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":753,"column":0},"generated":{"line":753,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":754,"column":0},"generated":{"line":754,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":755,"column":0},"generated":{"line":755,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":756,"column":0},"generated":{"line":756,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":757,"column":0},"generated":{"line":757,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":758,"column":0},"generated":{"line":758,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":759,"column":0},"generated":{"line":759,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":760,"column":0},"generated":{"line":760,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":761,"column":0},"generated":{"line":761,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":762,"column":0},"generated":{"line":762,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":763,"column":0},"generated":{"line":763,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":764,"column":0},"generated":{"line":764,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":765,"column":0},"generated":{"line":765,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":766,"column":0},"generated":{"line":766,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":767,"column":0},"generated":{"line":767,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":768,"column":0},"generated":{"line":768,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":769,"column":0},"generated":{"line":769,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":770,"column":0},"generated":{"line":770,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":771,"column":0},"generated":{"line":771,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":772,"column":0},"generated":{"line":772,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":773,"column":0},"generated":{"line":773,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":774,"column":0},"generated":{"line":774,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":775,"column":0},"generated":{"line":775,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":776,"column":0},"generated":{"line":776,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":777,"column":0},"generated":{"line":777,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":778,"column":0},"generated":{"line":778,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":779,"column":0},"generated":{"line":779,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":780,"column":0},"generated":{"line":780,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":781,"column":0},"generated":{"line":781,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":782,"column":0},"generated":{"line":782,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":783,"column":0},"generated":{"line":783,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":784,"column":0},"generated":{"line":784,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":785,"column":0},"generated":{"line":785,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":786,"column":0},"generated":{"line":786,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":787,"column":0},"generated":{"line":787,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":788,"column":0},"generated":{"line":788,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":789,"column":0},"generated":{"line":789,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":790,"column":0},"generated":{"line":790,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":791,"column":0},"generated":{"line":791,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":792,"column":0},"generated":{"line":792,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":793,"column":0},"generated":{"line":793,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":794,"column":0},"generated":{"line":794,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":795,"column":0},"generated":{"line":795,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":796,"column":0},"generated":{"line":796,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":797,"column":0},"generated":{"line":797,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":798,"column":0},"generated":{"line":798,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":799,"column":0},"generated":{"line":799,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":800,"column":0},"generated":{"line":800,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":801,"column":0},"generated":{"line":801,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":802,"column":0},"generated":{"line":802,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":803,"column":0},"generated":{"line":803,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":804,"column":0},"generated":{"line":804,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":805,"column":0},"generated":{"line":805,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":806,"column":0},"generated":{"line":806,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":807,"column":0},"generated":{"line":807,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":808,"column":0},"generated":{"line":808,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":809,"column":0},"generated":{"line":809,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":810,"column":0},"generated":{"line":810,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":811,"column":0},"generated":{"line":811,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":812,"column":0},"generated":{"line":812,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":813,"column":0},"generated":{"line":813,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":814,"column":0},"generated":{"line":814,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":815,"column":0},"generated":{"line":815,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":816,"column":0},"generated":{"line":816,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":817,"column":0},"generated":{"line":817,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":818,"column":0},"generated":{"line":818,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":819,"column":0},"generated":{"line":819,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":820,"column":0},"generated":{"line":820,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":821,"column":0},"generated":{"line":821,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":822,"column":0},"generated":{"line":822,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":823,"column":0},"generated":{"line":823,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":824,"column":0},"generated":{"line":824,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":825,"column":0},"generated":{"line":825,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":826,"column":0},"generated":{"line":826,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":827,"column":0},"generated":{"line":827,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":828,"column":0},"generated":{"line":828,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":829,"column":0},"generated":{"line":829,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":830,"column":0},"generated":{"line":830,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":831,"column":0},"generated":{"line":831,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":832,"column":0},"generated":{"line":832,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":833,"column":0},"generated":{"line":833,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":834,"column":0},"generated":{"line":834,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":835,"column":0},"generated":{"line":835,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":836,"column":0},"generated":{"line":836,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":837,"column":0},"generated":{"line":837,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":838,"column":0},"generated":{"line":838,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":839,"column":0},"generated":{"line":839,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":840,"column":0},"generated":{"line":840,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":841,"column":0},"generated":{"line":841,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":842,"column":0},"generated":{"line":842,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":843,"column":0},"generated":{"line":843,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":844,"column":0},"generated":{"line":844,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":845,"column":0},"generated":{"line":845,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":846,"column":0},"generated":{"line":846,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":847,"column":0},"generated":{"line":847,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":848,"column":0},"generated":{"line":848,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":849,"column":0},"generated":{"line":849,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":850,"column":0},"generated":{"line":850,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":851,"column":0},"generated":{"line":851,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":852,"column":0},"generated":{"line":852,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":853,"column":0},"generated":{"line":853,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":854,"column":0},"generated":{"line":854,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":855,"column":0},"generated":{"line":855,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":856,"column":0},"generated":{"line":856,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":857,"column":0},"generated":{"line":857,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":858,"column":0},"generated":{"line":858,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":859,"column":0},"generated":{"line":859,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":860,"column":0},"generated":{"line":860,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":861,"column":0},"generated":{"line":861,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":862,"column":0},"generated":{"line":862,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":863,"column":0},"generated":{"line":863,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":864,"column":0},"generated":{"line":864,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":865,"column":0},"generated":{"line":865,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":866,"column":0},"generated":{"line":866,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":867,"column":0},"generated":{"line":867,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":868,"column":0},"generated":{"line":868,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":869,"column":0},"generated":{"line":869,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":870,"column":0},"generated":{"line":870,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":871,"column":0},"generated":{"line":871,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":872,"column":0},"generated":{"line":872,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":873,"column":0},"generated":{"line":873,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":874,"column":0},"generated":{"line":874,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":875,"column":0},"generated":{"line":875,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":876,"column":0},"generated":{"line":876,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":877,"column":0},"generated":{"line":877,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":878,"column":0},"generated":{"line":878,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":879,"column":0},"generated":{"line":879,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":880,"column":0},"generated":{"line":880,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":881,"column":0},"generated":{"line":881,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":882,"column":0},"generated":{"line":882,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":883,"column":0},"generated":{"line":883,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":884,"column":0},"generated":{"line":884,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":885,"column":0},"generated":{"line":885,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":886,"column":0},"generated":{"line":886,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":887,"column":0},"generated":{"line":887,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":888,"column":0},"generated":{"line":888,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":889,"column":0},"generated":{"line":889,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":890,"column":0},"generated":{"line":890,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":891,"column":0},"generated":{"line":891,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":892,"column":0},"generated":{"line":892,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":893,"column":0},"generated":{"line":893,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":894,"column":0},"generated":{"line":894,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":895,"column":0},"generated":{"line":895,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":896,"column":0},"generated":{"line":896,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":897,"column":0},"generated":{"line":897,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":898,"column":0},"generated":{"line":898,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":899,"column":0},"generated":{"line":899,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":900,"column":0},"generated":{"line":900,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":901,"column":0},"generated":{"line":901,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":902,"column":0},"generated":{"line":902,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":903,"column":0},"generated":{"line":903,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":904,"column":0},"generated":{"line":904,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":905,"column":0},"generated":{"line":905,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":906,"column":0},"generated":{"line":906,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":907,"column":0},"generated":{"line":907,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":908,"column":0},"generated":{"line":908,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":909,"column":0},"generated":{"line":909,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":910,"column":0},"generated":{"line":910,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":911,"column":0},"generated":{"line":911,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":912,"column":0},"generated":{"line":912,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":913,"column":0},"generated":{"line":913,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":914,"column":0},"generated":{"line":914,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":915,"column":0},"generated":{"line":915,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":916,"column":0},"generated":{"line":916,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":917,"column":0},"generated":{"line":917,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":918,"column":0},"generated":{"line":918,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":919,"column":0},"generated":{"line":919,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":920,"column":0},"generated":{"line":920,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":921,"column":0},"generated":{"line":921,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":922,"column":0},"generated":{"line":922,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":923,"column":0},"generated":{"line":923,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":924,"column":0},"generated":{"line":924,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":925,"column":0},"generated":{"line":925,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":926,"column":0},"generated":{"line":926,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":927,"column":0},"generated":{"line":927,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":928,"column":0},"generated":{"line":928,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":929,"column":0},"generated":{"line":929,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":930,"column":0},"generated":{"line":930,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":931,"column":0},"generated":{"line":931,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":932,"column":0},"generated":{"line":932,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":933,"column":0},"generated":{"line":933,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":934,"column":0},"generated":{"line":934,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":935,"column":0},"generated":{"line":935,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":936,"column":0},"generated":{"line":936,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":937,"column":0},"generated":{"line":937,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":938,"column":0},"generated":{"line":938,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":939,"column":0},"generated":{"line":939,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":940,"column":0},"generated":{"line":940,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":941,"column":0},"generated":{"line":941,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":942,"column":0},"generated":{"line":942,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":943,"column":0},"generated":{"line":943,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":944,"column":0},"generated":{"line":944,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":945,"column":0},"generated":{"line":945,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":946,"column":0},"generated":{"line":946,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":947,"column":0},"generated":{"line":947,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":948,"column":0},"generated":{"line":948,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":949,"column":0},"generated":{"line":949,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":950,"column":0},"generated":{"line":950,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":951,"column":0},"generated":{"line":951,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":952,"column":0},"generated":{"line":952,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":953,"column":0},"generated":{"line":953,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":954,"column":0},"generated":{"line":954,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":955,"column":0},"generated":{"line":955,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":956,"column":0},"generated":{"line":956,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":957,"column":0},"generated":{"line":957,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":958,"column":0},"generated":{"line":958,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":959,"column":0},"generated":{"line":959,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":960,"column":0},"generated":{"line":960,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":961,"column":0},"generated":{"line":961,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":962,"column":0},"generated":{"line":962,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":963,"column":0},"generated":{"line":963,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":964,"column":0},"generated":{"line":964,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":965,"column":0},"generated":{"line":965,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":966,"column":0},"generated":{"line":966,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":967,"column":0},"generated":{"line":967,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":968,"column":0},"generated":{"line":968,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":969,"column":0},"generated":{"line":969,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":970,"column":0},"generated":{"line":970,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":971,"column":0},"generated":{"line":971,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":972,"column":0},"generated":{"line":972,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":973,"column":0},"generated":{"line":973,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":974,"column":0},"generated":{"line":974,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":975,"column":0},"generated":{"line":975,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":976,"column":0},"generated":{"line":976,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":977,"column":0},"generated":{"line":977,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":978,"column":0},"generated":{"line":978,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":979,"column":0},"generated":{"line":979,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":980,"column":0},"generated":{"line":980,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":981,"column":0},"generated":{"line":981,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":982,"column":0},"generated":{"line":982,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":983,"column":0},"generated":{"line":983,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":984,"column":0},"generated":{"line":984,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":985,"column":0},"generated":{"line":985,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":986,"column":0},"generated":{"line":986,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":987,"column":0},"generated":{"line":987,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":988,"column":0},"generated":{"line":988,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":989,"column":0},"generated":{"line":989,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":990,"column":0},"generated":{"line":990,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":991,"column":0},"generated":{"line":991,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":992,"column":0},"generated":{"line":992,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":993,"column":0},"generated":{"line":993,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":994,"column":0},"generated":{"line":994,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":995,"column":0},"generated":{"line":995,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":996,"column":0},"generated":{"line":996,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":997,"column":0},"generated":{"line":997,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":998,"column":0},"generated":{"line":998,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":999,"column":0},"generated":{"line":999,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":1000,"column":0},"generated":{"line":1000,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":1001,"column":0},"generated":{"line":1001,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":1002,"column":0},"generated":{"line":1002,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":1003,"column":0},"generated":{"line":1003,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":1004,"column":0},"generated":{"line":1004,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":1005,"column":0},"generated":{"line":1005,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":1006,"column":0},"generated":{"line":1006,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":1007,"column":0},"generated":{"line":1007,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":1008,"column":0},"generated":{"line":1008,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":1009,"column":0},"generated":{"line":1009,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":1010,"column":0},"generated":{"line":1010,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":1011,"column":0},"generated":{"line":1011,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":1012,"column":0},"generated":{"line":1012,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":1013,"column":0},"generated":{"line":1013,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":1014,"column":0},"generated":{"line":1014,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":1015,"column":0},"generated":{"line":1015,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":1016,"column":0},"generated":{"line":1016,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":1017,"column":0},"generated":{"line":1017,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":1018,"column":0},"generated":{"line":1018,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":1019,"column":0},"generated":{"line":1019,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":1020,"column":0},"generated":{"line":1020,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":1021,"column":0},"generated":{"line":1021,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":1022,"column":0},"generated":{"line":1022,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":1023,"column":0},"generated":{"line":1023,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":1024,"column":0},"generated":{"line":1024,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":1025,"column":0},"generated":{"line":1025,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":1026,"column":0},"generated":{"line":1026,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":1027,"column":0},"generated":{"line":1027,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":1028,"column":0},"generated":{"line":1028,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":1029,"column":0},"generated":{"line":1029,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":1030,"column":0},"generated":{"line":1030,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":1031,"column":0},"generated":{"line":1031,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":1032,"column":0},"generated":{"line":1032,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":1033,"column":0},"generated":{"line":1033,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":1034,"column":0},"generated":{"line":1034,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":1035,"column":0},"generated":{"line":1035,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":1036,"column":0},"generated":{"line":1036,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":1037,"column":0},"generated":{"line":1037,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":1038,"column":0},"generated":{"line":1038,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":1039,"column":0},"generated":{"line":1039,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":1040,"column":0},"generated":{"line":1040,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":1041,"column":0},"generated":{"line":1041,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":1042,"column":0},"generated":{"line":1042,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":1043,"column":0},"generated":{"line":1043,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":1044,"column":0},"generated":{"line":1044,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":1045,"column":0},"generated":{"line":1045,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":1046,"column":0},"generated":{"line":1046,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":1047,"column":0},"generated":{"line":1047,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":1048,"column":0},"generated":{"line":1048,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":1049,"column":0},"generated":{"line":1049,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":1050,"column":0},"generated":{"line":1050,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":1051,"column":0},"generated":{"line":1051,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":1052,"column":0},"generated":{"line":1052,"column":0}},{"source":"node_modules/protobufjs/ext/descriptor/index.js","original":{"line":1053,"column":0},"generated":{"line":1053,"column":0}}],"sources":{"node_modules/protobufjs/ext/descriptor/index.js":"\"use strict\";\r\nvar $protobuf = require(\"../..\");\r\nmodule.exports = exports = $protobuf.descriptor = $protobuf.Root.fromJSON(require(\"../../google/protobuf/descriptor.json\")).lookup(\".google.protobuf\");\r\n\r\nvar Namespace = $protobuf.Namespace,\r\n    Root      = $protobuf.Root,\r\n    Enum      = $protobuf.Enum,\r\n    Type      = $protobuf.Type,\r\n    Field     = $protobuf.Field,\r\n    MapField  = $protobuf.MapField,\r\n    OneOf     = $protobuf.OneOf,\r\n    Service   = $protobuf.Service,\r\n    Method    = $protobuf.Method;\r\n\r\n// --- Root ---\r\n\r\n/**\r\n * Properties of a FileDescriptorSet message.\r\n * @interface IFileDescriptorSet\r\n * @property {IFileDescriptorProto[]} file Files\r\n */\r\n\r\n/**\r\n * Properties of a FileDescriptorProto message.\r\n * @interface IFileDescriptorProto\r\n * @property {string} [name] File name\r\n * @property {string} [package] Package\r\n * @property {*} [dependency] Not supported\r\n * @property {*} [publicDependency] Not supported\r\n * @property {*} [weakDependency] Not supported\r\n * @property {IDescriptorProto[]} [messageType] Nested message types\r\n * @property {IEnumDescriptorProto[]} [enumType] Nested enums\r\n * @property {IServiceDescriptorProto[]} [service] Nested services\r\n * @property {IFieldDescriptorProto[]} [extension] Nested extension fields\r\n * @property {IFileOptions} [options] Options\r\n * @property {*} [sourceCodeInfo] Not supported\r\n * @property {string} [syntax=\"proto2\"] Syntax\r\n */\r\n\r\n/**\r\n * Properties of a FileOptions message.\r\n * @interface IFileOptions\r\n * @property {string} [javaPackage]\r\n * @property {string} [javaOuterClassname]\r\n * @property {boolean} [javaMultipleFiles]\r\n * @property {boolean} [javaGenerateEqualsAndHash]\r\n * @property {boolean} [javaStringCheckUtf8]\r\n * @property {IFileOptionsOptimizeMode} [optimizeFor=1]\r\n * @property {string} [goPackage]\r\n * @property {boolean} [ccGenericServices]\r\n * @property {boolean} [javaGenericServices]\r\n * @property {boolean} [pyGenericServices]\r\n * @property {boolean} [deprecated]\r\n * @property {boolean} [ccEnableArenas]\r\n * @property {string} [objcClassPrefix]\r\n * @property {string} [csharpNamespace]\r\n */\r\n\r\n/**\r\n * Values of he FileOptions.OptimizeMode enum.\r\n * @typedef IFileOptionsOptimizeMode\r\n * @type {number}\r\n * @property {number} SPEED=1\r\n * @property {number} CODE_SIZE=2\r\n * @property {number} LITE_RUNTIME=3\r\n */\r\n\r\n/**\r\n * Creates a root from a descriptor set.\r\n * @param {IFileDescriptorSet|Reader|Uint8Array} descriptor Descriptor\r\n * @returns {Root} Root instance\r\n */\r\nRoot.fromDescriptor = function fromDescriptor(descriptor) {\r\n\r\n    // Decode the descriptor message if specified as a buffer:\r\n    if (typeof descriptor.length === \"number\")\r\n        descriptor = exports.FileDescriptorSet.decode(descriptor);\r\n\r\n    var root = new Root();\r\n\r\n    if (descriptor.file) {\r\n        var fileDescriptor,\r\n            filePackage;\r\n        for (var j = 0, i; j < descriptor.file.length; ++j) {\r\n            filePackage = root;\r\n            if ((fileDescriptor = descriptor.file[j])[\"package\"] && fileDescriptor[\"package\"].length)\r\n                filePackage = root.define(fileDescriptor[\"package\"]);\r\n            if (fileDescriptor.name && fileDescriptor.name.length)\r\n                root.files.push(filePackage.filename = fileDescriptor.name);\r\n            if (fileDescriptor.messageType)\r\n                for (i = 0; i < fileDescriptor.messageType.length; ++i)\r\n                    filePackage.add(Type.fromDescriptor(fileDescriptor.messageType[i], fileDescriptor.syntax));\r\n            if (fileDescriptor.enumType)\r\n                for (i = 0; i < fileDescriptor.enumType.length; ++i)\r\n                    filePackage.add(Enum.fromDescriptor(fileDescriptor.enumType[i]));\r\n            if (fileDescriptor.extension)\r\n                for (i = 0; i < fileDescriptor.extension.length; ++i)\r\n                    filePackage.add(Field.fromDescriptor(fileDescriptor.extension[i]));\r\n            if (fileDescriptor.service)\r\n                for (i = 0; i < fileDescriptor.service.length; ++i)\r\n                    filePackage.add(Service.fromDescriptor(fileDescriptor.service[i]));\r\n            var opts = fromDescriptorOptions(fileDescriptor.options, exports.FileOptions);\r\n            if (opts) {\r\n                var ks = Object.keys(opts);\r\n                for (i = 0; i < ks.length; ++i)\r\n                    filePackage.setOption(ks[i], opts[ks[i]]);\r\n            }\r\n        }\r\n    }\r\n\r\n    return root;\r\n};\r\n\r\n/**\r\n * Converts a root to a descriptor set.\r\n * @returns {Message<IFileDescriptorSet>} Descriptor\r\n * @param {string} [syntax=\"proto2\"] Syntax\r\n */\r\nRoot.prototype.toDescriptor = function toDescriptor(syntax) {\r\n    var set = exports.FileDescriptorSet.create();\r\n    Root_toDescriptorRecursive(this, set.file, syntax);\r\n    return set;\r\n};\r\n\r\n// Traverses a namespace and assembles the descriptor set\r\nfunction Root_toDescriptorRecursive(ns, files, syntax) {\r\n\r\n    // Create a new file\r\n    var file = exports.FileDescriptorProto.create({ name: ns.filename || (ns.fullName.substring(1).replace(/\\./g, \"_\") || \"root\") + \".proto\" });\r\n    if (syntax)\r\n        file.syntax = syntax;\r\n    if (!(ns instanceof Root))\r\n        file[\"package\"] = ns.fullName.substring(1);\r\n\r\n    // Add nested types\r\n    for (var i = 0, nested; i < ns.nestedArray.length; ++i)\r\n        if ((nested = ns._nestedArray[i]) instanceof Type)\r\n            file.messageType.push(nested.toDescriptor(syntax));\r\n        else if (nested instanceof Enum)\r\n            file.enumType.push(nested.toDescriptor());\r\n        else if (nested instanceof Field)\r\n            file.extension.push(nested.toDescriptor(syntax));\r\n        else if (nested instanceof Service)\r\n            file.service.push(nested.toDescriptor());\r\n        else if (nested instanceof /* plain */ Namespace)\r\n            Root_toDescriptorRecursive(nested, files, syntax); // requires new file\r\n\r\n    // Keep package-level options\r\n    file.options = toDescriptorOptions(ns.options, exports.FileOptions);\r\n\r\n    // And keep the file only if there is at least one nested object\r\n    if (file.messageType.length + file.enumType.length + file.extension.length + file.service.length)\r\n        files.push(file);\r\n}\r\n\r\n// --- Type ---\r\n\r\n/**\r\n * Properties of a DescriptorProto message.\r\n * @interface IDescriptorProto\r\n * @property {string} [name] Message type name\r\n * @property {IFieldDescriptorProto[]} [field] Fields\r\n * @property {IFieldDescriptorProto[]} [extension] Extension fields\r\n * @property {IDescriptorProto[]} [nestedType] Nested message types\r\n * @property {IEnumDescriptorProto[]} [enumType] Nested enums\r\n * @property {IDescriptorProtoExtensionRange[]} [extensionRange] Extension ranges\r\n * @property {IOneofDescriptorProto[]} [oneofDecl] Oneofs\r\n * @property {IMessageOptions} [options] Not supported\r\n * @property {IDescriptorProtoReservedRange[]} [reservedRange] Reserved ranges\r\n * @property {string[]} [reservedName] Reserved names\r\n */\r\n\r\n/**\r\n * Properties of a MessageOptions message.\r\n * @interface IMessageOptions\r\n * @property {boolean} [mapEntry=false] Whether this message is a map entry\r\n */\r\n\r\n/**\r\n * Properties of an ExtensionRange message.\r\n * @interface IDescriptorProtoExtensionRange\r\n * @property {number} [start] Start field id\r\n * @property {number} [end] End field id\r\n */\r\n\r\n/**\r\n * Properties of a ReservedRange message.\r\n * @interface IDescriptorProtoReservedRange\r\n * @property {number} [start] Start field id\r\n * @property {number} [end] End field id\r\n */\r\n\r\nvar unnamedMessageIndex = 0;\r\n\r\n/**\r\n * Creates a type from a descriptor.\r\n * @param {IDescriptorProto|Reader|Uint8Array} descriptor Descriptor\r\n * @param {string} [syntax=\"proto2\"] Syntax\r\n * @returns {Type} Type instance\r\n */\r\nType.fromDescriptor = function fromDescriptor(descriptor, syntax) {\r\n\r\n    // Decode the descriptor message if specified as a buffer:\r\n    if (typeof descriptor.length === \"number\")\r\n        descriptor = exports.DescriptorProto.decode(descriptor);\r\n\r\n    // Create the message type\r\n    var type = new Type(descriptor.name.length ? descriptor.name : \"Type\" + unnamedMessageIndex++, fromDescriptorOptions(descriptor.options, exports.MessageOptions)),\r\n        i;\r\n\r\n    /* Oneofs */ if (descriptor.oneofDecl)\r\n        for (i = 0; i < descriptor.oneofDecl.length; ++i)\r\n            type.add(OneOf.fromDescriptor(descriptor.oneofDecl[i]));\r\n    /* Fields */ if (descriptor.field)\r\n        for (i = 0; i < descriptor.field.length; ++i) {\r\n            var field = Field.fromDescriptor(descriptor.field[i], syntax);\r\n            type.add(field);\r\n            if (descriptor.field[i].hasOwnProperty(\"oneofIndex\")) // eslint-disable-line no-prototype-builtins\r\n                type.oneofsArray[descriptor.field[i].oneofIndex].add(field);\r\n        }\r\n    /* Extension fields */ if (descriptor.extension)\r\n        for (i = 0; i < descriptor.extension.length; ++i)\r\n            type.add(Field.fromDescriptor(descriptor.extension[i], syntax));\r\n    /* Nested types */ if (descriptor.nestedType)\r\n        for (i = 0; i < descriptor.nestedType.length; ++i) {\r\n            type.add(Type.fromDescriptor(descriptor.nestedType[i], syntax));\r\n            if (descriptor.nestedType[i].options && descriptor.nestedType[i].options.mapEntry)\r\n                type.setOption(\"map_entry\", true);\r\n        }\r\n    /* Nested enums */ if (descriptor.enumType)\r\n        for (i = 0; i < descriptor.enumType.length; ++i)\r\n            type.add(Enum.fromDescriptor(descriptor.enumType[i]));\r\n    /* Extension ranges */ if (descriptor.extensionRange && descriptor.extensionRange.length) {\r\n        type.extensions = [];\r\n        for (i = 0; i < descriptor.extensionRange.length; ++i)\r\n            type.extensions.push([ descriptor.extensionRange[i].start, descriptor.extensionRange[i].end ]);\r\n    }\r\n    /* Reserved... */ if (descriptor.reservedRange && descriptor.reservedRange.length || descriptor.reservedName && descriptor.reservedName.length) {\r\n        type.reserved = [];\r\n        /* Ranges */ if (descriptor.reservedRange)\r\n            for (i = 0; i < descriptor.reservedRange.length; ++i)\r\n                type.reserved.push([ descriptor.reservedRange[i].start, descriptor.reservedRange[i].end ]);\r\n        /* Names */ if (descriptor.reservedName)\r\n            for (i = 0; i < descriptor.reservedName.length; ++i)\r\n                type.reserved.push(descriptor.reservedName[i]);\r\n    }\r\n\r\n    return type;\r\n};\r\n\r\n/**\r\n * Converts a type to a descriptor.\r\n * @returns {Message<IDescriptorProto>} Descriptor\r\n * @param {string} [syntax=\"proto2\"] Syntax\r\n */\r\nType.prototype.toDescriptor = function toDescriptor(syntax) {\r\n    var descriptor = exports.DescriptorProto.create({ name: this.name }),\r\n        i;\r\n\r\n    /* Fields */ for (i = 0; i < this.fieldsArray.length; ++i) {\r\n        var fieldDescriptor;\r\n        descriptor.field.push(fieldDescriptor = this._fieldsArray[i].toDescriptor(syntax));\r\n        if (this._fieldsArray[i] instanceof MapField) { // map fields are repeated FieldNameEntry\r\n            var keyType = toDescriptorType(this._fieldsArray[i].keyType, this._fieldsArray[i].resolvedKeyType),\r\n                valueType = toDescriptorType(this._fieldsArray[i].type, this._fieldsArray[i].resolvedType),\r\n                valueTypeName = valueType === /* type */ 11 || valueType === /* enum */ 14\r\n                    ? this._fieldsArray[i].resolvedType && shortname(this.parent, this._fieldsArray[i].resolvedType) || this._fieldsArray[i].type\r\n                    : undefined;\r\n            descriptor.nestedType.push(exports.DescriptorProto.create({\r\n                name: fieldDescriptor.typeName,\r\n                field: [\r\n                    exports.FieldDescriptorProto.create({ name: \"key\", number: 1, label: 1, type: keyType }), // can't reference a type or enum\r\n                    exports.FieldDescriptorProto.create({ name: \"value\", number: 2, label: 1, type: valueType, typeName: valueTypeName })\r\n                ],\r\n                options: exports.MessageOptions.create({ mapEntry: true })\r\n            }));\r\n        }\r\n    }\r\n    /* Oneofs */ for (i = 0; i < this.oneofsArray.length; ++i)\r\n        descriptor.oneofDecl.push(this._oneofsArray[i].toDescriptor());\r\n    /* Nested... */ for (i = 0; i < this.nestedArray.length; ++i) {\r\n        /* Extension fields */ if (this._nestedArray[i] instanceof Field)\r\n            descriptor.field.push(this._nestedArray[i].toDescriptor(syntax));\r\n        /* Types */ else if (this._nestedArray[i] instanceof Type)\r\n            descriptor.nestedType.push(this._nestedArray[i].toDescriptor(syntax));\r\n        /* Enums */ else if (this._nestedArray[i] instanceof Enum)\r\n            descriptor.enumType.push(this._nestedArray[i].toDescriptor());\r\n        // plain nested namespaces become packages instead in Root#toDescriptor\r\n    }\r\n    /* Extension ranges */ if (this.extensions)\r\n        for (i = 0; i < this.extensions.length; ++i)\r\n            descriptor.extensionRange.push(exports.DescriptorProto.ExtensionRange.create({ start: this.extensions[i][0], end: this.extensions[i][1] }));\r\n    /* Reserved... */ if (this.reserved)\r\n        for (i = 0; i < this.reserved.length; ++i)\r\n            /* Names */ if (typeof this.reserved[i] === \"string\")\r\n                descriptor.reservedName.push(this.reserved[i]);\r\n            /* Ranges */ else\r\n                descriptor.reservedRange.push(exports.DescriptorProto.ReservedRange.create({ start: this.reserved[i][0], end: this.reserved[i][1] }));\r\n\r\n    descriptor.options = toDescriptorOptions(this.options, exports.MessageOptions);\r\n\r\n    return descriptor;\r\n};\r\n\r\n// --- Field ---\r\n\r\n/**\r\n * Properties of a FieldDescriptorProto message.\r\n * @interface IFieldDescriptorProto\r\n * @property {string} [name] Field name\r\n * @property {number} [number] Field id\r\n * @property {IFieldDescriptorProtoLabel} [label] Field rule\r\n * @property {IFieldDescriptorProtoType} [type] Field basic type\r\n * @property {string} [typeName] Field type name\r\n * @property {string} [extendee] Extended type name\r\n * @property {string} [defaultValue] Literal default value\r\n * @property {number} [oneofIndex] Oneof index if part of a oneof\r\n * @property {*} [jsonName] Not supported\r\n * @property {IFieldOptions} [options] Field options\r\n */\r\n\r\n/**\r\n * Values of the FieldDescriptorProto.Label enum.\r\n * @typedef IFieldDescriptorProtoLabel\r\n * @type {number}\r\n * @property {number} LABEL_OPTIONAL=1\r\n * @property {number} LABEL_REQUIRED=2\r\n * @property {number} LABEL_REPEATED=3\r\n */\r\n\r\n/**\r\n * Values of the FieldDescriptorProto.Type enum.\r\n * @typedef IFieldDescriptorProtoType\r\n * @type {number}\r\n * @property {number} TYPE_DOUBLE=1\r\n * @property {number} TYPE_FLOAT=2\r\n * @property {number} TYPE_INT64=3\r\n * @property {number} TYPE_UINT64=4\r\n * @property {number} TYPE_INT32=5\r\n * @property {number} TYPE_FIXED64=6\r\n * @property {number} TYPE_FIXED32=7\r\n * @property {number} TYPE_BOOL=8\r\n * @property {number} TYPE_STRING=9\r\n * @property {number} TYPE_GROUP=10\r\n * @property {number} TYPE_MESSAGE=11\r\n * @property {number} TYPE_BYTES=12\r\n * @property {number} TYPE_UINT32=13\r\n * @property {number} TYPE_ENUM=14\r\n * @property {number} TYPE_SFIXED32=15\r\n * @property {number} TYPE_SFIXED64=16\r\n * @property {number} TYPE_SINT32=17\r\n * @property {number} TYPE_SINT64=18\r\n */\r\n\r\n/**\r\n * Properties of a FieldOptions message.\r\n * @interface IFieldOptions\r\n * @property {boolean} [packed] Whether packed or not (defaults to `false` for proto2 and `true` for proto3)\r\n * @property {IFieldOptionsJSType} [jstype] JavaScript value type (not used by protobuf.js)\r\n */\r\n\r\n/**\r\n * Values of the FieldOptions.JSType enum.\r\n * @typedef IFieldOptionsJSType\r\n * @type {number}\r\n * @property {number} JS_NORMAL=0\r\n * @property {number} JS_STRING=1\r\n * @property {number} JS_NUMBER=2\r\n */\r\n\r\n// copied here from parse.js\r\nvar numberRe = /^(?![eE])[0-9]*(?:\\.[0-9]*)?(?:[eE][+-]?[0-9]+)?$/;\r\n\r\n/**\r\n * Creates a field from a descriptor.\r\n * @param {IFieldDescriptorProto|Reader|Uint8Array} descriptor Descriptor\r\n * @param {string} [syntax=\"proto2\"] Syntax\r\n * @returns {Field} Field instance\r\n */\r\nField.fromDescriptor = function fromDescriptor(descriptor, syntax) {\r\n\r\n    // Decode the descriptor message if specified as a buffer:\r\n    if (typeof descriptor.length === \"number\")\r\n        descriptor = exports.DescriptorProto.decode(descriptor);\r\n\r\n    if (typeof descriptor.number !== \"number\")\r\n        throw Error(\"missing field id\");\r\n\r\n    // Rewire field type\r\n    var fieldType;\r\n    if (descriptor.typeName && descriptor.typeName.length)\r\n        fieldType = descriptor.typeName;\r\n    else\r\n        fieldType = fromDescriptorType(descriptor.type);\r\n\r\n    // Rewire field rule\r\n    var fieldRule;\r\n    switch (descriptor.label) {\r\n        // 0 is reserved for errors\r\n        case 1: fieldRule = undefined; break;\r\n        case 2: fieldRule = \"required\"; break;\r\n        case 3: fieldRule = \"repeated\"; break;\r\n        default: throw Error(\"illegal label: \" + descriptor.label);\r\n    }\r\n\r\n\tvar extendee = descriptor.extendee;\r\n\tif (descriptor.extendee !== undefined) {\r\n\t\textendee = extendee.length ? extendee : undefined;\r\n\t}\r\n    var field = new Field(\r\n        descriptor.name.length ? descriptor.name : \"field\" + descriptor.number,\r\n        descriptor.number,\r\n        fieldType,\r\n        fieldRule,\r\n        extendee\r\n    );\r\n\r\n    field.options = fromDescriptorOptions(descriptor.options, exports.FieldOptions);\r\n\r\n    if (descriptor.defaultValue && descriptor.defaultValue.length) {\r\n        var defaultValue = descriptor.defaultValue;\r\n        switch (defaultValue) {\r\n            case \"true\": case \"TRUE\":\r\n                defaultValue = true;\r\n                break;\r\n            case \"false\": case \"FALSE\":\r\n                defaultValue = false;\r\n                break;\r\n            default:\r\n                var match = numberRe.exec(defaultValue);\r\n                if (match)\r\n                    defaultValue = parseInt(defaultValue); // eslint-disable-line radix\r\n                break;\r\n        }\r\n        field.setOption(\"default\", defaultValue);\r\n    }\r\n\r\n    if (packableDescriptorType(descriptor.type)) {\r\n        if (syntax === \"proto3\") { // defaults to packed=true (internal preset is packed=true)\r\n            if (descriptor.options && !descriptor.options.packed)\r\n                field.setOption(\"packed\", false);\r\n        } else if (!(descriptor.options && descriptor.options.packed)) // defaults to packed=false\r\n            field.setOption(\"packed\", false);\r\n    }\r\n\r\n    return field;\r\n};\r\n\r\n/**\r\n * Converts a field to a descriptor.\r\n * @returns {Message<IFieldDescriptorProto>} Descriptor\r\n * @param {string} [syntax=\"proto2\"] Syntax\r\n */\r\nField.prototype.toDescriptor = function toDescriptor(syntax) {\r\n    var descriptor = exports.FieldDescriptorProto.create({ name: this.name, number: this.id });\r\n\r\n    if (this.map) {\r\n\r\n        descriptor.type = 11; // message\r\n        descriptor.typeName = $protobuf.util.ucFirst(this.name); // fieldName -> FieldNameEntry (built in Type#toDescriptor)\r\n        descriptor.label = 3; // repeated\r\n\r\n    } else {\r\n\r\n        // Rewire field type\r\n        switch (descriptor.type = toDescriptorType(this.type, this.resolve().resolvedType)) {\r\n            case 10: // group\r\n            case 11: // type\r\n            case 14: // enum\r\n                descriptor.typeName = this.resolvedType ? shortname(this.parent, this.resolvedType) : this.type;\r\n                break;\r\n        }\r\n\r\n        // Rewire field rule\r\n        switch (this.rule) {\r\n            case \"repeated\": descriptor.label = 3; break;\r\n            case \"required\": descriptor.label = 2; break;\r\n            default: descriptor.label = 1; break;\r\n        }\r\n\r\n    }\r\n\r\n    // Handle extension field\r\n    descriptor.extendee = this.extensionField ? this.extensionField.parent.fullName : this.extend;\r\n\r\n    // Handle part of oneof\r\n    if (this.partOf)\r\n        if ((descriptor.oneofIndex = this.parent.oneofsArray.indexOf(this.partOf)) < 0)\r\n            throw Error(\"missing oneof\");\r\n\r\n    if (this.options) {\r\n        descriptor.options = toDescriptorOptions(this.options, exports.FieldOptions);\r\n        if (this.options[\"default\"] != null)\r\n            descriptor.defaultValue = String(this.options[\"default\"]);\r\n    }\r\n\r\n    if (syntax === \"proto3\") { // defaults to packed=true\r\n        if (!this.packed)\r\n            (descriptor.options || (descriptor.options = exports.FieldOptions.create())).packed = false;\r\n    } else if (this.packed) // defaults to packed=false\r\n        (descriptor.options || (descriptor.options = exports.FieldOptions.create())).packed = true;\r\n\r\n    return descriptor;\r\n};\r\n\r\n// --- Enum ---\r\n\r\n/**\r\n * Properties of an EnumDescriptorProto message.\r\n * @interface IEnumDescriptorProto\r\n * @property {string} [name] Enum name\r\n * @property {IEnumValueDescriptorProto[]} [value] Enum values\r\n * @property {IEnumOptions} [options] Enum options\r\n */\r\n\r\n/**\r\n * Properties of an EnumValueDescriptorProto message.\r\n * @interface IEnumValueDescriptorProto\r\n * @property {string} [name] Name\r\n * @property {number} [number] Value\r\n * @property {*} [options] Not supported\r\n */\r\n\r\n/**\r\n * Properties of an EnumOptions message.\r\n * @interface IEnumOptions\r\n * @property {boolean} [allowAlias] Whether aliases are allowed\r\n * @property {boolean} [deprecated]\r\n */\r\n\r\nvar unnamedEnumIndex = 0;\r\n\r\n/**\r\n * Creates an enum from a descriptor.\r\n * @param {IEnumDescriptorProto|Reader|Uint8Array} descriptor Descriptor\r\n * @returns {Enum} Enum instance\r\n */\r\nEnum.fromDescriptor = function fromDescriptor(descriptor) {\r\n\r\n    // Decode the descriptor message if specified as a buffer:\r\n    if (typeof descriptor.length === \"number\")\r\n        descriptor = exports.EnumDescriptorProto.decode(descriptor);\r\n\r\n    // Construct values object\r\n    var values = {};\r\n    if (descriptor.value)\r\n        for (var i = 0; i < descriptor.value.length; ++i) {\r\n            var name  = descriptor.value[i].name,\r\n                value = descriptor.value[i].number || 0;\r\n            values[name && name.length ? name : \"NAME\" + value] = value;\r\n        }\r\n\r\n    return new Enum(\r\n        descriptor.name && descriptor.name.length ? descriptor.name : \"Enum\" + unnamedEnumIndex++,\r\n        values,\r\n        fromDescriptorOptions(descriptor.options, exports.EnumOptions)\r\n    );\r\n};\r\n\r\n/**\r\n * Converts an enum to a descriptor.\r\n * @returns {Message<IEnumDescriptorProto>} Descriptor\r\n */\r\nEnum.prototype.toDescriptor = function toDescriptor() {\r\n\r\n    // Values\r\n    var values = [];\r\n    for (var i = 0, ks = Object.keys(this.values); i < ks.length; ++i)\r\n        values.push(exports.EnumValueDescriptorProto.create({ name: ks[i], number: this.values[ks[i]] }));\r\n\r\n    return exports.EnumDescriptorProto.create({\r\n        name: this.name,\r\n        value: values,\r\n        options: toDescriptorOptions(this.options, exports.EnumOptions)\r\n    });\r\n};\r\n\r\n// --- OneOf ---\r\n\r\n/**\r\n * Properties of a OneofDescriptorProto message.\r\n * @interface IOneofDescriptorProto\r\n * @property {string} [name] Oneof name\r\n * @property {*} [options] Not supported\r\n */\r\n\r\nvar unnamedOneofIndex = 0;\r\n\r\n/**\r\n * Creates a oneof from a descriptor.\r\n * @param {IOneofDescriptorProto|Reader|Uint8Array} descriptor Descriptor\r\n * @returns {OneOf} OneOf instance\r\n */\r\nOneOf.fromDescriptor = function fromDescriptor(descriptor) {\r\n\r\n    // Decode the descriptor message if specified as a buffer:\r\n    if (typeof descriptor.length === \"number\")\r\n        descriptor = exports.OneofDescriptorProto.decode(descriptor);\r\n\r\n    return new OneOf(\r\n        // unnamedOneOfIndex is global, not per type, because we have no ref to a type here\r\n        descriptor.name && descriptor.name.length ? descriptor.name : \"oneof\" + unnamedOneofIndex++\r\n        // fromDescriptorOptions(descriptor.options, exports.OneofOptions) - only uninterpreted_option\r\n    );\r\n};\r\n\r\n/**\r\n * Converts a oneof to a descriptor.\r\n * @returns {Message<IOneofDescriptorProto>} Descriptor\r\n */\r\nOneOf.prototype.toDescriptor = function toDescriptor() {\r\n    return exports.OneofDescriptorProto.create({\r\n        name: this.name\r\n        // options: toDescriptorOptions(this.options, exports.OneofOptions) - only uninterpreted_option\r\n    });\r\n};\r\n\r\n// --- Service ---\r\n\r\n/**\r\n * Properties of a ServiceDescriptorProto message.\r\n * @interface IServiceDescriptorProto\r\n * @property {string} [name] Service name\r\n * @property {IMethodDescriptorProto[]} [method] Methods\r\n * @property {IServiceOptions} [options] Options\r\n */\r\n\r\n/**\r\n * Properties of a ServiceOptions message.\r\n * @interface IServiceOptions\r\n * @property {boolean} [deprecated]\r\n */\r\n\r\nvar unnamedServiceIndex = 0;\r\n\r\n/**\r\n * Creates a service from a descriptor.\r\n * @param {IServiceDescriptorProto|Reader|Uint8Array} descriptor Descriptor\r\n * @returns {Service} Service instance\r\n */\r\nService.fromDescriptor = function fromDescriptor(descriptor) {\r\n\r\n    // Decode the descriptor message if specified as a buffer:\r\n    if (typeof descriptor.length === \"number\")\r\n        descriptor = exports.ServiceDescriptorProto.decode(descriptor);\r\n\r\n    var service = new Service(descriptor.name && descriptor.name.length ? descriptor.name : \"Service\" + unnamedServiceIndex++, fromDescriptorOptions(descriptor.options, exports.ServiceOptions));\r\n    if (descriptor.method)\r\n        for (var i = 0; i < descriptor.method.length; ++i)\r\n            service.add(Method.fromDescriptor(descriptor.method[i]));\r\n\r\n    return service;\r\n};\r\n\r\n/**\r\n * Converts a service to a descriptor.\r\n * @returns {Message<IServiceDescriptorProto>} Descriptor\r\n */\r\nService.prototype.toDescriptor = function toDescriptor() {\r\n\r\n    // Methods\r\n    var methods = [];\r\n    for (var i = 0; i < this.methodsArray; ++i)\r\n        methods.push(this._methodsArray[i].toDescriptor());\r\n\r\n    return exports.ServiceDescriptorProto.create({\r\n        name: this.name,\r\n        methods: methods,\r\n        options: toDescriptorOptions(this.options, exports.ServiceOptions)\r\n    });\r\n};\r\n\r\n// --- Method ---\r\n\r\n/**\r\n * Properties of a MethodDescriptorProto message.\r\n * @interface IMethodDescriptorProto\r\n * @property {string} [name] Method name\r\n * @property {string} [inputType] Request type name\r\n * @property {string} [outputType] Response type name\r\n * @property {IMethodOptions} [options] Not supported\r\n * @property {boolean} [clientStreaming=false] Whether requests are streamed\r\n * @property {boolean} [serverStreaming=false] Whether responses are streamed\r\n */\r\n\r\n/**\r\n * Properties of a MethodOptions message.\r\n * @interface IMethodOptions\r\n * @property {boolean} [deprecated]\r\n */\r\n\r\nvar unnamedMethodIndex = 0;\r\n\r\n/**\r\n * Creates a method from a descriptor.\r\n * @param {IMethodDescriptorProto|Reader|Uint8Array} descriptor Descriptor\r\n * @returns {Method} Reflected method instance\r\n */\r\nMethod.fromDescriptor = function fromDescriptor(descriptor) {\r\n\r\n    // Decode the descriptor message if specified as a buffer:\r\n    if (typeof descriptor.length === \"number\")\r\n        descriptor = exports.MethodDescriptorProto.decode(descriptor);\r\n\r\n    return new Method(\r\n        // unnamedMethodIndex is global, not per service, because we have no ref to a service here\r\n        descriptor.name && descriptor.name.length ? descriptor.name : \"Method\" + unnamedMethodIndex++,\r\n        \"rpc\",\r\n        descriptor.inputType,\r\n        descriptor.outputType,\r\n        Boolean(descriptor.clientStreaming),\r\n        Boolean(descriptor.serverStreaming),\r\n        fromDescriptorOptions(descriptor.options, exports.MethodOptions)\r\n    );\r\n};\r\n\r\n/**\r\n * Converts a method to a descriptor.\r\n * @returns {Message<IMethodDescriptorProto>} Descriptor\r\n */\r\nMethod.prototype.toDescriptor = function toDescriptor() {\r\n    return exports.MethodDescriptorProto.create({\r\n        name: this.name,\r\n        inputType: this.resolvedRequestType ? this.resolvedRequestType.fullName : this.requestType,\r\n        outputType: this.resolvedResponseType ? this.resolvedResponseType.fullName : this.responseType,\r\n        clientStreaming: this.requestStream,\r\n        serverStreaming: this.responseStream,\r\n        options: toDescriptorOptions(this.options, exports.MethodOptions)\r\n    });\r\n};\r\n\r\n// --- utility ---\r\n\r\n// Converts a descriptor type to a protobuf.js basic type\r\nfunction fromDescriptorType(type) {\r\n    switch (type) {\r\n        // 0 is reserved for errors\r\n        case 1: return \"double\";\r\n        case 2: return \"float\";\r\n        case 3: return \"int64\";\r\n        case 4: return \"uint64\";\r\n        case 5: return \"int32\";\r\n        case 6: return \"fixed64\";\r\n        case 7: return \"fixed32\";\r\n        case 8: return \"bool\";\r\n        case 9: return \"string\";\r\n        case 12: return \"bytes\";\r\n        case 13: return \"uint32\";\r\n        case 15: return \"sfixed32\";\r\n        case 16: return \"sfixed64\";\r\n        case 17: return \"sint32\";\r\n        case 18: return \"sint64\";\r\n    }\r\n    throw Error(\"illegal type: \" + type);\r\n}\r\n\r\n// Tests if a descriptor type is packable\r\nfunction packableDescriptorType(type) {\r\n    switch (type) {\r\n        case 1: // double\r\n        case 2: // float\r\n        case 3: // int64\r\n        case 4: // uint64\r\n        case 5: // int32\r\n        case 6: // fixed64\r\n        case 7: // fixed32\r\n        case 8: // bool\r\n        case 13: // uint32\r\n        case 14: // enum (!)\r\n        case 15: // sfixed32\r\n        case 16: // sfixed64\r\n        case 17: // sint32\r\n        case 18: // sint64\r\n            return true;\r\n    }\r\n    return false;\r\n}\r\n\r\n// Converts a protobuf.js basic type to a descriptor type\r\nfunction toDescriptorType(type, resolvedType) {\r\n    switch (type) {\r\n        // 0 is reserved for errors\r\n        case \"double\": return 1;\r\n        case \"float\": return 2;\r\n        case \"int64\": return 3;\r\n        case \"uint64\": return 4;\r\n        case \"int32\": return 5;\r\n        case \"fixed64\": return 6;\r\n        case \"fixed32\": return 7;\r\n        case \"bool\": return 8;\r\n        case \"string\": return 9;\r\n        case \"bytes\": return 12;\r\n        case \"uint32\": return 13;\r\n        case \"sfixed32\": return 15;\r\n        case \"sfixed64\": return 16;\r\n        case \"sint32\": return 17;\r\n        case \"sint64\": return 18;\r\n    }\r\n    if (resolvedType instanceof Enum)\r\n        return 14;\r\n    if (resolvedType instanceof Type)\r\n        return resolvedType.group ? 10 : 11;\r\n    throw Error(\"illegal type: \" + type);\r\n}\r\n\r\n// Converts descriptor options to an options object\r\nfunction fromDescriptorOptions(options, type) {\r\n    if (!options)\r\n        return undefined;\r\n    var out = [];\r\n    for (var i = 0, field, key, val; i < type.fieldsArray.length; ++i)\r\n        if ((key = (field = type._fieldsArray[i]).name) !== \"uninterpretedOption\")\r\n            if (options.hasOwnProperty(key)) { // eslint-disable-line no-prototype-builtins\r\n                val = options[key];\r\n                if (field.resolvedType instanceof Enum && typeof val === \"number\" && field.resolvedType.valuesById[val] !== undefined)\r\n                    val = field.resolvedType.valuesById[val];\r\n                out.push(underScore(key), val);\r\n            }\r\n    return out.length ? $protobuf.util.toObject(out) : undefined;\r\n}\r\n\r\n// Converts an options object to descriptor options\r\nfunction toDescriptorOptions(options, type) {\r\n    if (!options)\r\n        return undefined;\r\n    var out = [];\r\n    for (var i = 0, ks = Object.keys(options), key, val; i < ks.length; ++i) {\r\n        val = options[key = ks[i]];\r\n        if (key === \"default\")\r\n            continue;\r\n        var field = type.fields[key];\r\n        if (!field && !(field = type.fields[key = $protobuf.util.camelCase(key)]))\r\n            continue;\r\n        out.push(key, val);\r\n    }\r\n    return out.length ? type.fromObject($protobuf.util.toObject(out)) : undefined;\r\n}\r\n\r\n// Calculates the shortest relative path from `from` to `to`.\r\nfunction shortname(from, to) {\r\n    var fromPath = from.fullName.split(\".\"),\r\n        toPath = to.fullName.split(\".\"),\r\n        i = 0,\r\n        j = 0,\r\n        k = toPath.length - 1;\r\n    if (!(from instanceof Root) && to instanceof Namespace)\r\n        while (i < fromPath.length && j < k && fromPath[i] === toPath[j]) {\r\n            var other = to.lookup(fromPath[i++], true);\r\n            if (other !== null && other !== to)\r\n                break;\r\n            ++j;\r\n        }\r\n    else\r\n        for (; i < fromPath.length && j < k && fromPath[i] === toPath[j]; ++i, ++j);\r\n    return toPath.slice(j).join(\".\");\r\n}\r\n\r\n// copied here from cli/targets/proto.js\r\nfunction underScore(str) {\r\n    return str.substring(0,1)\r\n         + str.substring(1)\r\n               .replace(/([A-Z])(?=[a-z]|$)/g, function($0, $1) { return \"_\" + $1.toLowerCase(); });\r\n}\r\n\r\n// --- exports ---\r\n\r\n/**\r\n * Reflected file descriptor set.\r\n * @name FileDescriptorSet\r\n * @type {Type}\r\n * @const\r\n * @tstype $protobuf.Type\r\n */\r\n\r\n/**\r\n * Reflected file descriptor proto.\r\n * @name FileDescriptorProto\r\n * @type {Type}\r\n * @const\r\n * @tstype $protobuf.Type\r\n */\r\n\r\n/**\r\n * Reflected descriptor proto.\r\n * @name DescriptorProto\r\n * @type {Type}\r\n * @property {Type} ExtensionRange\r\n * @property {Type} ReservedRange\r\n * @const\r\n * @tstype $protobuf.Type & {\r\n *     ExtensionRange: $protobuf.Type,\r\n *     ReservedRange: $protobuf.Type\r\n * }\r\n */\r\n\r\n/**\r\n * Reflected field descriptor proto.\r\n * @name FieldDescriptorProto\r\n * @type {Type}\r\n * @property {Enum} Label\r\n * @property {Enum} Type\r\n * @const\r\n * @tstype $protobuf.Type & {\r\n *     Label: $protobuf.Enum,\r\n *     Type: $protobuf.Enum\r\n * }\r\n */\r\n\r\n/**\r\n * Reflected oneof descriptor proto.\r\n * @name OneofDescriptorProto\r\n * @type {Type}\r\n * @const\r\n * @tstype $protobuf.Type\r\n */\r\n\r\n/**\r\n * Reflected enum descriptor proto.\r\n * @name EnumDescriptorProto\r\n * @type {Type}\r\n * @const\r\n * @tstype $protobuf.Type\r\n */\r\n\r\n/**\r\n * Reflected service descriptor proto.\r\n * @name ServiceDescriptorProto\r\n * @type {Type}\r\n * @const\r\n * @tstype $protobuf.Type\r\n */\r\n\r\n/**\r\n * Reflected enum value descriptor proto.\r\n * @name EnumValueDescriptorProto\r\n * @type {Type}\r\n * @const\r\n * @tstype $protobuf.Type\r\n */\r\n\r\n/**\r\n * Reflected method descriptor proto.\r\n * @name MethodDescriptorProto\r\n * @type {Type}\r\n * @const\r\n * @tstype $protobuf.Type\r\n */\r\n\r\n/**\r\n * Reflected file options.\r\n * @name FileOptions\r\n * @type {Type}\r\n * @property {Enum} OptimizeMode\r\n * @const\r\n * @tstype $protobuf.Type & {\r\n *     OptimizeMode: $protobuf.Enum\r\n * }\r\n */\r\n\r\n/**\r\n * Reflected message options.\r\n * @name MessageOptions\r\n * @type {Type}\r\n * @const\r\n * @tstype $protobuf.Type\r\n */\r\n\r\n/**\r\n * Reflected field options.\r\n * @name FieldOptions\r\n * @type {Type}\r\n * @property {Enum} CType\r\n * @property {Enum} JSType\r\n * @const\r\n * @tstype $protobuf.Type & {\r\n *     CType: $protobuf.Enum,\r\n *     JSType: $protobuf.Enum\r\n * }\r\n */\r\n\r\n/**\r\n * Reflected oneof options.\r\n * @name OneofOptions\r\n * @type {Type}\r\n * @const\r\n * @tstype $protobuf.Type\r\n */\r\n\r\n/**\r\n * Reflected enum options.\r\n * @name EnumOptions\r\n * @type {Type}\r\n * @const\r\n * @tstype $protobuf.Type\r\n */\r\n\r\n/**\r\n * Reflected enum value options.\r\n * @name EnumValueOptions\r\n * @type {Type}\r\n * @const\r\n * @tstype $protobuf.Type\r\n */\r\n\r\n/**\r\n * Reflected service options.\r\n * @name ServiceOptions\r\n * @type {Type}\r\n * @const\r\n * @tstype $protobuf.Type\r\n */\r\n\r\n/**\r\n * Reflected method options.\r\n * @name MethodOptions\r\n * @type {Type}\r\n * @const\r\n * @tstype $protobuf.Type\r\n */\r\n\r\n/**\r\n * Reflected uninterpretet option.\r\n * @name UninterpretedOption\r\n * @type {Type}\r\n * @property {Type} NamePart\r\n * @const\r\n * @tstype $protobuf.Type & {\r\n *     NamePart: $protobuf.Type\r\n * }\r\n */\r\n\r\n/**\r\n * Reflected source code info.\r\n * @name SourceCodeInfo\r\n * @type {Type}\r\n * @property {Type} Location\r\n * @const\r\n * @tstype $protobuf.Type & {\r\n *     Location: $protobuf.Type\r\n * }\r\n */\r\n\r\n/**\r\n * Reflected generated code info.\r\n * @name GeneratedCodeInfo\r\n * @type {Type}\r\n * @property {Type} Annotation\r\n * @const\r\n * @tstype $protobuf.Type & {\r\n *     Annotation: $protobuf.Type\r\n * }\r\n */\r\n"},"lineCount":1053}},"hash":"fc2787b7b0e11b6d8b8591024fe4c6bd","cacheData":{"env":{}}}