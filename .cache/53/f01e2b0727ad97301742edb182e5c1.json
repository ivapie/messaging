{"id":"../node_modules/googleapis-common/build/src/discovery.js","dependencies":[{"name":"/Users/Ivanchis/Desktop/Messaging/messaging/package.json","includedInParent":true,"mtime":1551481286000},{"name":"/Users/Ivanchis/Desktop/Messaging/messaging/node_modules/googleapis-common/package.json","includedInParent":true,"mtime":1551479865000},{"name":"fs","loc":{"line":23,"column":19},"parent":"/Users/Ivanchis/Desktop/Messaging/messaging/node_modules/googleapis-common/build/src/discovery.js","resolved":"/Users/Ivanchis/Desktop/Messaging/messaging/node_modules/parcel/src/builtins/_empty.js"},{"name":"google-auth-library","loc":{"line":24,"column":38},"parent":"/Users/Ivanchis/Desktop/Messaging/messaging/node_modules/googleapis-common/build/src/discovery.js","resolved":"/Users/Ivanchis/Desktop/Messaging/messaging/node_modules/google-auth-library/build/src/index.js"},{"name":"pify","loc":{"line":25,"column":21},"parent":"/Users/Ivanchis/Desktop/Messaging/messaging/node_modules/googleapis-common/build/src/discovery.js","resolved":"/Users/Ivanchis/Desktop/Messaging/messaging/node_modules/pify/index.js"},{"name":"url","loc":{"line":26,"column":20},"parent":"/Users/Ivanchis/Desktop/Messaging/messaging/node_modules/googleapis-common/build/src/discovery.js","resolved":"/Users/Ivanchis/Desktop/Messaging/messaging/node_modules/url/url.js"},{"name":"util","loc":{"line":27,"column":21},"parent":"/Users/Ivanchis/Desktop/Messaging/messaging/node_modules/googleapis-common/build/src/discovery.js","resolved":"/Users/Ivanchis/Desktop/Messaging/messaging/node_modules/util/util.js"},{"name":"./apirequest","loc":{"line":28,"column":29},"parent":"/Users/Ivanchis/Desktop/Messaging/messaging/node_modules/googleapis-common/build/src/discovery.js","resolved":"/Users/Ivanchis/Desktop/Messaging/messaging/node_modules/googleapis-common/build/src/apirequest.js"},{"name":"./endpoint","loc":{"line":29,"column":27},"parent":"/Users/Ivanchis/Desktop/Messaging/messaging/node_modules/googleapis-common/build/src/discovery.js","resolved":"/Users/Ivanchis/Desktop/Messaging/messaging/node_modules/googleapis-common/build/src/endpoint.js"}],"generated":{"js":"\"use strict\";\n// Copyright 2014-2016, Google, Inc.\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst fs = require(\"fs\");\nconst google_auth_library_1 = require(\"google-auth-library\");\nconst pify = require(\"pify\");\nconst url = require(\"url\");\nconst util = require(\"util\");\nconst apirequest_1 = require(\"./apirequest\");\nconst endpoint_1 = require(\"./endpoint\");\nconst fsp = pify(fs);\nclass Discovery {\n    /**\n     * Discovery for discovering API endpoints\n     *\n     * @param options Options for discovery\n     */\n    constructor(options) {\n        this.transporter = new google_auth_library_1.DefaultTransporter();\n        this.options = options || {};\n    }\n    /**\n     * Generate and Endpoint from an endpoint schema object.\n     *\n     * @param schema The schema from which to generate the Endpoint.\n     * @return A function that creates an endpoint.\n     */\n    makeEndpoint(schema) {\n        return (options) => {\n            const ep = new endpoint_1.Endpoint(options);\n            ep.applySchema(ep, schema, schema, ep);\n            return ep;\n        };\n    }\n    /**\n     * Log output of generator. Works just like console.log\n     */\n    log(...args) {\n        if (this.options && this.options.debug) {\n            console.log(...args);\n        }\n    }\n    /**\n     * Generate all APIs and return as in-memory object.\n     * @param discoveryUrl\n     */\n    discoverAllAPIs(discoveryUrl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const headers = this.options.includePrivate ? {} : { 'X-User-Ip': '0.0.0.0' };\n            const res = yield this.transporter.request({ url: discoveryUrl, headers });\n            const items = res.data.items;\n            const apis = yield Promise.all(items.map((api) => __awaiter(this, void 0, void 0, function* () {\n                const endpointCreator = yield this.discoverAPI(api.discoveryRestUrl);\n                return { api, endpointCreator };\n            })));\n            const versionIndex = {};\n            // tslint:disable-next-line no-any\n            const apisIndex = {};\n            for (const set of apis) {\n                if (!apisIndex[set.api.name]) {\n                    versionIndex[set.api.name] = {};\n                    apisIndex[set.api.name] = (options) => {\n                        const type = typeof options;\n                        let version;\n                        if (type === 'string') {\n                            version = options;\n                            options = {};\n                        }\n                        else if (type === 'object') {\n                            version = options.version;\n                            delete options.version;\n                        }\n                        else {\n                            throw new Error('Argument error: Accepts only string or object');\n                        }\n                        try {\n                            const ep = \n                            // tslint:disable-next-line: no-any\n                            set.endpointCreator(options, this);\n                            return Object.freeze(ep); // create new & freeze\n                        }\n                        catch (e) {\n                            throw new Error(util.format('Unable to load endpoint %s(\"%s\"): %s', set.api.name, version, e.message));\n                        }\n                    };\n                }\n                versionIndex[set.api.name][set.api.version] = set.endpointCreator;\n            }\n            return apisIndex;\n        });\n    }\n    /**\n     * Generate API file given discovery URL\n     *\n     * @param apiDiscoveryUrl URL or filename of discovery doc for API\n     * @returns A promise that resolves with a function that creates the endpoint\n     */\n    discoverAPI(apiDiscoveryUrl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (typeof apiDiscoveryUrl === 'string') {\n                const parts = url.parse(apiDiscoveryUrl);\n                if (apiDiscoveryUrl && !parts.protocol) {\n                    this.log('Reading from file ' + apiDiscoveryUrl);\n                    const file = yield fsp.readFile(apiDiscoveryUrl, { encoding: 'utf8' });\n                    return this.makeEndpoint(JSON.parse(file));\n                }\n                else {\n                    this.log('Requesting ' + apiDiscoveryUrl);\n                    const res = yield this.transporter.request({ url: apiDiscoveryUrl });\n                    return this.makeEndpoint(res.data);\n                }\n            }\n            else {\n                const options = apiDiscoveryUrl;\n                this.log('Requesting ' + options.url);\n                const url = options.url;\n                delete options.url;\n                const parameters = {\n                    options: { url, method: 'GET' },\n                    requiredParams: [],\n                    pathParams: [],\n                    params: options,\n                    context: { google: { _options: {} }, _options: {} }\n                };\n                const pcr = pify(apirequest_1.createAPIRequest);\n                const res = yield pcr(parameters);\n                return this.makeEndpoint(res.data);\n            }\n        });\n    }\n}\nexports.Discovery = Discovery;\n","map":{"mappings":[{"source":"../node_modules/googleapis-common/build/src/discovery.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/googleapis-common/build/src/discovery.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/googleapis-common/build/src/discovery.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/googleapis-common/build/src/discovery.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/googleapis-common/build/src/discovery.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/googleapis-common/build/src/discovery.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/googleapis-common/build/src/discovery.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/googleapis-common/build/src/discovery.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/googleapis-common/build/src/discovery.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/googleapis-common/build/src/discovery.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/googleapis-common/build/src/discovery.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/googleapis-common/build/src/discovery.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/googleapis-common/build/src/discovery.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/googleapis-common/build/src/discovery.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/googleapis-common/build/src/discovery.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/googleapis-common/build/src/discovery.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/googleapis-common/build/src/discovery.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/googleapis-common/build/src/discovery.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/googleapis-common/build/src/discovery.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/googleapis-common/build/src/discovery.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/googleapis-common/build/src/discovery.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/googleapis-common/build/src/discovery.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/googleapis-common/build/src/discovery.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/googleapis-common/build/src/discovery.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/googleapis-common/build/src/discovery.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/googleapis-common/build/src/discovery.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/googleapis-common/build/src/discovery.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/googleapis-common/build/src/discovery.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/googleapis-common/build/src/discovery.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/googleapis-common/build/src/discovery.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/googleapis-common/build/src/discovery.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/googleapis-common/build/src/discovery.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/googleapis-common/build/src/discovery.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/googleapis-common/build/src/discovery.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/googleapis-common/build/src/discovery.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/googleapis-common/build/src/discovery.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/googleapis-common/build/src/discovery.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/googleapis-common/build/src/discovery.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/googleapis-common/build/src/discovery.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/googleapis-common/build/src/discovery.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/googleapis-common/build/src/discovery.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/googleapis-common/build/src/discovery.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/googleapis-common/build/src/discovery.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/googleapis-common/build/src/discovery.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/googleapis-common/build/src/discovery.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/googleapis-common/build/src/discovery.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/googleapis-common/build/src/discovery.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/googleapis-common/build/src/discovery.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/googleapis-common/build/src/discovery.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/googleapis-common/build/src/discovery.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/googleapis-common/build/src/discovery.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/googleapis-common/build/src/discovery.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/googleapis-common/build/src/discovery.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/googleapis-common/build/src/discovery.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/googleapis-common/build/src/discovery.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/googleapis-common/build/src/discovery.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/googleapis-common/build/src/discovery.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/googleapis-common/build/src/discovery.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/googleapis-common/build/src/discovery.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/googleapis-common/build/src/discovery.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/googleapis-common/build/src/discovery.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/googleapis-common/build/src/discovery.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/googleapis-common/build/src/discovery.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/googleapis-common/build/src/discovery.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/googleapis-common/build/src/discovery.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/googleapis-common/build/src/discovery.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/googleapis-common/build/src/discovery.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/googleapis-common/build/src/discovery.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/googleapis-common/build/src/discovery.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/googleapis-common/build/src/discovery.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/googleapis-common/build/src/discovery.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/googleapis-common/build/src/discovery.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/googleapis-common/build/src/discovery.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/googleapis-common/build/src/discovery.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/googleapis-common/build/src/discovery.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/googleapis-common/build/src/discovery.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/googleapis-common/build/src/discovery.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/googleapis-common/build/src/discovery.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/googleapis-common/build/src/discovery.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/googleapis-common/build/src/discovery.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/googleapis-common/build/src/discovery.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/googleapis-common/build/src/discovery.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/googleapis-common/build/src/discovery.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/googleapis-common/build/src/discovery.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/googleapis-common/build/src/discovery.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/googleapis-common/build/src/discovery.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/googleapis-common/build/src/discovery.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/googleapis-common/build/src/discovery.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/googleapis-common/build/src/discovery.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/googleapis-common/build/src/discovery.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/googleapis-common/build/src/discovery.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/googleapis-common/build/src/discovery.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/googleapis-common/build/src/discovery.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/googleapis-common/build/src/discovery.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/googleapis-common/build/src/discovery.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/googleapis-common/build/src/discovery.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/googleapis-common/build/src/discovery.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/googleapis-common/build/src/discovery.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/googleapis-common/build/src/discovery.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/googleapis-common/build/src/discovery.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/googleapis-common/build/src/discovery.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/googleapis-common/build/src/discovery.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/googleapis-common/build/src/discovery.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/googleapis-common/build/src/discovery.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/googleapis-common/build/src/discovery.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/googleapis-common/build/src/discovery.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/googleapis-common/build/src/discovery.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/googleapis-common/build/src/discovery.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/googleapis-common/build/src/discovery.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/googleapis-common/build/src/discovery.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/googleapis-common/build/src/discovery.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/googleapis-common/build/src/discovery.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/googleapis-common/build/src/discovery.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/googleapis-common/build/src/discovery.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/googleapis-common/build/src/discovery.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/googleapis-common/build/src/discovery.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/googleapis-common/build/src/discovery.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/googleapis-common/build/src/discovery.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/googleapis-common/build/src/discovery.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/googleapis-common/build/src/discovery.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/googleapis-common/build/src/discovery.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/googleapis-common/build/src/discovery.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/googleapis-common/build/src/discovery.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/googleapis-common/build/src/discovery.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/googleapis-common/build/src/discovery.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/googleapis-common/build/src/discovery.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/googleapis-common/build/src/discovery.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/googleapis-common/build/src/discovery.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/googleapis-common/build/src/discovery.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/googleapis-common/build/src/discovery.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/googleapis-common/build/src/discovery.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/googleapis-common/build/src/discovery.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/googleapis-common/build/src/discovery.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/googleapis-common/build/src/discovery.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/googleapis-common/build/src/discovery.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/googleapis-common/build/src/discovery.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/googleapis-common/build/src/discovery.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/googleapis-common/build/src/discovery.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/googleapis-common/build/src/discovery.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/googleapis-common/build/src/discovery.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/googleapis-common/build/src/discovery.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/googleapis-common/build/src/discovery.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/googleapis-common/build/src/discovery.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/googleapis-common/build/src/discovery.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/googleapis-common/build/src/discovery.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/googleapis-common/build/src/discovery.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/googleapis-common/build/src/discovery.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/googleapis-common/build/src/discovery.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/googleapis-common/build/src/discovery.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/googleapis-common/build/src/discovery.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/googleapis-common/build/src/discovery.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/googleapis-common/build/src/discovery.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}}],"sources":{"../node_modules/googleapis-common/build/src/discovery.js":"\"use strict\";\n// Copyright 2014-2016, Google, Inc.\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst fs = require(\"fs\");\nconst google_auth_library_1 = require(\"google-auth-library\");\nconst pify = require(\"pify\");\nconst url = require(\"url\");\nconst util = require(\"util\");\nconst apirequest_1 = require(\"./apirequest\");\nconst endpoint_1 = require(\"./endpoint\");\nconst fsp = pify(fs);\nclass Discovery {\n    /**\n     * Discovery for discovering API endpoints\n     *\n     * @param options Options for discovery\n     */\n    constructor(options) {\n        this.transporter = new google_auth_library_1.DefaultTransporter();\n        this.options = options || {};\n    }\n    /**\n     * Generate and Endpoint from an endpoint schema object.\n     *\n     * @param schema The schema from which to generate the Endpoint.\n     * @return A function that creates an endpoint.\n     */\n    makeEndpoint(schema) {\n        return (options) => {\n            const ep = new endpoint_1.Endpoint(options);\n            ep.applySchema(ep, schema, schema, ep);\n            return ep;\n        };\n    }\n    /**\n     * Log output of generator. Works just like console.log\n     */\n    log(...args) {\n        if (this.options && this.options.debug) {\n            console.log(...args);\n        }\n    }\n    /**\n     * Generate all APIs and return as in-memory object.\n     * @param discoveryUrl\n     */\n    discoverAllAPIs(discoveryUrl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const headers = this.options.includePrivate ? {} : { 'X-User-Ip': '0.0.0.0' };\n            const res = yield this.transporter.request({ url: discoveryUrl, headers });\n            const items = res.data.items;\n            const apis = yield Promise.all(items.map((api) => __awaiter(this, void 0, void 0, function* () {\n                const endpointCreator = yield this.discoverAPI(api.discoveryRestUrl);\n                return { api, endpointCreator };\n            })));\n            const versionIndex = {};\n            // tslint:disable-next-line no-any\n            const apisIndex = {};\n            for (const set of apis) {\n                if (!apisIndex[set.api.name]) {\n                    versionIndex[set.api.name] = {};\n                    apisIndex[set.api.name] = (options) => {\n                        const type = typeof options;\n                        let version;\n                        if (type === 'string') {\n                            version = options;\n                            options = {};\n                        }\n                        else if (type === 'object') {\n                            version = options.version;\n                            delete options.version;\n                        }\n                        else {\n                            throw new Error('Argument error: Accepts only string or object');\n                        }\n                        try {\n                            const ep = \n                            // tslint:disable-next-line: no-any\n                            set.endpointCreator(options, this);\n                            return Object.freeze(ep); // create new & freeze\n                        }\n                        catch (e) {\n                            throw new Error(util.format('Unable to load endpoint %s(\"%s\"): %s', set.api.name, version, e.message));\n                        }\n                    };\n                }\n                versionIndex[set.api.name][set.api.version] = set.endpointCreator;\n            }\n            return apisIndex;\n        });\n    }\n    /**\n     * Generate API file given discovery URL\n     *\n     * @param apiDiscoveryUrl URL or filename of discovery doc for API\n     * @returns A promise that resolves with a function that creates the endpoint\n     */\n    discoverAPI(apiDiscoveryUrl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (typeof apiDiscoveryUrl === 'string') {\n                const parts = url.parse(apiDiscoveryUrl);\n                if (apiDiscoveryUrl && !parts.protocol) {\n                    this.log('Reading from file ' + apiDiscoveryUrl);\n                    const file = yield fsp.readFile(apiDiscoveryUrl, { encoding: 'utf8' });\n                    return this.makeEndpoint(JSON.parse(file));\n                }\n                else {\n                    this.log('Requesting ' + apiDiscoveryUrl);\n                    const res = yield this.transporter.request({ url: apiDiscoveryUrl });\n                    return this.makeEndpoint(res.data);\n                }\n            }\n            else {\n                const options = apiDiscoveryUrl;\n                this.log('Requesting ' + options.url);\n                const url = options.url;\n                delete options.url;\n                const parameters = {\n                    options: { url, method: 'GET' },\n                    requiredParams: [],\n                    pathParams: [],\n                    params: options,\n                    context: { google: { _options: {} }, _options: {} }\n                };\n                const pcr = pify(apirequest_1.createAPIRequest);\n                const res = yield pcr(parameters);\n                return this.makeEndpoint(res.data);\n            }\n        });\n    }\n}\nexports.Discovery = Discovery;\n"},"lineCount":152}},"hash":"48c2c973e3a155aa9a3aa3ec8cf1301e","cacheData":{"env":{}}}