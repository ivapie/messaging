{"id":"node_modules/@google-cloud/firestore/build/src/transaction.js","dependencies":[{"name":"/Users/ivanpiedra/Desktop/test/package.json","includedInParent":true,"mtime":1550784608667},{"name":"/Users/ivanpiedra/Desktop/test/node_modules/@google-cloud/firestore/package.json","includedInParent":true,"mtime":1550784604715},{"name":"./reference","loc":{"line":18,"column":28},"parent":"/Users/ivanpiedra/Desktop/test/node_modules/@google-cloud/firestore/build/src/transaction.js","resolved":"/Users/ivanpiedra/Desktop/test/node_modules/@google-cloud/firestore/build/src/reference.js"},{"name":"./util","loc":{"line":20,"column":23},"parent":"/Users/ivanpiedra/Desktop/test/node_modules/@google-cloud/firestore/build/src/transaction.js","resolved":"/Users/ivanpiedra/Desktop/test/node_modules/@google-cloud/firestore/build/src/util.js"}],"generated":{"js":"\"use strict\";\n/*!\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar reference_1 = require(\"./reference\");\n\nvar util_1 = require(\"./util\");\n\nvar util_2 = require(\"./util\");\n/*!\n * Error message for transactional reads that were executed after performing\n * writes.\n */\n\n\nvar READ_AFTER_WRITE_ERROR_MSG = 'Firestore transactions require all reads to be executed before all writes.';\n/*!\n * Transactions can be retried if the initial stream opening errors out.\n */\n\nvar ALLOW_RETRIES = true;\n/**\n * A reference to a transaction.\n *\n * The Transaction object passed to a transaction's updateFunction provides\n * the methods to read and write data within the transaction context. See\n * [runTransaction()]{@link Firestore#runTransaction}.\n *\n * @class\n */\n\nvar Transaction =\n/*#__PURE__*/\nfunction () {\n  /**\n   * @private\n   * @hideconstructor\n   *\n   * @param firestore The Firestore Database client.\n   * @param previousTransaction If available, the failed transaction that is\n   * being retried.\n   */\n  function Transaction(firestore, previousTransaction) {\n    _classCallCheck(this, Transaction);\n\n    this._firestore = firestore;\n    this._validator = firestore._validator;\n    this._previousTransaction = previousTransaction;\n    this._writeBatch = firestore.batch();\n    this._requestTag = previousTransaction ? previousTransaction.requestTag : util_2.requestTag();\n  }\n  /**\n   * Retrieve a document or a query result from the database. Holds a\n   * pessimistic lock on all returned documents.\n   *\n   * @param {DocumentReference|Query} refOrQuery The document or query to\n   * return.\n   * @returns {Promise} A Promise that resolves with a DocumentSnapshot or\n   * QuerySnapshot for the returned documents.\n   *\n   * @example\n   * firestore.runTransaction(transaction => {\n   *   let documentRef = firestore.doc('col/doc');\n   *   return transaction.get(documentRef).then(doc => {\n   *     if (doc.exists) {\n   *       transaction.update(documentRef, { count: doc.get('count') + 1 });\n   *     } else {\n   *       transaction.create(documentRef, { count: 1 });\n   *     }\n   *   });\n   * });\n   */\n\n\n  _createClass(Transaction, [{\n    key: \"get\",\n    value: function get(refOrQuery) {\n      if (!this._writeBatch.isEmpty) {\n        throw new Error(READ_AFTER_WRITE_ERROR_MSG);\n      }\n\n      if (refOrQuery instanceof reference_1.DocumentReference) {\n        return this._firestore.getAll_([refOrQuery],\n        /* fieldMask= */\n        null, this._requestTag, this._transactionId).then(function (res) {\n          return Promise.resolve(res[0]);\n        });\n      }\n\n      if (refOrQuery instanceof reference_1.Query) {\n        return refOrQuery._get(this._transactionId);\n      }\n\n      throw new Error('Argument \"refOrQuery\" must be a DocumentRef or a Query.');\n    }\n    /**\n     * Retrieves multiple documents from Firestore. Holds a pessimistic lock on\n     * all returned documents.\n     *\n     * The first argument is required and must be of type `DocumentReference`\n     * followed by any additional `DocumentReference` documents. If used, the\n     * optional `ReadOptions` must be the last argument.\n     *\n     * @param {Array.<DocumentReference|ReadOptions>} documentRefsOrReadOptions\n     * The `DocumentReferences` to receive, followed by an optional field\n     * mask.\n     * @returns {Promise<Array.<DocumentSnapshot>>} A Promise that\n     * contains an array with the resulting document snapshots.\n     *\n     * @example\n     * let firstDoc = firestore.doc('col/doc1');\n     * let secondDoc = firestore.doc('col/doc2');\n     * let resultDoc = firestore.doc('col/doc3');\n     *\n     * firestore.runTransaction(transaction => {\n     *   return transaction.getAll(firstDoc, secondDoc).then(docs => {\n     *     transaction.set(resultDoc, {\n     *       sum: docs[0].get('count') + docs[1].get('count')\n     *     });\n     *   });\n     * });\n     */\n\n  }, {\n    key: \"getAll\",\n    value: function getAll() {\n      for (var _len = arguments.length, documentRefsOrReadOptions = new Array(_len), _key = 0; _key < _len; _key++) {\n        documentRefsOrReadOptions[_key] = arguments[_key];\n      }\n\n      if (!this._writeBatch.isEmpty) {\n        throw new Error(READ_AFTER_WRITE_ERROR_MSG);\n      }\n\n      this._validator.minNumberOfArguments('Transaction.getAll', arguments, 1);\n\n      var {\n        documents: documents,\n        fieldMask: fieldMask\n      } = util_1.parseGetAllArguments(this._validator, documentRefsOrReadOptions);\n      return this._firestore.getAll_(documents, fieldMask, this._requestTag, this._transactionId);\n    }\n    /**\n     * Create the document referred to by the provided\n     * [DocumentReference]{@link DocumentReference}. The operation will\n     * fail the transaction if a document exists at the specified location.\n     *\n     * @param {DocumentReference} documentRef A reference to the document to be\n     * created.\n     * @param {DocumentData} data The object data to serialize as the document.\n     * @returns {Transaction} This Transaction instance. Used for\n     * chaining method calls.\n     *\n     * @example\n     * firestore.runTransaction(transaction => {\n     *   let documentRef = firestore.doc('col/doc');\n     *   return transaction.get(documentRef).then(doc => {\n     *     if (!doc.exists) {\n     *       transaction.create(documentRef, { foo: 'bar' });\n     *     }\n     *   });\n     * });\n     */\n\n  }, {\n    key: \"create\",\n    value: function create(documentRef, data) {\n      this._writeBatch.create(documentRef, data);\n\n      return this;\n    }\n    /**\n     * Writes to the document referred to by the provided\n     * [DocumentReference]{@link DocumentReference}. If the document\n     * does not exist yet, it will be created. If you pass\n     * [SetOptions]{@link SetOptions}, the provided data can be merged into the\n     * existing document.\n     *\n     * @param {DocumentReference} documentRef A reference to the document to be\n     * set.\n     * @param {DocumentData} data The object to serialize as the document.\n     * @param {SetOptions=} options An object to configure the set behavior.\n     * @param {boolean=} options.merge - If true, set() merges the values\n     * specified in its data argument. Fields omitted from this set() call\n     * remain untouched.\n     * @param {Array.<string|FieldPath>=} options.mergeFields - If provided,\n     * set() only replaces the specified field paths. Any field path that is not\n     * specified is ignored and remains untouched.\n     * @returns {Transaction} This Transaction instance. Used for\n     * chaining method calls.\n     *\n     * @example\n     * firestore.runTransaction(transaction => {\n     *   let documentRef = firestore.doc('col/doc');\n     *   transaction.set(documentRef, { foo: 'bar' });\n     *   return Promise.resolve();\n     * });\n     */\n\n  }, {\n    key: \"set\",\n    value: function set(documentRef, data, options) {\n      this._writeBatch.set(documentRef, data, options);\n\n      return this;\n    }\n    /**\n     * Updates fields in the document referred to by the provided\n     * [DocumentReference]{@link DocumentReference}. The update will\n     * fail if applied to a document that does not exist.\n     *\n     * The update() method accepts either an object with field paths encoded as\n     * keys and field values encoded as values, or a variable number of arguments\n     * that alternate between field paths and field values. Nested fields can be\n     * updated by providing dot-separated field path strings or by providing\n     * FieldPath objects.\n     *\n     * A Precondition restricting this update can be specified as the last\n     * argument.\n     *\n     * @param {DocumentReference} documentRef A reference to the document to be\n     * updated.\n     * @param {UpdateData|string|FieldPath} dataOrField An object\n     * containing the fields and values with which to update the document\n     * or the path of the first field to update.\n     * @param {\n     * ...(Precondition|*|string|FieldPath)} preconditionOrValues -\n     * An alternating list of field paths and values to update or a Precondition\n     * to to enforce on this update.\n     * @returns {Transaction} This Transaction instance. Used for\n     * chaining method calls.\n     *\n     * @example\n     * firestore.runTransaction(transaction => {\n     *   let documentRef = firestore.doc('col/doc');\n     *   return transaction.get(documentRef).then(doc => {\n     *     if (doc.exists) {\n     *       transaction.update(documentRef, { count: doc.get('count') + 1 });\n     *     } else {\n     *       transaction.create(documentRef, { count: 1 });\n     *     }\n     *   });\n     * });\n     */\n\n  }, {\n    key: \"update\",\n    value: function update(documentRef, dataOrField) {\n      for (var _len2 = arguments.length, preconditionOrValues = new Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n        preconditionOrValues[_key2 - 2] = arguments[_key2];\n      }\n\n      this._validator.minNumberOfArguments('update', arguments, 2);\n\n      preconditionOrValues = Array.prototype.slice.call(arguments, 2);\n\n      this._writeBatch.update.apply(this._writeBatch, [documentRef, dataOrField].concat(preconditionOrValues));\n\n      return this;\n    }\n    /**\n     * Deletes the document referred to by the provided [DocumentReference]\n     * {@link DocumentReference}.\n     *\n     * @param {DocumentReference} documentRef A reference to the document to be\n     * deleted.\n     * @param {Precondition=} precondition A precondition to enforce for this\n     * delete.\n     * @param {Timestamp=} precondition.lastUpdateTime If set, enforces that the\n     * document was last updated at lastUpdateTime. Fails the transaction if the\n     * document doesn't exist or was last updated at a different time.\n     * @returns {Transaction} This Transaction instance. Used for\n     * chaining method calls.\n     *\n     * @example\n     * firestore.runTransaction(transaction => {\n     *   let documentRef = firestore.doc('col/doc');\n     *   transaction.delete(documentRef);\n     *   return Promise.resolve();\n     * });\n     */\n\n  }, {\n    key: \"delete\",\n    value: function _delete(documentRef, precondition) {\n      this._writeBatch.delete(documentRef, precondition);\n\n      return this;\n    }\n    /**\n     * Starts a transaction and obtains the transaction id from the server.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"begin\",\n    value: function begin() {\n      var _this = this;\n\n      var request = {\n        database: this._firestore.formattedName\n      };\n\n      if (this._previousTransaction) {\n        // tslint:disable-next-line no-any\n        request.options = {\n          readWrite: {\n            retryTransaction: this._previousTransaction._transactionId\n          }\n        };\n      }\n\n      return this._firestore.request('beginTransaction', request, this._requestTag, ALLOW_RETRIES).then(function (resp) {\n        _this._transactionId = resp.transaction;\n      });\n    }\n    /**\n     * Commits all queued-up changes in this transaction and releases all locks.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"commit\",\n    value: function commit() {\n      return this._writeBatch.commit_({\n        transactionId: this._transactionId,\n        requestTag: this._requestTag\n      }).then(function () {});\n    }\n    /**\n     * Releases all locks and rolls back this transaction.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"rollback\",\n    value: function rollback() {\n      var request = {\n        database: this._firestore.formattedName,\n        transaction: this._transactionId\n      };\n      return this._firestore.request('rollback', request, this._requestTag,\n      /* allowRetries= */\n      false);\n    }\n    /**\n     * Returns the tag to use with with all request for this Transaction.\n     * @private\n     * @return A unique client-generated identifier for this transaction.\n     */\n\n  }, {\n    key: \"requestTag\",\n    get: function () {\n      return this._requestTag;\n    }\n  }]);\n\n  return Transaction;\n}();\n\nexports.Transaction = Transaction;","map":{"mappings":[{"generated":{"line":1,"column":0},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":1,"column":0}},{"generated":{"line":2,"column":0},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":2,"column":0}},{"name":"Object","generated":{"line":24,"column":0},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":17,"column":0}},{"generated":{"line":24,"column":6},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":17,"column":6}},{"name":"defineProperty","generated":{"line":24,"column":7},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":17,"column":7}},{"generated":{"line":24,"column":21},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":17,"column":0}},{"name":"exports","generated":{"line":24,"column":22},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":17,"column":22}},{"generated":{"line":24,"column":29},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":17,"column":0}},{"generated":{"line":24,"column":31},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":17,"column":31}},{"generated":{"line":24,"column":43},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":17,"column":0}},{"generated":{"line":24,"column":45},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":17,"column":45}},{"name":"value","generated":{"line":25,"column":0},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":17,"column":47}},{"name":"value","generated":{"line":25,"column":2},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":17,"column":47}},{"generated":{"line":25,"column":7},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":17,"column":52}},{"generated":{"line":25,"column":9},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":17,"column":54}},{"generated":{"line":26,"column":0},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":17,"column":45}},{"generated":{"line":26,"column":1},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":17,"column":0}},{"generated":{"line":28,"column":0},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":18,"column":0}},{"name":"reference_1","generated":{"line":28,"column":4},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":18,"column":6}},{"generated":{"line":28,"column":15},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":18,"column":17}},{"name":"require","generated":{"line":28,"column":18},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":18,"column":20}},{"generated":{"line":28,"column":25},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":18,"column":27}},{"generated":{"line":28,"column":26},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":18,"column":28}},{"generated":{"line":28,"column":39},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":18,"column":27}},{"generated":{"line":28,"column":40},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":18,"column":0}},{"generated":{"line":30,"column":0},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":19,"column":0}},{"name":"util_1","generated":{"line":30,"column":4},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":19,"column":6}},{"generated":{"line":30,"column":10},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":19,"column":12}},{"name":"require","generated":{"line":30,"column":13},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":19,"column":15}},{"generated":{"line":30,"column":20},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":19,"column":22}},{"generated":{"line":30,"column":21},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":19,"column":23}},{"generated":{"line":30,"column":29},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":19,"column":22}},{"generated":{"line":30,"column":30},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":19,"column":0}},{"generated":{"line":32,"column":0},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":20,"column":0}},{"name":"util_2","generated":{"line":32,"column":4},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":20,"column":6}},{"generated":{"line":32,"column":10},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":20,"column":12}},{"name":"require","generated":{"line":32,"column":13},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":20,"column":15}},{"generated":{"line":32,"column":20},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":20,"column":22}},{"generated":{"line":32,"column":21},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":20,"column":23}},{"generated":{"line":32,"column":29},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":20,"column":22}},{"generated":{"line":32,"column":30},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":20,"column":0}},{"generated":{"line":33,"column":0},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":21,"column":0}},{"generated":{"line":39,"column":0},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":25,"column":0}},{"name":"READ_AFTER_WRITE_ERROR_MSG","generated":{"line":39,"column":4},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":25,"column":6}},{"generated":{"line":39,"column":30},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":25,"column":32}},{"generated":{"line":39,"column":33},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":25,"column":35}},{"generated":{"line":39,"column":109},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":25,"column":0}},{"generated":{"line":40,"column":0},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":26,"column":0}},{"generated":{"line":44,"column":0},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":29,"column":0}},{"name":"ALLOW_RETRIES","generated":{"line":44,"column":4},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":29,"column":6}},{"generated":{"line":44,"column":17},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":29,"column":19}},{"generated":{"line":44,"column":20},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":29,"column":22}},{"generated":{"line":44,"column":24},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":29,"column":0}},{"generated":{"line":45,"column":0},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":30,"column":0}},{"name":"Transaction","generated":{"line":55,"column":4},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":39,"column":6}},{"generated":{"line":58,"column":0},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":40,"column":4}},{"generated":{"line":66,"column":0},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":48,"column":4}},{"name":"firestore","generated":{"line":66,"column":23},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":48,"column":16}},{"generated":{"line":66,"column":32},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":48,"column":4}},{"name":"previousTransaction","generated":{"line":66,"column":34},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":48,"column":27}},{"generated":{"line":66,"column":53},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":48,"column":4}},{"generated":{"line":66,"column":55},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":48,"column":48}},{"generated":{"line":67,"column":0},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":48,"column":48}},{"generated":{"line":69,"column":0},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":49,"column":8}},{"name":"_firestore","generated":{"line":69,"column":9},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":49,"column":13}},{"generated":{"line":69,"column":19},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":49,"column":8}},{"name":"firestore","generated":{"line":69,"column":22},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":49,"column":26}},{"generated":{"line":69,"column":31},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":49,"column":8}},{"generated":{"line":70,"column":0},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":50,"column":8}},{"name":"_validator","generated":{"line":70,"column":9},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":50,"column":13}},{"generated":{"line":70,"column":19},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":50,"column":8}},{"name":"firestore","generated":{"line":70,"column":22},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":50,"column":26}},{"generated":{"line":70,"column":31},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":50,"column":35}},{"name":"_validator","generated":{"line":70,"column":32},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":50,"column":36}},{"generated":{"line":70,"column":42},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":50,"column":8}},{"generated":{"line":71,"column":0},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":51,"column":8}},{"name":"_previousTransaction","generated":{"line":71,"column":9},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":51,"column":13}},{"generated":{"line":71,"column":29},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":51,"column":8}},{"name":"previousTransaction","generated":{"line":71,"column":32},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":51,"column":36}},{"generated":{"line":71,"column":51},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":51,"column":8}},{"generated":{"line":72,"column":0},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":52,"column":8}},{"name":"_writeBatch","generated":{"line":72,"column":9},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":52,"column":13}},{"generated":{"line":72,"column":20},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":52,"column":8}},{"name":"firestore","generated":{"line":72,"column":23},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":52,"column":27}},{"generated":{"line":72,"column":32},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":52,"column":36}},{"name":"batch","generated":{"line":72,"column":33},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":52,"column":37}},{"generated":{"line":72,"column":38},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":52,"column":27}},{"generated":{"line":72,"column":40},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":52,"column":8}},{"generated":{"line":73,"column":0},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":53,"column":8}},{"name":"_requestTag","generated":{"line":73,"column":9},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":53,"column":13}},{"generated":{"line":73,"column":20},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":53,"column":8}},{"name":"previousTransaction","generated":{"line":73,"column":23},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":54,"column":12}},{"generated":{"line":73,"column":42},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":54,"column":31}},{"name":"previousTransaction","generated":{"line":73,"column":45},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":54,"column":34}},{"generated":{"line":73,"column":64},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":54,"column":53}},{"name":"requestTag","generated":{"line":73,"column":65},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":54,"column":54}},{"generated":{"line":73,"column":75},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":54,"column":31}},{"name":"util_2","generated":{"line":73,"column":78},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":54,"column":67}},{"generated":{"line":73,"column":84},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":54,"column":73}},{"name":"requestTag","generated":{"line":73,"column":85},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":54,"column":74}},{"generated":{"line":73,"column":95},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":54,"column":67}},{"generated":{"line":73,"column":97},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":53,"column":8}},{"generated":{"line":74,"column":0},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":55,"column":5}},{"generated":{"line":75,"column":0},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":56,"column":4}},{"name":"refOrQuery","generated":{"line":100,"column":24},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":77,"column":8}},{"generated":{"line":100,"column":36},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":77,"column":20}},{"generated":{"line":101,"column":0},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":78,"column":8}},{"generated":{"line":101,"column":10},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":78,"column":12}},{"generated":{"line":101,"column":11},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":78,"column":13}},{"name":"_writeBatch","generated":{"line":101,"column":16},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":78,"column":18}},{"generated":{"line":101,"column":27},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":78,"column":13}},{"name":"isEmpty","generated":{"line":101,"column":28},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":78,"column":30}},{"generated":{"line":101,"column":35},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":78,"column":8}},{"generated":{"line":101,"column":37},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":78,"column":39}},{"generated":{"line":102,"column":0},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":79,"column":12}},{"generated":{"line":102,"column":14},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":79,"column":18}},{"name":"Error","generated":{"line":102,"column":18},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":79,"column":22}},{"generated":{"line":102,"column":23},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":79,"column":18}},{"name":"READ_AFTER_WRITE_ERROR_MSG","generated":{"line":102,"column":24},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":79,"column":28}},{"generated":{"line":102,"column":50},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":79,"column":18}},{"generated":{"line":102,"column":51},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":79,"column":12}},{"generated":{"line":103,"column":0},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":80,"column":9}},{"generated":{"line":105,"column":0},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":81,"column":8}},{"name":"refOrQuery","generated":{"line":105,"column":10},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":81,"column":12}},{"generated":{"line":105,"column":20},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":81,"column":22}},{"name":"reference_1","generated":{"line":105,"column":32},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":81,"column":34}},{"generated":{"line":105,"column":43},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":81,"column":45}},{"name":"DocumentReference","generated":{"line":105,"column":44},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":81,"column":46}},{"generated":{"line":105,"column":61},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":81,"column":8}},{"generated":{"line":105,"column":63},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":81,"column":65}},{"generated":{"line":106,"column":0},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":82,"column":12}},{"generated":{"line":106,"column":15},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":82,"column":19}},{"name":"_firestore","generated":{"line":106,"column":20},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":82,"column":24}},{"generated":{"line":106,"column":30},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":82,"column":19}},{"name":"getAll_","generated":{"line":106,"column":31},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":83,"column":17}},{"generated":{"line":106,"column":38},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":82,"column":19}},{"generated":{"line":106,"column":39},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":83,"column":25}},{"name":"refOrQuery","generated":{"line":106,"column":40},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":83,"column":26}},{"generated":{"line":106,"column":50},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":83,"column":25}},{"generated":{"line":106,"column":51},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":82,"column":19}},{"generated":{"line":107,"column":0},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":83,"column":39}},{"generated":{"line":108,"column":0},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":83,"column":56}},{"generated":{"line":108,"column":12},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":82,"column":19}},{"generated":{"line":108,"column":14},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":83,"column":62}},{"name":"_requestTag","generated":{"line":108,"column":19},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":83,"column":67}},{"generated":{"line":108,"column":30},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":82,"column":19}},{"generated":{"line":108,"column":32},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":83,"column":80}},{"name":"_transactionId","generated":{"line":108,"column":37},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":83,"column":85}},{"generated":{"line":108,"column":51},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":82,"column":19}},{"name":"then","generated":{"line":108,"column":53},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":84,"column":17}},{"generated":{"line":108,"column":57},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":82,"column":19}},{"generated":{"line":108,"column":58},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":84,"column":22}},{"name":"res","generated":{"line":108,"column":68},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":84,"column":22}},{"generated":{"line":108,"column":71},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":84,"column":25}},{"generated":{"line":108,"column":73},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":84,"column":29}},{"generated":{"line":109,"column":0},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":85,"column":16}},{"name":"Promise","generated":{"line":109,"column":17},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":85,"column":23}},{"generated":{"line":109,"column":24},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":85,"column":30}},{"name":"resolve","generated":{"line":109,"column":25},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":85,"column":31}},{"generated":{"line":109,"column":32},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":85,"column":23}},{"name":"res","generated":{"line":109,"column":33},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":85,"column":39}},{"generated":{"line":109,"column":36},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":85,"column":42}},{"generated":{"line":109,"column":37},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":85,"column":43}},{"generated":{"line":109,"column":38},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":85,"column":42}},{"generated":{"line":109,"column":39},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":85,"column":23}},{"generated":{"line":109,"column":40},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":85,"column":16}},{"generated":{"line":110,"column":0},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":86,"column":13}},{"generated":{"line":110,"column":9},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":82,"column":19}},{"generated":{"line":110,"column":10},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":82,"column":12}},{"generated":{"line":111,"column":0},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":87,"column":9}},{"generated":{"line":113,"column":0},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":88,"column":8}},{"name":"refOrQuery","generated":{"line":113,"column":10},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":88,"column":12}},{"generated":{"line":113,"column":20},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":88,"column":22}},{"name":"reference_1","generated":{"line":113,"column":32},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":88,"column":34}},{"generated":{"line":113,"column":43},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":88,"column":45}},{"name":"Query","generated":{"line":113,"column":44},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":88,"column":46}},{"generated":{"line":113,"column":49},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":88,"column":8}},{"generated":{"line":113,"column":51},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":88,"column":53}},{"generated":{"line":114,"column":0},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":89,"column":12}},{"name":"refOrQuery","generated":{"line":114,"column":15},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":89,"column":19}},{"generated":{"line":114,"column":25},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":89,"column":29}},{"name":"_get","generated":{"line":114,"column":26},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":89,"column":30}},{"generated":{"line":114,"column":30},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":89,"column":19}},{"generated":{"line":114,"column":31},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":89,"column":35}},{"name":"_transactionId","generated":{"line":114,"column":36},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":89,"column":40}},{"generated":{"line":114,"column":50},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":89,"column":19}},{"generated":{"line":114,"column":51},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":89,"column":12}},{"generated":{"line":115,"column":0},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":90,"column":9}},{"generated":{"line":117,"column":0},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":91,"column":8}},{"generated":{"line":117,"column":12},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":91,"column":14}},{"name":"Error","generated":{"line":117,"column":16},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":91,"column":18}},{"generated":{"line":117,"column":21},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":91,"column":14}},{"generated":{"line":117,"column":22},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":91,"column":24}},{"generated":{"line":117,"column":79},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":91,"column":14}},{"generated":{"line":117,"column":80},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":91,"column":8}},{"generated":{"line":118,"column":0},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":92,"column":5}},{"generated":{"line":119,"column":0},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":93,"column":4}},{"generated":{"line":149,"column":29},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":120,"column":41}},{"generated":{"line":150,"column":0},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":120,"column":41}},{"name":"documentRefsOrReadOptions","generated":{"line":150,"column":40},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":120,"column":14}},{"generated":{"line":150,"column":65},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":120,"column":41}},{"name":"documentRefsOrReadOptions","generated":{"line":151,"column":0},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":120,"column":14}},{"name":"documentRefsOrReadOptions","generated":{"line":151,"column":8},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":120,"column":14}},{"generated":{"line":151,"column":33},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":120,"column":41}},{"generated":{"line":152,"column":0},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":120,"column":41}},{"generated":{"line":154,"column":0},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":121,"column":8}},{"generated":{"line":154,"column":10},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":121,"column":12}},{"generated":{"line":154,"column":11},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":121,"column":13}},{"name":"_writeBatch","generated":{"line":154,"column":16},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":121,"column":18}},{"generated":{"line":154,"column":27},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":121,"column":13}},{"name":"isEmpty","generated":{"line":154,"column":28},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":121,"column":30}},{"generated":{"line":154,"column":35},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":121,"column":8}},{"generated":{"line":154,"column":37},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":121,"column":39}},{"generated":{"line":155,"column":0},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":122,"column":12}},{"generated":{"line":155,"column":14},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":122,"column":18}},{"name":"Error","generated":{"line":155,"column":18},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":122,"column":22}},{"generated":{"line":155,"column":23},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":122,"column":18}},{"name":"READ_AFTER_WRITE_ERROR_MSG","generated":{"line":155,"column":24},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":122,"column":28}},{"generated":{"line":155,"column":50},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":122,"column":18}},{"generated":{"line":155,"column":51},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":122,"column":12}},{"generated":{"line":156,"column":0},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":123,"column":9}},{"generated":{"line":158,"column":0},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":124,"column":8}},{"name":"_validator","generated":{"line":158,"column":11},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":124,"column":13}},{"generated":{"line":158,"column":21},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":124,"column":8}},{"name":"minNumberOfArguments","generated":{"line":158,"column":22},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":124,"column":24}},{"generated":{"line":158,"column":42},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":124,"column":8}},{"generated":{"line":158,"column":43},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":124,"column":45}},{"generated":{"line":158,"column":63},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":124,"column":8}},{"name":"arguments","generated":{"line":158,"column":65},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":124,"column":67}},{"generated":{"line":158,"column":74},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":124,"column":8}},{"generated":{"line":158,"column":76},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":124,"column":78}},{"generated":{"line":158,"column":77},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":124,"column":8}},{"generated":{"line":160,"column":0},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":125,"column":8}},{"generated":{"line":160,"column":10},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":125,"column":14}},{"name":"documents","generated":{"line":161,"column":0},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":125,"column":16}},{"name":"documents","generated":{"line":161,"column":8},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":125,"column":16}},{"generated":{"line":161,"column":17},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":125,"column":25}},{"name":"documents","generated":{"line":161,"column":19},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":125,"column":16}},{"generated":{"line":161,"column":28},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":125,"column":14}},{"name":"fieldMask","generated":{"line":162,"column":0},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":125,"column":27}},{"name":"fieldMask","generated":{"line":162,"column":8},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":125,"column":27}},{"generated":{"line":162,"column":17},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":125,"column":36}},{"name":"fieldMask","generated":{"line":162,"column":19},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":125,"column":27}},{"generated":{"line":163,"column":0},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":125,"column":14}},{"name":"util_1","generated":{"line":163,"column":10},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":125,"column":41}},{"generated":{"line":163,"column":16},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":125,"column":47}},{"name":"parseGetAllArguments","generated":{"line":163,"column":17},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":125,"column":48}},{"generated":{"line":163,"column":37},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":125,"column":41}},{"generated":{"line":163,"column":38},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":125,"column":69}},{"name":"_validator","generated":{"line":163,"column":43},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":125,"column":74}},{"generated":{"line":163,"column":53},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":125,"column":41}},{"name":"documentRefsOrReadOptions","generated":{"line":163,"column":55},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":125,"column":86}},{"generated":{"line":163,"column":80},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":125,"column":41}},{"generated":{"line":163,"column":81},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":125,"column":8}},{"generated":{"line":164,"column":0},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":126,"column":8}},{"generated":{"line":164,"column":13},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":126,"column":15}},{"name":"_firestore","generated":{"line":164,"column":18},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":126,"column":20}},{"generated":{"line":164,"column":28},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":126,"column":15}},{"name":"getAll_","generated":{"line":164,"column":29},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":126,"column":31}},{"generated":{"line":164,"column":36},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":126,"column":15}},{"name":"documents","generated":{"line":164,"column":37},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":126,"column":39}},{"generated":{"line":164,"column":46},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":126,"column":15}},{"name":"fieldMask","generated":{"line":164,"column":48},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":126,"column":50}},{"generated":{"line":164,"column":57},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":126,"column":15}},{"generated":{"line":164,"column":59},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":126,"column":61}},{"name":"_requestTag","generated":{"line":164,"column":64},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":126,"column":66}},{"generated":{"line":164,"column":75},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":126,"column":15}},{"generated":{"line":164,"column":77},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":126,"column":79}},{"name":"_transactionId","generated":{"line":164,"column":82},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":126,"column":84}},{"generated":{"line":164,"column":96},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":126,"column":15}},{"generated":{"line":164,"column":97},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":126,"column":8}},{"generated":{"line":165,"column":0},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":127,"column":5}},{"generated":{"line":166,"column":0},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":128,"column":4}},{"name":"documentRef","generated":{"line":190,"column":27},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":149,"column":11}},{"name":"data","generated":{"line":190,"column":40},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":149,"column":24}},{"generated":{"line":190,"column":46},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":149,"column":30}},{"generated":{"line":191,"column":0},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":150,"column":8}},{"name":"_writeBatch","generated":{"line":191,"column":11},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":150,"column":13}},{"generated":{"line":191,"column":22},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":150,"column":8}},{"name":"create","generated":{"line":191,"column":23},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":150,"column":25}},{"generated":{"line":191,"column":29},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":150,"column":8}},{"name":"documentRef","generated":{"line":191,"column":30},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":150,"column":32}},{"generated":{"line":191,"column":41},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":150,"column":8}},{"name":"data","generated":{"line":191,"column":43},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":150,"column":45}},{"generated":{"line":191,"column":47},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":150,"column":8}},{"generated":{"line":193,"column":0},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":151,"column":8}},{"generated":{"line":193,"column":13},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":151,"column":15}},{"generated":{"line":193,"column":17},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":151,"column":8}},{"generated":{"line":194,"column":0},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":152,"column":5}},{"generated":{"line":195,"column":0},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":153,"column":4}},{"name":"documentRef","generated":{"line":225,"column":24},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":180,"column":8}},{"name":"data","generated":{"line":225,"column":37},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":180,"column":21}},{"name":"options","generated":{"line":225,"column":43},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":180,"column":27}},{"generated":{"line":225,"column":52},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":180,"column":36}},{"generated":{"line":226,"column":0},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":181,"column":8}},{"name":"_writeBatch","generated":{"line":226,"column":11},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":181,"column":13}},{"generated":{"line":226,"column":22},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":181,"column":8}},{"name":"set","generated":{"line":226,"column":23},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":181,"column":25}},{"generated":{"line":226,"column":26},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":181,"column":8}},{"name":"documentRef","generated":{"line":226,"column":27},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":181,"column":29}},{"generated":{"line":226,"column":38},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":181,"column":8}},{"name":"data","generated":{"line":226,"column":40},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":181,"column":42}},{"generated":{"line":226,"column":44},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":181,"column":8}},{"name":"options","generated":{"line":226,"column":46},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":181,"column":48}},{"generated":{"line":226,"column":53},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":181,"column":8}},{"generated":{"line":228,"column":0},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":182,"column":8}},{"generated":{"line":228,"column":13},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":182,"column":15}},{"generated":{"line":228,"column":17},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":182,"column":8}},{"generated":{"line":229,"column":0},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":183,"column":5}},{"generated":{"line":230,"column":0},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":184,"column":4}},{"name":"documentRef","generated":{"line":271,"column":27},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":222,"column":11}},{"name":"dataOrField","generated":{"line":271,"column":40},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":222,"column":24}},{"generated":{"line":271,"column":53},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":222,"column":62}},{"generated":{"line":272,"column":0},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":222,"column":62}},{"name":"preconditionOrValues","generated":{"line":272,"column":41},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":222,"column":40}},{"generated":{"line":272,"column":61},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":222,"column":62}},{"name":"preconditionOrValues","generated":{"line":273,"column":0},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":222,"column":40}},{"name":"preconditionOrValues","generated":{"line":273,"column":8},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":222,"column":40}},{"generated":{"line":273,"column":28},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":222,"column":62}},{"generated":{"line":274,"column":0},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":222,"column":62}},{"generated":{"line":276,"column":0},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":223,"column":8}},{"name":"_validator","generated":{"line":276,"column":11},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":223,"column":13}},{"generated":{"line":276,"column":21},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":223,"column":8}},{"name":"minNumberOfArguments","generated":{"line":276,"column":22},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":223,"column":24}},{"generated":{"line":276,"column":42},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":223,"column":8}},{"generated":{"line":276,"column":43},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":223,"column":45}},{"generated":{"line":276,"column":51},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":223,"column":8}},{"name":"arguments","generated":{"line":276,"column":53},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":223,"column":55}},{"generated":{"line":276,"column":62},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":223,"column":8}},{"generated":{"line":276,"column":64},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":223,"column":66}},{"generated":{"line":276,"column":65},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":223,"column":8}},{"name":"preconditionOrValues","generated":{"line":278,"column":0},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":224,"column":8}},{"name":"preconditionOrValues","generated":{"line":278,"column":6},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":224,"column":8}},{"generated":{"line":278,"column":26},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":224,"column":28}},{"name":"Array","generated":{"line":278,"column":29},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":224,"column":31}},{"generated":{"line":278,"column":34},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":224,"column":36}},{"name":"prototype","generated":{"line":278,"column":35},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":224,"column":37}},{"generated":{"line":278,"column":44},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":224,"column":31}},{"name":"slice","generated":{"line":278,"column":45},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":224,"column":47}},{"generated":{"line":278,"column":50},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":224,"column":31}},{"name":"call","generated":{"line":278,"column":51},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":224,"column":53}},{"generated":{"line":278,"column":55},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":224,"column":31}},{"name":"arguments","generated":{"line":278,"column":56},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":224,"column":58}},{"generated":{"line":278,"column":65},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":224,"column":31}},{"generated":{"line":278,"column":67},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":224,"column":69}},{"generated":{"line":278,"column":68},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":224,"column":31}},{"generated":{"line":278,"column":69},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":224,"column":8}},{"generated":{"line":280,"column":0},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":225,"column":8}},{"name":"_writeBatch","generated":{"line":280,"column":11},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":225,"column":13}},{"generated":{"line":280,"column":22},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":225,"column":8}},{"name":"update","generated":{"line":280,"column":23},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":225,"column":25}},{"generated":{"line":280,"column":29},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":225,"column":8}},{"name":"apply","generated":{"line":280,"column":30},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":225,"column":32}},{"generated":{"line":280,"column":35},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":225,"column":8}},{"generated":{"line":280,"column":36},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":225,"column":38}},{"name":"_writeBatch","generated":{"line":280,"column":41},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":225,"column":43}},{"generated":{"line":280,"column":52},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":225,"column":8}},{"generated":{"line":280,"column":54},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":225,"column":56}},{"name":"documentRef","generated":{"line":280,"column":55},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":226,"column":12}},{"generated":{"line":280,"column":66},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":225,"column":56}},{"name":"dataOrField","generated":{"line":280,"column":68},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":226,"column":25}},{"generated":{"line":280,"column":79},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":225,"column":56}},{"name":"concat","generated":{"line":280,"column":81},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":227,"column":10}},{"generated":{"line":280,"column":87},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":225,"column":56}},{"name":"preconditionOrValues","generated":{"line":280,"column":88},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":227,"column":17}},{"generated":{"line":280,"column":108},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":225,"column":56}},{"generated":{"line":280,"column":109},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":225,"column":8}},{"generated":{"line":282,"column":0},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":228,"column":8}},{"generated":{"line":282,"column":13},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":228,"column":15}},{"generated":{"line":282,"column":17},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":228,"column":8}},{"generated":{"line":283,"column":0},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":229,"column":5}},{"generated":{"line":284,"column":0},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":230,"column":4}},{"name":"documentRef","generated":{"line":308,"column":28},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":251,"column":11}},{"name":"precondition","generated":{"line":308,"column":41},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":251,"column":24}},{"generated":{"line":308,"column":55},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":251,"column":38}},{"generated":{"line":309,"column":0},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":252,"column":8}},{"name":"_writeBatch","generated":{"line":309,"column":11},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":252,"column":13}},{"generated":{"line":309,"column":22},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":252,"column":8}},{"name":"delete","generated":{"line":309,"column":23},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":252,"column":25}},{"generated":{"line":309,"column":29},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":252,"column":8}},{"name":"documentRef","generated":{"line":309,"column":30},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":252,"column":32}},{"generated":{"line":309,"column":41},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":252,"column":8}},{"name":"precondition","generated":{"line":309,"column":43},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":252,"column":45}},{"generated":{"line":309,"column":55},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":252,"column":8}},{"generated":{"line":311,"column":0},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":253,"column":8}},{"generated":{"line":311,"column":13},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":253,"column":15}},{"generated":{"line":311,"column":17},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":253,"column":8}},{"generated":{"line":312,"column":0},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":254,"column":5}},{"generated":{"line":313,"column":0},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":255,"column":4}},{"generated":{"line":321,"column":28},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":260,"column":12}},{"generated":{"line":322,"column":0},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":260,"column":12}},{"generated":{"line":324,"column":0},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":261,"column":8}},{"name":"request","generated":{"line":324,"column":10},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":261,"column":14}},{"generated":{"line":324,"column":17},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":261,"column":21}},{"generated":{"line":324,"column":20},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":261,"column":24}},{"name":"database","generated":{"line":325,"column":0},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":262,"column":12}},{"name":"database","generated":{"line":325,"column":8},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":262,"column":12}},{"generated":{"line":325,"column":16},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":262,"column":20}},{"generated":{"line":325,"column":18},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":262,"column":22}},{"name":"_firestore","generated":{"line":325,"column":23},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":262,"column":27}},{"generated":{"line":325,"column":33},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":262,"column":22}},{"name":"formattedName","generated":{"line":325,"column":34},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":262,"column":38}},{"generated":{"line":326,"column":0},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":261,"column":24}},{"generated":{"line":326,"column":7},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":261,"column":8}},{"generated":{"line":328,"column":0},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":264,"column":8}},{"generated":{"line":328,"column":10},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":264,"column":12}},{"name":"_previousTransaction","generated":{"line":328,"column":15},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":264,"column":17}},{"generated":{"line":328,"column":35},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":264,"column":8}},{"generated":{"line":328,"column":37},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":264,"column":39}},{"generated":{"line":329,"column":0},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":265,"column":12}},{"name":"request","generated":{"line":330,"column":0},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":266,"column":12}},{"name":"request","generated":{"line":330,"column":8},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":266,"column":12}},{"generated":{"line":330,"column":15},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":266,"column":19}},{"name":"options","generated":{"line":330,"column":16},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":266,"column":20}},{"generated":{"line":330,"column":23},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":266,"column":12}},{"generated":{"line":330,"column":26},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":266,"column":30}},{"name":"readWrite","generated":{"line":331,"column":0},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":267,"column":16}},{"name":"readWrite","generated":{"line":331,"column":10},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":267,"column":16}},{"generated":{"line":331,"column":19},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":267,"column":25}},{"generated":{"line":331,"column":21},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":267,"column":27}},{"name":"retryTransaction","generated":{"line":332,"column":0},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":268,"column":20}},{"name":"retryTransaction","generated":{"line":332,"column":12},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":268,"column":20}},{"generated":{"line":332,"column":28},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":268,"column":36}},{"generated":{"line":332,"column":30},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":268,"column":38}},{"name":"_previousTransaction","generated":{"line":332,"column":35},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":268,"column":43}},{"generated":{"line":332,"column":55},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":268,"column":38}},{"name":"_transactionId","generated":{"line":332,"column":56},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":268,"column":64}},{"generated":{"line":333,"column":0},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":267,"column":27}},{"generated":{"line":334,"column":0},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":266,"column":30}},{"generated":{"line":334,"column":9},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":266,"column":12}},{"generated":{"line":335,"column":0},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":271,"column":9}},{"generated":{"line":337,"column":0},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":272,"column":8}},{"generated":{"line":337,"column":13},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":272,"column":15}},{"name":"_firestore","generated":{"line":337,"column":18},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":272,"column":20}},{"generated":{"line":337,"column":28},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":272,"column":15}},{"name":"request","generated":{"line":337,"column":29},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":273,"column":13}},{"generated":{"line":337,"column":36},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":272,"column":15}},{"generated":{"line":337,"column":37},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":273,"column":21}},{"generated":{"line":337,"column":55},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":272,"column":15}},{"name":"request","generated":{"line":337,"column":57},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":273,"column":41}},{"generated":{"line":337,"column":64},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":272,"column":15}},{"generated":{"line":337,"column":66},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":273,"column":50}},{"name":"_requestTag","generated":{"line":337,"column":71},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":273,"column":55}},{"generated":{"line":337,"column":82},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":272,"column":15}},{"name":"ALLOW_RETRIES","generated":{"line":337,"column":84},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":273,"column":68}},{"generated":{"line":337,"column":97},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":272,"column":15}},{"name":"then","generated":{"line":337,"column":99},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":274,"column":13}},{"generated":{"line":337,"column":103},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":272,"column":15}},{"generated":{"line":337,"column":104},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":274,"column":18}},{"name":"resp","generated":{"line":337,"column":114},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":274,"column":18}},{"generated":{"line":337,"column":118},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":274,"column":22}},{"generated":{"line":337,"column":120},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":274,"column":26}},{"generated":{"line":338,"column":0},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":275,"column":12}},{"generated":{"line":338,"column":8},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":275,"column":12}},{"generated":{"line":338,"column":13},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":275,"column":16}},{"name":"_transactionId","generated":{"line":338,"column":14},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":275,"column":17}},{"generated":{"line":338,"column":28},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":275,"column":12}},{"name":"resp","generated":{"line":338,"column":31},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":275,"column":34}},{"generated":{"line":338,"column":35},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":275,"column":38}},{"name":"transaction","generated":{"line":338,"column":36},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":275,"column":39}},{"generated":{"line":338,"column":47},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":275,"column":12}},{"generated":{"line":339,"column":0},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":276,"column":9}},{"generated":{"line":339,"column":7},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":272,"column":15}},{"generated":{"line":339,"column":8},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":272,"column":8}},{"generated":{"line":340,"column":0},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":277,"column":5}},{"generated":{"line":341,"column":0},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":278,"column":4}},{"generated":{"line":349,"column":29},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":283,"column":13}},{"generated":{"line":350,"column":0},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":284,"column":8}},{"generated":{"line":350,"column":13},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":284,"column":15}},{"name":"_writeBatch","generated":{"line":350,"column":18},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":284,"column":20}},{"generated":{"line":350,"column":29},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":284,"column":15}},{"name":"commit_","generated":{"line":350,"column":30},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":285,"column":13}},{"generated":{"line":350,"column":37},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":284,"column":15}},{"generated":{"line":350,"column":38},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":285,"column":21}},{"name":"transactionId","generated":{"line":351,"column":0},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":286,"column":12}},{"name":"transactionId","generated":{"line":351,"column":8},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":286,"column":12}},{"generated":{"line":351,"column":21},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":286,"column":25}},{"generated":{"line":351,"column":23},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":286,"column":27}},{"name":"_transactionId","generated":{"line":351,"column":28},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":286,"column":32}},{"generated":{"line":351,"column":42},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":285,"column":21}},{"name":"requestTag","generated":{"line":352,"column":0},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":287,"column":12}},{"name":"requestTag","generated":{"line":352,"column":8},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":287,"column":12}},{"generated":{"line":352,"column":18},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":287,"column":22}},{"generated":{"line":352,"column":20},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":287,"column":24}},{"name":"_requestTag","generated":{"line":352,"column":25},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":287,"column":29}},{"generated":{"line":353,"column":0},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":285,"column":21}},{"generated":{"line":353,"column":7},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":284,"column":15}},{"name":"then","generated":{"line":353,"column":9},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":289,"column":13}},{"generated":{"line":353,"column":13},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":284,"column":15}},{"generated":{"line":353,"column":14},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":289,"column":18}},{"generated":{"line":353,"column":26},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":289,"column":24}},{"generated":{"line":353,"column":27},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":289,"column":27}},{"generated":{"line":353,"column":28},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":284,"column":15}},{"generated":{"line":353,"column":29},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":284,"column":8}},{"generated":{"line":354,"column":0},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":290,"column":5}},{"generated":{"line":355,"column":0},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":291,"column":4}},{"generated":{"line":363,"column":31},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":296,"column":15}},{"generated":{"line":364,"column":0},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":297,"column":8}},{"name":"request","generated":{"line":364,"column":10},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":297,"column":14}},{"generated":{"line":364,"column":17},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":297,"column":21}},{"generated":{"line":364,"column":20},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":297,"column":24}},{"name":"database","generated":{"line":365,"column":0},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":298,"column":12}},{"name":"database","generated":{"line":365,"column":8},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":298,"column":12}},{"generated":{"line":365,"column":16},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":298,"column":20}},{"generated":{"line":365,"column":18},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":298,"column":22}},{"name":"_firestore","generated":{"line":365,"column":23},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":298,"column":27}},{"generated":{"line":365,"column":33},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":298,"column":22}},{"name":"formattedName","generated":{"line":365,"column":34},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":298,"column":38}},{"generated":{"line":365,"column":47},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":297,"column":24}},{"name":"transaction","generated":{"line":366,"column":0},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":299,"column":12}},{"name":"transaction","generated":{"line":366,"column":8},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":299,"column":12}},{"generated":{"line":366,"column":19},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":299,"column":23}},{"generated":{"line":366,"column":21},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":299,"column":25}},{"name":"_transactionId","generated":{"line":366,"column":26},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":299,"column":30}},{"generated":{"line":367,"column":0},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":297,"column":24}},{"generated":{"line":367,"column":7},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":297,"column":8}},{"generated":{"line":368,"column":0},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":301,"column":8}},{"generated":{"line":368,"column":13},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":301,"column":15}},{"name":"_firestore","generated":{"line":368,"column":18},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":301,"column":20}},{"generated":{"line":368,"column":28},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":301,"column":15}},{"name":"request","generated":{"line":368,"column":29},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":301,"column":31}},{"generated":{"line":368,"column":36},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":301,"column":15}},{"generated":{"line":368,"column":37},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":301,"column":39}},{"generated":{"line":368,"column":47},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":301,"column":15}},{"name":"request","generated":{"line":368,"column":49},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":301,"column":51}},{"generated":{"line":368,"column":56},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":301,"column":15}},{"generated":{"line":368,"column":58},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":301,"column":60}},{"name":"_requestTag","generated":{"line":368,"column":63},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":301,"column":65}},{"generated":{"line":368,"column":74},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":301,"column":15}},{"generated":{"line":369,"column":0},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":301,"column":78}},{"generated":{"line":370,"column":0},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":301,"column":98}},{"generated":{"line":370,"column":11},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":301,"column":15}},{"generated":{"line":370,"column":12},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":301,"column":8}},{"generated":{"line":371,"column":0},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":302,"column":5}},{"generated":{"line":372,"column":0},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":303,"column":4}},{"generated":{"line":380,"column":21},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":308,"column":21}},{"generated":{"line":381,"column":0},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":309,"column":8}},{"generated":{"line":381,"column":13},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":309,"column":15}},{"name":"_requestTag","generated":{"line":381,"column":18},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":309,"column":20}},{"generated":{"line":381,"column":29},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":309,"column":8}},{"generated":{"line":382,"column":0},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":310,"column":5}},{"name":"exports","generated":{"line":388,"column":0},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":312,"column":0}},{"generated":{"line":388,"column":7},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":312,"column":7}},{"name":"Transaction","generated":{"line":388,"column":8},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":312,"column":8}},{"generated":{"line":388,"column":19},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":312,"column":0}},{"name":"Transaction","generated":{"line":388,"column":22},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":312,"column":22}},{"generated":{"line":388,"column":33},"source":"node_modules/@google-cloud/firestore/build/src/transaction.js","original":{"line":312,"column":0}}],"sources":{"node_modules/@google-cloud/firestore/build/src/transaction.js":"\"use strict\";\n/*!\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst reference_1 = require(\"./reference\");\nconst util_1 = require(\"./util\");\nconst util_2 = require(\"./util\");\n/*!\n * Error message for transactional reads that were executed after performing\n * writes.\n */\nconst READ_AFTER_WRITE_ERROR_MSG = 'Firestore transactions require all reads to be executed before all writes.';\n/*!\n * Transactions can be retried if the initial stream opening errors out.\n */\nconst ALLOW_RETRIES = true;\n/**\n * A reference to a transaction.\n *\n * The Transaction object passed to a transaction's updateFunction provides\n * the methods to read and write data within the transaction context. See\n * [runTransaction()]{@link Firestore#runTransaction}.\n *\n * @class\n */\nclass Transaction {\n    /**\n     * @private\n     * @hideconstructor\n     *\n     * @param firestore The Firestore Database client.\n     * @param previousTransaction If available, the failed transaction that is\n     * being retried.\n     */\n    constructor(firestore, previousTransaction) {\n        this._firestore = firestore;\n        this._validator = firestore._validator;\n        this._previousTransaction = previousTransaction;\n        this._writeBatch = firestore.batch();\n        this._requestTag =\n            previousTransaction ? previousTransaction.requestTag : util_2.requestTag();\n    }\n    /**\n     * Retrieve a document or a query result from the database. Holds a\n     * pessimistic lock on all returned documents.\n     *\n     * @param {DocumentReference|Query} refOrQuery The document or query to\n     * return.\n     * @returns {Promise} A Promise that resolves with a DocumentSnapshot or\n     * QuerySnapshot for the returned documents.\n     *\n     * @example\n     * firestore.runTransaction(transaction => {\n     *   let documentRef = firestore.doc('col/doc');\n     *   return transaction.get(documentRef).then(doc => {\n     *     if (doc.exists) {\n     *       transaction.update(documentRef, { count: doc.get('count') + 1 });\n     *     } else {\n     *       transaction.create(documentRef, { count: 1 });\n     *     }\n     *   });\n     * });\n     */\n    get(refOrQuery) {\n        if (!this._writeBatch.isEmpty) {\n            throw new Error(READ_AFTER_WRITE_ERROR_MSG);\n        }\n        if (refOrQuery instanceof reference_1.DocumentReference) {\n            return this._firestore\n                .getAll_([refOrQuery], /* fieldMask= */ null, this._requestTag, this._transactionId)\n                .then(res => {\n                return Promise.resolve(res[0]);\n            });\n        }\n        if (refOrQuery instanceof reference_1.Query) {\n            return refOrQuery._get(this._transactionId);\n        }\n        throw new Error('Argument \"refOrQuery\" must be a DocumentRef or a Query.');\n    }\n    /**\n     * Retrieves multiple documents from Firestore. Holds a pessimistic lock on\n     * all returned documents.\n     *\n     * The first argument is required and must be of type `DocumentReference`\n     * followed by any additional `DocumentReference` documents. If used, the\n     * optional `ReadOptions` must be the last argument.\n     *\n     * @param {Array.<DocumentReference|ReadOptions>} documentRefsOrReadOptions\n     * The `DocumentReferences` to receive, followed by an optional field\n     * mask.\n     * @returns {Promise<Array.<DocumentSnapshot>>} A Promise that\n     * contains an array with the resulting document snapshots.\n     *\n     * @example\n     * let firstDoc = firestore.doc('col/doc1');\n     * let secondDoc = firestore.doc('col/doc2');\n     * let resultDoc = firestore.doc('col/doc3');\n     *\n     * firestore.runTransaction(transaction => {\n     *   return transaction.getAll(firstDoc, secondDoc).then(docs => {\n     *     transaction.set(resultDoc, {\n     *       sum: docs[0].get('count') + docs[1].get('count')\n     *     });\n     *   });\n     * });\n     */\n    getAll(...documentRefsOrReadOptions) {\n        if (!this._writeBatch.isEmpty) {\n            throw new Error(READ_AFTER_WRITE_ERROR_MSG);\n        }\n        this._validator.minNumberOfArguments('Transaction.getAll', arguments, 1);\n        const { documents, fieldMask } = util_1.parseGetAllArguments(this._validator, documentRefsOrReadOptions);\n        return this._firestore.getAll_(documents, fieldMask, this._requestTag, this._transactionId);\n    }\n    /**\n     * Create the document referred to by the provided\n     * [DocumentReference]{@link DocumentReference}. The operation will\n     * fail the transaction if a document exists at the specified location.\n     *\n     * @param {DocumentReference} documentRef A reference to the document to be\n     * created.\n     * @param {DocumentData} data The object data to serialize as the document.\n     * @returns {Transaction} This Transaction instance. Used for\n     * chaining method calls.\n     *\n     * @example\n     * firestore.runTransaction(transaction => {\n     *   let documentRef = firestore.doc('col/doc');\n     *   return transaction.get(documentRef).then(doc => {\n     *     if (!doc.exists) {\n     *       transaction.create(documentRef, { foo: 'bar' });\n     *     }\n     *   });\n     * });\n     */\n    create(documentRef, data) {\n        this._writeBatch.create(documentRef, data);\n        return this;\n    }\n    /**\n     * Writes to the document referred to by the provided\n     * [DocumentReference]{@link DocumentReference}. If the document\n     * does not exist yet, it will be created. If you pass\n     * [SetOptions]{@link SetOptions}, the provided data can be merged into the\n     * existing document.\n     *\n     * @param {DocumentReference} documentRef A reference to the document to be\n     * set.\n     * @param {DocumentData} data The object to serialize as the document.\n     * @param {SetOptions=} options An object to configure the set behavior.\n     * @param {boolean=} options.merge - If true, set() merges the values\n     * specified in its data argument. Fields omitted from this set() call\n     * remain untouched.\n     * @param {Array.<string|FieldPath>=} options.mergeFields - If provided,\n     * set() only replaces the specified field paths. Any field path that is not\n     * specified is ignored and remains untouched.\n     * @returns {Transaction} This Transaction instance. Used for\n     * chaining method calls.\n     *\n     * @example\n     * firestore.runTransaction(transaction => {\n     *   let documentRef = firestore.doc('col/doc');\n     *   transaction.set(documentRef, { foo: 'bar' });\n     *   return Promise.resolve();\n     * });\n     */\n    set(documentRef, data, options) {\n        this._writeBatch.set(documentRef, data, options);\n        return this;\n    }\n    /**\n     * Updates fields in the document referred to by the provided\n     * [DocumentReference]{@link DocumentReference}. The update will\n     * fail if applied to a document that does not exist.\n     *\n     * The update() method accepts either an object with field paths encoded as\n     * keys and field values encoded as values, or a variable number of arguments\n     * that alternate between field paths and field values. Nested fields can be\n     * updated by providing dot-separated field path strings or by providing\n     * FieldPath objects.\n     *\n     * A Precondition restricting this update can be specified as the last\n     * argument.\n     *\n     * @param {DocumentReference} documentRef A reference to the document to be\n     * updated.\n     * @param {UpdateData|string|FieldPath} dataOrField An object\n     * containing the fields and values with which to update the document\n     * or the path of the first field to update.\n     * @param {\n     * ...(Precondition|*|string|FieldPath)} preconditionOrValues -\n     * An alternating list of field paths and values to update or a Precondition\n     * to to enforce on this update.\n     * @returns {Transaction} This Transaction instance. Used for\n     * chaining method calls.\n     *\n     * @example\n     * firestore.runTransaction(transaction => {\n     *   let documentRef = firestore.doc('col/doc');\n     *   return transaction.get(documentRef).then(doc => {\n     *     if (doc.exists) {\n     *       transaction.update(documentRef, { count: doc.get('count') + 1 });\n     *     } else {\n     *       transaction.create(documentRef, { count: 1 });\n     *     }\n     *   });\n     * });\n     */\n    update(documentRef, dataOrField, ...preconditionOrValues) {\n        this._validator.minNumberOfArguments('update', arguments, 2);\n        preconditionOrValues = Array.prototype.slice.call(arguments, 2);\n        this._writeBatch.update.apply(this._writeBatch, [\n            documentRef, dataOrField\n        ].concat(preconditionOrValues));\n        return this;\n    }\n    /**\n     * Deletes the document referred to by the provided [DocumentReference]\n     * {@link DocumentReference}.\n     *\n     * @param {DocumentReference} documentRef A reference to the document to be\n     * deleted.\n     * @param {Precondition=} precondition A precondition to enforce for this\n     * delete.\n     * @param {Timestamp=} precondition.lastUpdateTime If set, enforces that the\n     * document was last updated at lastUpdateTime. Fails the transaction if the\n     * document doesn't exist or was last updated at a different time.\n     * @returns {Transaction} This Transaction instance. Used for\n     * chaining method calls.\n     *\n     * @example\n     * firestore.runTransaction(transaction => {\n     *   let documentRef = firestore.doc('col/doc');\n     *   transaction.delete(documentRef);\n     *   return Promise.resolve();\n     * });\n     */\n    delete(documentRef, precondition) {\n        this._writeBatch.delete(documentRef, precondition);\n        return this;\n    }\n    /**\n     * Starts a transaction and obtains the transaction id from the server.\n     *\n     * @private\n     */\n    begin() {\n        const request = {\n            database: this._firestore.formattedName,\n        };\n        if (this._previousTransaction) {\n            // tslint:disable-next-line no-any\n            request.options = {\n                readWrite: {\n                    retryTransaction: this._previousTransaction._transactionId,\n                },\n            };\n        }\n        return this._firestore\n            .request('beginTransaction', request, this._requestTag, ALLOW_RETRIES)\n            .then(resp => {\n            this._transactionId = resp.transaction;\n        });\n    }\n    /**\n     * Commits all queued-up changes in this transaction and releases all locks.\n     *\n     * @private\n     */\n    commit() {\n        return this._writeBatch\n            .commit_({\n            transactionId: this._transactionId,\n            requestTag: this._requestTag,\n        })\n            .then(() => { });\n    }\n    /**\n     * Releases all locks and rolls back this transaction.\n     *\n     * @private\n     */\n    rollback() {\n        const request = {\n            database: this._firestore.formattedName,\n            transaction: this._transactionId,\n        };\n        return this._firestore.request('rollback', request, this._requestTag, /* allowRetries= */ false);\n    }\n    /**\n     * Returns the tag to use with with all request for this Transaction.\n     * @private\n     * @return A unique client-generated identifier for this transaction.\n     */\n    get requestTag() {\n        return this._requestTag;\n    }\n}\nexports.Transaction = Transaction;\n"},"lineCount":null}},"hash":"2b4ab20a3e77058d1e5a17650bfea2db","cacheData":{"env":{}}}