{"id":"node_modules/google-auth-library/node_modules/yallist/iterator.js","dependencies":[{"name":"/Users/ivanpiedra/Desktop/test/package.json","includedInParent":true,"mtime":1550784608667},{"name":"/Users/ivanpiedra/Desktop/test/node_modules/google-auth-library/node_modules/yallist/package.json","includedInParent":true,"mtime":1550784605202}],"generated":{"js":"'use strict'\nmodule.exports = function (Yallist) {\n  Yallist.prototype[Symbol.iterator] = function* () {\n    for (let walker = this.head; walker; walker = walker.next) {\n      yield walker.value\n    }\n  }\n}\n","map":{"mappings":[{"source":"node_modules/google-auth-library/node_modules/yallist/iterator.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/google-auth-library/node_modules/yallist/iterator.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/google-auth-library/node_modules/yallist/iterator.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/google-auth-library/node_modules/yallist/iterator.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/google-auth-library/node_modules/yallist/iterator.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/google-auth-library/node_modules/yallist/iterator.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/google-auth-library/node_modules/yallist/iterator.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/google-auth-library/node_modules/yallist/iterator.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/google-auth-library/node_modules/yallist/iterator.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}}],"sources":{"node_modules/google-auth-library/node_modules/yallist/iterator.js":"'use strict'\nmodule.exports = function (Yallist) {\n  Yallist.prototype[Symbol.iterator] = function* () {\n    for (let walker = this.head; walker; walker = walker.next) {\n      yield walker.value\n    }\n  }\n}\n"},"lineCount":9}},"hash":"0e6a536948c1f20e1ad288a02b1cbb2f","cacheData":{"env":{}}}