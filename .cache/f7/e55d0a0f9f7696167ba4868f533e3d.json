{"id":"node_modules/ent/decode.js","dependencies":[{"name":"/Users/ivanpiedra/Desktop/test/package.json","includedInParent":true,"mtime":1550784608667},{"name":"/Users/ivanpiedra/Desktop/test/node_modules/ent/package.json","includedInParent":true,"mtime":1550784605201},{"name":"punycode","loc":{"line":1,"column":23},"parent":"/Users/ivanpiedra/Desktop/test/node_modules/ent/decode.js","resolved":"/Users/ivanpiedra/Desktop/test/node_modules/punycode/punycode.js"},{"name":"./entities.json","loc":{"line":2,"column":23},"parent":"/Users/ivanpiedra/Desktop/test/node_modules/ent/decode.js","resolved":"/Users/ivanpiedra/Desktop/test/node_modules/ent/entities.json"}],"generated":{"js":"var punycode = require('punycode');\nvar entities = require('./entities.json');\n\nmodule.exports = decode;\n\nfunction decode (str) {\n    if (typeof str !== 'string') {\n        throw new TypeError('Expected a String');\n    }\n\n    return str.replace(/&(#?[^;\\W]+;?)/g, function (_, match) {\n        var m;\n        if (m = /^#(\\d+);?$/.exec(match)) {\n            return punycode.ucs2.encode([ parseInt(m[1], 10) ]);\n        } else if (m = /^#[Xx]([A-Fa-f0-9]+);?/.exec(match)) {\n            return punycode.ucs2.encode([ parseInt(m[1], 16) ]);\n        } else {\n            // named entity\n            var hasSemi = /;$/.test(match);\n            var withoutSemi = hasSemi ? match.replace(/;$/, '') : match;\n            var target = entities[withoutSemi] || (hasSemi && entities[match]);\n\n            if (typeof target === 'number') {\n                return punycode.ucs2.encode([ target ]);\n            } else if (typeof target === 'string') {\n                return target;\n            } else {\n                return '&' + match;\n            }\n        }\n    });\n}\n","map":{"mappings":[{"source":"node_modules/ent/decode.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/ent/decode.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/ent/decode.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/ent/decode.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/ent/decode.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/ent/decode.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/ent/decode.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/ent/decode.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/ent/decode.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/ent/decode.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/ent/decode.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/ent/decode.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/ent/decode.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/ent/decode.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/ent/decode.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/ent/decode.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/ent/decode.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/ent/decode.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/ent/decode.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/ent/decode.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/ent/decode.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/ent/decode.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/ent/decode.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/ent/decode.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/ent/decode.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/ent/decode.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/ent/decode.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/ent/decode.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/ent/decode.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/ent/decode.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/ent/decode.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/ent/decode.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/ent/decode.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}}],"sources":{"node_modules/ent/decode.js":"var punycode = require('punycode');\nvar entities = require('./entities.json');\n\nmodule.exports = decode;\n\nfunction decode (str) {\n    if (typeof str !== 'string') {\n        throw new TypeError('Expected a String');\n    }\n\n    return str.replace(/&(#?[^;\\W]+;?)/g, function (_, match) {\n        var m;\n        if (m = /^#(\\d+);?$/.exec(match)) {\n            return punycode.ucs2.encode([ parseInt(m[1], 10) ]);\n        } else if (m = /^#[Xx]([A-Fa-f0-9]+);?/.exec(match)) {\n            return punycode.ucs2.encode([ parseInt(m[1], 16) ]);\n        } else {\n            // named entity\n            var hasSemi = /;$/.test(match);\n            var withoutSemi = hasSemi ? match.replace(/;$/, '') : match;\n            var target = entities[withoutSemi] || (hasSemi && entities[match]);\n\n            if (typeof target === 'number') {\n                return punycode.ucs2.encode([ target ]);\n            } else if (typeof target === 'string') {\n                return target;\n            } else {\n                return '&' + match;\n            }\n        }\n    });\n}\n"},"lineCount":33}},"hash":"38dc5069f1ef6d03259575caf84371c8","cacheData":{"env":{}}}